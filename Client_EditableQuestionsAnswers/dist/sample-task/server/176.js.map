{"version":3,"file":"176.js","mappings":"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iB,6BAMAwB,QACA,CACA3C,0BACAK,sBAEA,uBAIA9O,8DACAA,8BACAA,uFAGAA,qCAEA,sBACAqR,iDAAsD,QAItDvG,+DAYA7F,oCACA,2BACAqM,uCACA7C,4CACAI,cACAF,8BAEA2C,iDAEA,YACA,kBACA7C,oCACAE,6BAGAA,0BACAF,kBACAE,8BAGA,WACA4C,cACA9C,uIAA+I,iBAAiB,KAChKI,cACAI,UACAN,QAGA3O,oDA5BA,gBA+BA8K,iEAYA7F,8BACAjF,wDACAyO,eACA,+FACA,KAEAI,cACAF,QACA,uBACA,cACAF,mBACAE,QACA1J,OACAwJ,iDACAI,cACAC,8BACAH,8BAEAQ,aACA,CACAV,aACAK,qBAEA,eASA9O,4CACAA,8CACAA,2CAEAA,wDACAA,yCACAA,yCACAA,qDCzLA,iBACAsO,qDAEAC,SACAE,wDACAI,cACAI,aAIAX,+CAEA,eAEAG,8BACAQ,UACAN,QACAH,qCAIAF,6BAGA,sCACAwB,UACA,2CACA,CACArB,sBACAI,gBAIAP,iDAEA,iBACAG,uBACAQ,UACAN,QACAQ,gBACAqC,SACA1B,WAIA,iBACArB,6CACAQ,UACAN,QACAW,UACA,kBACA,CACAb,qBACAI,gBAGAM,gBACAqC,SACA1B,SACAP,qDAIAjB,sCACAA,gCAIAA,oDACAe,UACAZ,iIACAI,cACAI,aAxEA,CA4ECjP,mBC5EDA,mDACAuO,SACAE,+CACAI,eAEAL,QACAC,8DACAE,QACAC,iBAKAI,8BAQAK,UAEAZ,yGACAE,QACA8C,QACAhD,YACAK,mBAEApM,sBACA8O,oCAGAlC,UACAb,mDACAE,QACA6C,sCAKAxR,8CACA+O,SACA,oHACA,CACAN,mCACAI,kBAKA7O,iDAEAwR,oCAGAxR,gDACA,mBACAyO,qCACAK,iBAEApM,aACA+L,kBACAK,kBAEA4C,WACAjD,qCACAK,iBAEA6C,6BACAC,MACAnD,mBACAK,iBAEAgB,UACArB,0DACAI,iBAIA7O,0EChFA,iBAEAsO,kEACA,cACAG,uLACAI,cACAI,UACAN,aAEAkD,kGAIAvD,yCACA,qDAEA,2FAEA,qCAIAA,6CACA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","names":["constructor","platformId","questionAnswerService","this","highlightAll","setTimeout","convertHtmlIntoStringForAllElements","Prism","hightLightAgain","highlighted","highLight","code","language","highlight","languages","html","convertHtmlIntoString","text","replace","RegExp","contents","getWindow","document","querySelectorAll","languageHtmlCssJavascriptClass","length","i","content","innerHTML","indexOf","startTagSymbol","endTagSymbol","convertHtmlIntoStringForCodeContent","answerElement","__name","HightlightService","_angular_core__WEBPACK_IMPORTED_MODULE_13__","factory","core","loaderService","cd","highlightService","question","answer","rank","editable","spellcheck","minHeight","maxHeight","placeholder","translate","sanitize","outline","defaultParagraphSeparator","customClasses","name","class","tag","toolbarHiddenButtons","ngOnInit","editMode","getQuestionTypes","display","subscribe","response","questionTypes","closeAddEditPopup","popupEvent","emit","addQuestionMarkIfNotPresent","trimmedQuestion","trim","lastCharacter","charAt","convertAnswerHtmlIntoString","tempElement","createElement","tempDiv","forEach","heading","textAlign","style","outerHTML","formattedAnswer","tempSattu","parser","DOMParser","parseFromString","value","fontTag","querySelector","attributes","color","saveInterviewQuestionAnswer","console","log","interviewQuestion","updateUserPost","addUserPost","updateAnswer","onChange","event","checkForImage","onBlur","editor","textArea","nativeElement","image","classList","add","makeResizable","addEventListener","e","preventDefault","initialWidth","clientWidth","initialHeight","clientHeight","startX","clientX","startY","clientY","resize","e2","width","height","stopResize","window","removeEventListener","oxw","closePopup","UserBlogPopupComponent","selectors","kolkov_angular_editor","ctx","openPopup","showPopup","closeModal","addQuestionAnswer","questionAnswer","userBlogItems","push","openPopupToAddQuestionAnswer","UserPostComponent","routes","path","component","UserPostRoutingModule","router","UserPostModule","common","angular_fontawesome","fesm2015_forms","app_routing_module","http","module","__nested_webpack_require_623__","d","default","tiny_emitter_default","n","listen","listen_default","src_select","select_default","actions_cut","selectedText","fakeElement","options","ClipboardActionCopy","container","target","command","actions_copy","_typeof","obj","_options$action","action","actions_default","clipboard_typeof","descriptor","Object","staticProps","Constructor","subClass","superClass","o2","o","result","_assertThisInitialized","call","Reflect","_inherits","_this","resolveOptions","_createClass","key","trigger","clearSelection","actions","support","Clipboard2","clipboard","proto","element","module2","__nested_webpack_require_15749__","destroy","_delegate","elements","Array","callback","exports2","__nested_webpack_require_19113__","delegate","node","isReadOnly","range","selection","E","on","fn","once","self2","listener","evtArr","len","off","evts","liveEvents","__webpack_module_cache__","moduleId","exports","__nested_webpack_require_24495__","a","getter","enumerable","Prism2","comment","atrule","pattern","source","inside","rule","lookbehind","alias","keyword","url","greedy","function","punctuation","string","selector","property","important","markup","keywords","classNamePrefix","className","namespace","number","operator","constant","char","annotation","generics","import","static","javascript","extend","clike","insertBefore","regex","parameter","hashbang","interpolation","rest","addInlined","addAttribute","js","prolog","doctype","cdata","entity","env","includedCdataInside","def","variable","parent","statement","boolean","null","builtin","typeInside","decorator","at","generic","copyTextToClipboard","successful","copyInfo","err","navigator","fallbackCopyTextToClipboard","copy","attr","settings","linkCopy","setState","registerClipboard","getText","success","resetText","error","selectElementText","linkSpan","map","noop","opts","type","href","callbacks","pre","wrapper","toolbar","order","elementCallbacks","item","registerButton","template","_self","lang","uniqueId","plainTextGrammar","_","manual","disableWorkerMessageHandler","util","encode","tokens","Token","isArray","prototype","toString","slice","objId","__id","defineProperty","clone","visited","id","hasOwnProperty","deepClone","v","getLanguage","m","exec","toLowerCase","parentElement","setLanguage","currentScript","Error","src","stack","scripts","getElementsByTagName","isActive","defaultActivation","no","contains","plain","plaintext","txt","redef","before","insert","root","grammar","ret","token","newToken","old","DFS","propertyType","plugins","async","highlightAllUnder","hooks","run","apply","highlightElement","nodeName","textContent","highlightedCode","insertHighlightedCode","hasAttribute","setAttribute","Worker","worker","filename","onmessage","evt","data","postMessage","JSON","stringify","immediateClose","tokenize","tokenList","LinkedList","addAfter","head","matchGrammar","toArray","all","matchedStr","pos","lastIndex","match","lookbehindLength","index","startNode","startPos","rematch","patterns","j","cause","patternObj","global","flags","currentNode","next","tail","reach","str","removeCount","matchPattern","from","to","p","k","matchStr","after","removeFrom","prev","removeRange","nestedRematch","list","newNode","count","array","s","classes","aliases","join","message","parse","close","script","highlightAutomaticallyCallback","readyState","defer","requestAnimationFrame","WorkerGlobalScope","self","title","tagName","attrName","mathml","svg","xml","ssml","atom","rss","css","Element","matches","msMatchesSelector","webkitMatchesSelector","FAILURE_MESSAGE","status","EXTENSIONS","py","rb","ps1","psm1","sh","bat","h","tex","SELECTOR","loadFile","parseRange","appendChild","getAttribute","extension","autoloader","loadLanguages","lines","split","start","end","Math","max","min","String","fileHighlight","logged","warn","arguments","xhr","XMLHttpRequest","open","onreadystatechange","responseText","statusText","FAILURE_EMPTY_MESSAGE","send","Number","comma","undefined"],"sourceRoot":"webpack:///","sources":["./src/app/services/highlight-service/hightlight.service.ts","./src/app/user-blog-popup/user-blog-popup.component.html","./src/app/user-blog-popup/user-blog-popup.component.ts","./src/app/user-post/user-post.component.html","./src/app/user-post/user-post.component.ts","./src/app/user-post/user-post-routing.module.ts","./src/app/user-post/user-post.module.ts","./node_modules/clipboard/dist/clipboard.js","./node_modules/prismjs/components/prism-css.js","./node_modules/prismjs/components/prism-java.js","./node_modules/prismjs/components/prism-javascript.js","./node_modules/prismjs/components/prism-markup.js","./node_modules/prismjs/components/prism-sass.js","./node_modules/prismjs/components/prism-scss.js","./node_modules/prismjs/components/prism-typescript.js","./node_modules/prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard.js","./node_modules/prismjs/plugins/toolbar/prism-toolbar.js","./node_modules/prismjs/prism.js"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\r\n\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport 'clipboard';\r\n\r\nimport 'prismjs';\r\nimport 'prismjs/plugins/toolbar/prism-toolbar';\r\nimport 'prismjs/plugins/copy-to-clipboard/prism-copy-to-clipboard';\r\nimport 'prismjs/components/prism-css';\r\nimport 'prismjs/components/prism-javascript';\r\nimport 'prismjs/components/prism-java';\r\nimport 'prismjs/components/prism-markup';\r\nimport 'prismjs/components/prism-typescript';\r\nimport 'prismjs/components/prism-sass';\r\nimport 'prismjs/components/prism-scss';\r\nimport { QuestionAnswerService } from '../question-answer-service/question-answer.service';\r\n\r\ndeclare var Prism: any;\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class HightlightService {\r\n  languageHtmlCssJavascriptClass = '.language-html,.language-javascript,.language-css';\r\n  highlighted = false;\r\n  startTagSymbol = '&lt';\r\n  endTagSymbol = '&gt';\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platformId: Object,\r\n    private questionAnswerService: QuestionAnswerService\r\n  ) { }\r\n\r\n  highlightAll() {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      setTimeout(() => {\r\n        this.convertHtmlIntoStringForAllElements();\r\n        Prism.highlightAll();\r\n      })\r\n    }\r\n  }\r\n\r\n  hightLightAgain() {\r\n    this.highlighted = false;\r\n    this.highlightAll();\r\n  }\r\n\r\n  highLight(code, language) {\r\n    return Prism.highlight(code, Prism.languages.html, language)\r\n  }\r\n\r\n  convertHtmlIntoString(text: string) {\r\n    return text\r\n//      .replace(new RegExp('&', 'g'), '&amp;')\r\n      .replace(new RegExp('<', 'g'), '&lt;')\r\n      .replace(new RegExp('>', 'g'), '&gt;');\r\n  }\r\n\r\n  convertHtmlIntoStringForAllElements() {\r\n    if (this.questionAnswerService.platformId && !this.highlighted) {\r\n      let contents = this.questionAnswerService.getWindow().document.querySelectorAll(this.languageHtmlCssJavascriptClass);\r\n      if (contents && contents.length > 0) {\r\n        for (let i = 0; i < contents.length; i++) {\r\n          let content = contents[i];\r\n          if(content.innerHTML.indexOf(this.startTagSymbol) == -1 && content.innerHTML.indexOf(this.endTagSymbol) == -1) {\r\n             content.innerHTML = this.convertHtmlIntoString(content.innerHTML);\r\n          }\r\n        }\r\n        this.highlighted = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  convertHtmlIntoStringForCodeContent(answerElement) {\r\n    if (this.questionAnswerService.platformId) {\r\n      let contents = answerElement.querySelectorAll(this.languageHtmlCssJavascriptClass);\r\n      if (contents && contents.length > 0) {\r\n        for (let i = 0; i < contents.length; i++) {\r\n          let content = contents[i];\r\n//          if(content.innerHTML.indexOf(this.startTagSymbol) == -1 && content.innerHTML.indexOf(this.endTagSymbol) == -1) {\r\n             content.innerHTML = this.convertHtmlIntoString(content.innerHTML);\r\n //         }\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","<div class=\"modal\">\n    <div class=\"modal-content\">\n      <div>\n        <fieldset>\n          <legend>Add Article:</legend>\n          <div class=\"form-group row\">\n            <label for=\"question\" class=\"col-3 col-form-label\">Title</label>\n            <div class=\"col-9\">\n              <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.question\"\n                placeholder=\"Enter Article Title\" type=\"text\" class=\"form-control\"></textarea>\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"answer\" class=\"col-3 col-form-label\">Details</label>\n            <div class=\"col-9\">\n              <!-- angular editor -->\n              <div>\n                <angular-editor #editor id=\"editor1\" [(ngModel)]=\"interviewQuestion.answer\" [config]=\"config1\" (ngModelChange)=\"onChange($event)\" (blur)=\"onBlur($event)\">\n                </angular-editor>\n              </div>\n              <!-- angular editor -->\n              <!-- <textarea id=\"answer\" [(ngModel)]=\"interviewQuestion.answer\" placeholder=\"Enter Answer\" name=\"answer\"\n                cols=\"40\" rows=\"5\" class=\"form-control textarea \"></textarea> -->\n            </div>\n          </div>\n          <div class=\"form-group row\">\n            <label for=\"type\" class=\"col-3 col-form-label\">Type</label>\n            <div class=\"col-9\">\n              <select id=\"type\" name=\"type\" class=\"custom-select\" [(ngModel)]=\"interviewQuestion.questionType\">\n                <option *ngFor=\"let item of questionTypes\" [value]=\"item.questionType\">{{item.questionType}}</option>\n              </select>\n            </div>\n          </div>\n          <!-- <div class=\"form-group row\">\n            <label for=\"text\" class=\"col-3 col-form-label\">Email</label>\n            <div class=\"col-9\">\n              <input id=\"text\" [(ngModel)]=\"interviewQuestion.rank\" name=\"text\" placeholder=\"Enter your email\" type=\"text\"\n                class=\"form-control\">\n            </div>\n          </div> -->\n          <div class=\"form-group row\">\n            <div class=\"offset-3 col-md-3 col-4\">\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\"\n                (click)=\"saveInterviewQuestionAnswer()\">Submit</button>\n            </div>\n            <div class=\"col-md-3 col-4\">\n              <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\"\n                class=\"btn btn-danger btn-full-width\">Cancel</button>\n            </div>\n          </div>\n        </fieldset>\n      </div>\n    </div>\n  </div>\n  ","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\nimport { QuestionAnswerService } from \"./../services/question-answer-service/question-answer.service\";\nimport { LoaderService } from './../services/loader-service/loader.service';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { AngularEditorComponent, AngularEditorConfig } from '@kolkov/angular-editor';\nimport { FormsModule } from '@angular/forms';\n\n@Component({\n  selector: 'app-user-blog-popup',\n  templateUrl: './user-blog-popup.component.html',\n  styleUrls: ['./user-blog-popup.component.scss']\n})\nexport class UserBlogPopupComponent implements OnInit {\n  @Output() closePopup: EventEmitter<void> = new EventEmitter<void>();\n  @Output() questionAnswerSaved = new EventEmitter<any>();\n\n    @ViewChild(AngularEditorComponent) editor: AngularEditorComponent; // ViewChild reference to the AngularEditorComponent\n    editorContent: string = ''; // Initialize with an empty string or appropriate content\n  \n    questionTypes: any;\n    interviewQuestion: any = { question: '', answer: '', rank: '' };\n    @Input() editedItem;\n    editMode: Boolean = true;\n    @Output() popupEvent = new EventEmitter();\n    tempDiv = 'div';\n  \n    tempSattu: any;\n    constructor(\n      private questionAnswerService: QuestionAnswerService,\n      private loaderService: LoaderService,\n      private cd: ChangeDetectorRef,\n      private highlightService: HightlightService,\n    ) {\n    }\n  \n    ngOnInit(): void {\n  //    if (Object.keys(this.editedItem).length === 0 && this.editedItem.constructor === Object)\n        this.editMode = false;\n    //  this.interviewQuestion = JSON.parse(JSON.stringify(this.editedItem));\n      this.getQuestionTypes();\n    //  this.cd.detectChanges(); console.log('Initial Interview Question:', this.interviewQuestion);\n      // Call the highlightAll() method here\n      // this.highlightService.highlightAll();\n    }\n    getQuestionTypes() {\n      this.loaderService.display(true);\n      this.questionAnswerService.getQuestionTypes().subscribe(response => {\n        this.questionTypes = response;\n        this.loaderService.display(false);\n      });\n    }\n    closeAddEditPopup() {\n      this.popupEvent.emit('closeQuestionAnswerPopup');\n    }\n  \n    // convertCodeContentHtmlIntoString() {\n    //   var tempElement = document.createElement(this.tempDiv);\n    //   tempElement.innerHTML = this.interviewQuestion.answer;\n    //   this.highlightService.convertHtmlIntoStringForCodeContent(tempElement);\n    //   this.interviewQuestion.answer = tempElement.innerHTML;\n    // }\n  \n  \n    addQuestionMarkIfNotPresent(question: string) {\n      const trimmedQuestion = question.trim();\n      const lastCharacter = trimmedQuestion.charAt(trimmedQuestion.length - 1);\n  \n      if (lastCharacter !== '?' && lastCharacter !== '.' && lastCharacter !== ':') {\n        return trimmedQuestion + ' ?';\n      }\n  \n      return trimmedQuestion;\n    }\n  \n    convertAnswerHtmlIntoString(answer: string): string {\n      const tempElement = document.createElement(this.tempDiv);\n      tempElement.innerHTML = answer;\n      // Handle headings (h1 to h7)\n      const headings = tempElement.querySelectorAll('h1, h2, h3, h4, h5, h6, h7');\n      headings.forEach((heading: HTMLElement) => {\n        const textAlign = heading.style.textAlign;\n        if (textAlign === 'center') {\n          heading.outerHTML = `<div class=\"text-center\">${heading.outerHTML}</div>`;\n        } else if (textAlign === 'right') {\n          heading.outerHTML = `<div class=\"text-right\">${heading.outerHTML}</div>`;\n        } else if (textAlign === 'left') {\n          heading.outerHTML = `<div class=\"text-left\">${heading.outerHTML}</div>`;\n        }\n      });\n  \n  \n      // Replace placeholders with corresponding code section tags\n      tempElement.innerHTML = tempElement.innerHTML\n        .replace(/&lt;scss&gt;/g, '<div class=\"code-snippet\"><pre><code class=\"language-scss\">')\n        .replace(/&lt;\\/scss&gt;/g, '</code></pre></div>')\n        .replace(/&lt;html&gt;/g, '<div class=\"code-snippet\"><pre><code class=\"language-html\">')\n        .replace(/&lt;\\/html&gt;/g, '</code></pre></div>')\n        .replace(/&lt;typescript&gt;/g, '<div class=\"code-snippet\"><pre><code class=\"language-typescript\">')\n        .replace(/&lt;\\/typescript&gt;/g, '</code></pre></div>');\n  \n      let formattedAnswer = tempElement.innerHTML;\n  \n      // Additional adjustment to preserve line breaks within code sections\n      formattedAnswer = formattedAnswer.replace(/<p>/g, '\\n').replace(/<\\/p>/g, '');\n      this.tempSattu = formattedAnswer;\n      let parser = new DOMParser();\n      this.tempSattu = parser.parseFromString(this.tempSattu, 'text/html');\n      let fontTag = this.tempSattu.querySelector('font');\n      let value;\n      if(fontTag) {\n          value = fontTag.attributes.color.value;\n          formattedAnswer = formattedAnswer.replace(/<font[^>]*>/g, '<span style=\"color:'+ value +'\">').replace(/<\\/font>/g, '</span>');\n      }\n      return formattedAnswer;\n    }\n  \n    saveInterviewQuestionAnswer() {\n      console.log('Interview Question before save:', this.interviewQuestion);\n  \n      // Convert answer HTML into formatted string\n      this.interviewQuestion.answer = this.convertAnswerHtmlIntoString(this.interviewQuestion.answer);\n      // Wrap center-aligned <img> elements in a <div> with the 'img-center' class\n      this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"display: block; margin: 0 auto;\">/g, '<div class=\"img-center\">')\n        .replace(/<\\/img>/g, '</div>');\n  \n      // Wrap right-aligned <img> elements in a <div> with the 'img-right' class\n      this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"float: right;\">/g, '<div class=\"img-right\">')\n        .replace(/<\\/img>/g, '</div>');\n  \n      // Wrap right-aligned <img> elements in a <div> with the 'img-left' class\n      this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"float: left;\">/g, '<div class=\"img-left\">')\n        .replace(/<\\/img>/g, '</div>');\n      // Wrap center-aligned content in a <div> with the 'text-center' class\n      this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: center;\">/g, '<div class=\"text-center\">')\n        .replace(/<\\/p>/g, '</div>');\n  \n      // Wrap right-aligned content in a <div> with the 'text-right' class\n      this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: right;\">/g, '<div class=\"text-right\">')\n        .replace(/<\\/p>/g, '</div>');\n      // Wrap right-aligned content in a <div> with the 'text-left' class\n      this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: left;\">/g, '<div class=\"text-left\">')\n        .replace(/<\\/p>/g, '</div>');\n  \n      if (this.editMode) {\n        this.questionAnswerService.updateUserPost(this.interviewQuestion);\n      } else {\n        this.questionAnswerService.addUserPost(this.interviewQuestion);\n      }\n  \n      \n\n      this.closeAddEditPopup();\n      console.log('Interview Question after save:', this.interviewQuestion);\n    }\n  \n  \n    // angular editor\n    form: FormGroup;\n  \n    updateAnswer() {\n      this.interviewQuestion.answer = ''; // Assigning a value to the answer property\n    }\n  \n    config1: AngularEditorConfig = {\n      editable: true,\n      spellcheck: true,\n      minHeight: '5rem',\n      maxHeight: 'auto',\n      placeholder: 'Enter Article Details here...',\n      translate: 'no',\n      sanitize: false,\n      // toolbarPosition: 'top',\n      outline: true,\n      // defaultFontName: 'Comic Sans MS',\n      // defaultFontSize: '5',\n      // showToolbar: false,\n      defaultParagraphSeparator: 'p',\n      customClasses: [\n        {\n          name: 'quote',\n          class: 'quote',\n        },\n        {\n          name: 'redText',\n          class: 'redText'\n        },\n        {\n          name: 'text-center',\n          class: 'text-center',\n        },\n        {\n          name: 'text-right',\n          class: 'text-right',\n        },\n        {\n          name: 'img-center',\n          class: 'img-center',\n        },\n        {\n          name: 'img-right',\n          class: 'img-right',\n        },\n        {\n          name: 'titleText',\n          class: 'titleText',\n          tag: 'h1',\n        },\n      ],\n      toolbarHiddenButtons: [\n        // ['bold', 'italic'],\n        // ['fontSize']\n      ]\n    };\n  \n    onChange(event) {\n      console.log('changed');\n      this.interviewQuestion.answer = event; // Manually update the answer\n      this.checkForImage();\n    }\n  \n    onBlur(event) {\n      console.log('blur ' + event);\n      this.interviewQuestion.answer = this.editor.textArea.nativeElement.innerHTML;\n    }\n  \n    checkForImage() {\n      const editorElement = this.editor.textArea.nativeElement; // Access the underlying textarea element\n      const images = editorElement.querySelectorAll('img'); // Select all images within the editoror\n  \n      images.forEach((image) => {\n        image.classList.add('your-dynamic-class1'); // Add your class to the image element\n        this.makeResizable(image); // Call the method to make images resizable\n      });\n    }\n  \n    makeResizable(image: HTMLImageElement) {\n      // Add resize functionality to the image\n      image.addEventListener('mousedown', (e) => {\n        e.preventDefault();\n        const initialWidth = image.clientWidth;\n        const initialHeight = image.clientHeight;\n        const startX = e.clientX;\n        const startY = e.clientY;\n  \n        const resize = (e) => {\n          const width = initialWidth + e.clientX - startX;\n          const height = initialHeight + e.clientY - startY;\n          image.style.width = `${width}px`;\n          image.style.height = `${height}px`;\n        };\n  \n        const stopResize = () => {\n          window.removeEventListener('mousemove', resize);\n          window.removeEventListener('mouseup', stopResize);\n        };\n  \n        window.addEventListener('mousemove', resize);\n        window.addEventListener('mouseup', (e) => {\n          stopResize();\n          // Update the answer with modified content\n          this.interviewQuestion.answer = this.editor.textArea.nativeElement.innerHTML;\n        });\n      });\n    }\n  \n   \n}\n","<div class=\"container\">\n\n  <button (click)=\"openPopup()\">Add Article</button>\n\n  <app-user-blog-popup [editedItem]=\"editedItem\" (closePopup)=\"closePopup()\" *ngIf=\"showPopup\"></app-user-blog-popup>\n\n</div>\n<div class=\"row\">\n  <div class=\"col-12\">\n\n    <div *ngFor=\"let item of userBlogItems\">\n      <div class=\"offset-md-1 col-md-8 col-12 main-questions-container\">\n        <!-- Display each saved item here using item.question and item.answer -->\n        <div class=\"panel-container question-answer-detailcontainer\">\n          <div class=\"panel-item\">\n            <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\n              <div class=\"row\">\n                <div class=\"col-xl-10 col-md-9\">\n                  <header>\n                    <h1 class=\"question-text\" [innerHtml]=\"item.question\"></h1>\n                  </header>\n                </div>\n                <!-- Other elements for actions here -->\n              </div>\n            </div>\n            <div class=\"panel-body\" [ngClass]=\"{'open': true}\">\n              <div class=\"panel-body-content\" [innerHtml]=\"item.answer\"></div>\n            </div>\n          </div>\n        </div>\n        <!-- Other HTML elements for saved items here -->\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-post',\n  templateUrl: './user-post.component.html',\n  styleUrls: ['./user-post.component.scss']\n})\nexport class UserPostComponent implements OnInit {\n  showPopup: boolean = false;\n  questionAnswerItems: any[] = [];\n  userBlogItems: any[] = [];\n\n  editedItem: false;\n  constructor() { }\n\n  ngOnInit(): void {\n    \n  }\n \n  openPopup() {\n    this.showPopup = true;\n  }\n\n  closePopup() {\n    this.showPopup = false;\n  }\n  closeModal(event) {\n    if(event==\"closeQuestionAnswerPopup\") {\n      this.showPopup=false;\n    }\n    else {\n      this.showPopup=false;\n    } \n  }\n  addQuestionAnswer(questionAnswer: any) {\n    this.userBlogItems.push(questionAnswer);\n  }\n  openPopupToAddQuestionAnswer() {\n  \n    const newQuestionAnswerItem = {\n      // question: submittedQuestion,\n      // answer: submittedAnswer,\n      // Any other properties you want to include\n    };\n  \n    // Add the new item to the array\n    this.addQuestionAnswer(newQuestionAnswerItem);\n  }  \n\n}","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserPostComponent } from './user-post.component';\n\nconst routes: Routes = [\n  {\n    path:'', component: UserPostComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserPostRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserPostRoutingModule } from './user-post-routing.module';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from '../app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AngularEditorModule } from '@kolkov/angular-editor';\nimport { UserBlogPopupComponent } from '../user-blog-popup/user-blog-popup.component';\nimport { UserPostComponent } from './user-post.component';\n\n\n@NgModule({\n  declarations: [\n    UserPostComponent, \n    UserBlogPopupComponent,\n  ],\n  imports: [\n    CommonModule,\n    UserPostRoutingModule,\n    FontAwesomeModule,\n    FormsModule,\n    AppRoutingModule,\n    HttpClientModule, \n    AngularEditorModule\n  ]\n})\nexport class UserPostModule { }\n","/*!\n * clipboard.js v2.0.11\n * https://clipboardjs.com/\n *\n * Licensed MIT © Zeno Rocha\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ClipboardJS\"] = factory();\n\telse\n\t\troot[\"ClipboardJS\"] = factory();\n})(this, function() {\nreturn /******/ (function() { // webpackBootstrap\n/******/ \tvar __webpack_modules__ = ({\n\n/***/ 686:\n/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n\n// EXPORTS\n__webpack_require__.d(__webpack_exports__, {\n  \"default\": function() { return /* binding */ clipboard; }\n});\n\n// EXTERNAL MODULE: ./node_modules/tiny-emitter/index.js\nvar tiny_emitter = __webpack_require__(279);\nvar tiny_emitter_default = /*#__PURE__*/__webpack_require__.n(tiny_emitter);\n// EXTERNAL MODULE: ./node_modules/good-listener/src/listen.js\nvar listen = __webpack_require__(370);\nvar listen_default = /*#__PURE__*/__webpack_require__.n(listen);\n// EXTERNAL MODULE: ./node_modules/select/src/select.js\nvar src_select = __webpack_require__(817);\nvar select_default = /*#__PURE__*/__webpack_require__.n(src_select);\n;// CONCATENATED MODULE: ./src/common/command.js\n/**\n * Executes a given operation type.\n * @param {String} type\n * @return {Boolean}\n */\nfunction command(type) {\n  try {\n    return document.execCommand(type);\n  } catch (err) {\n    return false;\n  }\n}\n;// CONCATENATED MODULE: ./src/actions/cut.js\n\n\n/**\n * Cut action wrapper.\n * @param {String|HTMLElement} target\n * @return {String}\n */\n\nvar ClipboardActionCut = function ClipboardActionCut(target) {\n  var selectedText = select_default()(target);\n  command('cut');\n  return selectedText;\n};\n\n/* harmony default export */ var actions_cut = (ClipboardActionCut);\n;// CONCATENATED MODULE: ./src/common/create-fake-element.js\n/**\n * Creates a fake textarea element with a value.\n * @param {String} value\n * @return {HTMLElement}\n */\nfunction createFakeElement(value) {\n  var isRTL = document.documentElement.getAttribute('dir') === 'rtl';\n  var fakeElement = document.createElement('textarea'); // Prevent zooming on iOS\n\n  fakeElement.style.fontSize = '12pt'; // Reset box model\n\n  fakeElement.style.border = '0';\n  fakeElement.style.padding = '0';\n  fakeElement.style.margin = '0'; // Move element out of screen horizontally\n\n  fakeElement.style.position = 'absolute';\n  fakeElement.style[isRTL ? 'right' : 'left'] = '-9999px'; // Move element to the same position vertically\n\n  var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n  fakeElement.style.top = \"\".concat(yPosition, \"px\");\n  fakeElement.setAttribute('readonly', '');\n  fakeElement.value = value;\n  return fakeElement;\n}\n;// CONCATENATED MODULE: ./src/actions/copy.js\n\n\n\n/**\n * Create fake copy action wrapper using a fake element.\n * @param {String} target\n * @param {Object} options\n * @return {String}\n */\n\nvar fakeCopyAction = function fakeCopyAction(value, options) {\n  var fakeElement = createFakeElement(value);\n  options.container.appendChild(fakeElement);\n  var selectedText = select_default()(fakeElement);\n  command('copy');\n  fakeElement.remove();\n  return selectedText;\n};\n/**\n * Copy action wrapper.\n * @param {String|HTMLElement} target\n * @param {Object} options\n * @return {String}\n */\n\n\nvar ClipboardActionCopy = function ClipboardActionCopy(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    container: document.body\n  };\n  var selectedText = '';\n\n  if (typeof target === 'string') {\n    selectedText = fakeCopyAction(target, options);\n  } else if (target instanceof HTMLInputElement && !['text', 'search', 'url', 'tel', 'password'].includes(target === null || target === void 0 ? void 0 : target.type)) {\n    // If input type doesn't support `setSelectionRange`. Simulate it. https://developer.mozilla.org/en-US/docs/Web/API/HTMLInputElement/setSelectionRange\n    selectedText = fakeCopyAction(target.value, options);\n  } else {\n    selectedText = select_default()(target);\n    command('copy');\n  }\n\n  return selectedText;\n};\n\n/* harmony default export */ var actions_copy = (ClipboardActionCopy);\n;// CONCATENATED MODULE: ./src/actions/default.js\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n\n\n/**\n * Inner function which performs selection from either `text` or `target`\n * properties and then executes copy or cut operations.\n * @param {Object} options\n */\n\nvar ClipboardActionDefault = function ClipboardActionDefault() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  // Defines base properties passed from constructor.\n  var _options$action = options.action,\n      action = _options$action === void 0 ? 'copy' : _options$action,\n      container = options.container,\n      target = options.target,\n      text = options.text; // Sets the `action` to be performed which can be either 'copy' or 'cut'.\n\n  if (action !== 'copy' && action !== 'cut') {\n    throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n  } // Sets the `target` property using an element that will be have its content copied.\n\n\n  if (target !== undefined) {\n    if (target && _typeof(target) === 'object' && target.nodeType === 1) {\n      if (action === 'copy' && target.hasAttribute('disabled')) {\n        throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n      }\n\n      if (action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n        throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n      }\n    } else {\n      throw new Error('Invalid \"target\" value, use a valid Element');\n    }\n  } // Define selection strategy based on `text` property.\n\n\n  if (text) {\n    return actions_copy(text, {\n      container: container\n    });\n  } // Defines which selection strategy based on `target` property.\n\n\n  if (target) {\n    return action === 'cut' ? actions_cut(target) : actions_copy(target, {\n      container: container\n    });\n  }\n};\n\n/* harmony default export */ var actions_default = (ClipboardActionDefault);\n;// CONCATENATED MODULE: ./src/clipboard.js\nfunction clipboard_typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { clipboard_typeof = function _typeof(obj) { return typeof obj; }; } else { clipboard_typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return clipboard_typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (clipboard_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n\n\n\n\n\n/**\n * Helper function to retrieve attribute value.\n * @param {String} suffix\n * @param {Element} element\n */\n\nfunction getAttributeValue(suffix, element) {\n  var attribute = \"data-clipboard-\".concat(suffix);\n\n  if (!element.hasAttribute(attribute)) {\n    return;\n  }\n\n  return element.getAttribute(attribute);\n}\n/**\n * Base class which takes one or more elements, adds event listeners to them,\n * and instantiates a new `ClipboardAction` on each click.\n */\n\n\nvar Clipboard = /*#__PURE__*/function (_Emitter) {\n  _inherits(Clipboard, _Emitter);\n\n  var _super = _createSuper(Clipboard);\n\n  /**\n   * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n   * @param {Object} options\n   */\n  function Clipboard(trigger, options) {\n    var _this;\n\n    _classCallCheck(this, Clipboard);\n\n    _this = _super.call(this);\n\n    _this.resolveOptions(options);\n\n    _this.listenClick(trigger);\n\n    return _this;\n  }\n  /**\n   * Defines if attributes would be resolved using internal setter functions\n   * or custom functions that were passed in the constructor.\n   * @param {Object} options\n   */\n\n\n  _createClass(Clipboard, [{\n    key: \"resolveOptions\",\n    value: function resolveOptions() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n      this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n      this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n      this.container = clipboard_typeof(options.container) === 'object' ? options.container : document.body;\n    }\n    /**\n     * Adds a click event listener to the passed trigger.\n     * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n     */\n\n  }, {\n    key: \"listenClick\",\n    value: function listenClick(trigger) {\n      var _this2 = this;\n\n      this.listener = listen_default()(trigger, 'click', function (e) {\n        return _this2.onClick(e);\n      });\n    }\n    /**\n     * Defines a new `ClipboardAction` on each click event.\n     * @param {Event} e\n     */\n\n  }, {\n    key: \"onClick\",\n    value: function onClick(e) {\n      var trigger = e.delegateTarget || e.currentTarget;\n      var action = this.action(trigger) || 'copy';\n      var text = actions_default({\n        action: action,\n        container: this.container,\n        target: this.target(trigger),\n        text: this.text(trigger)\n      }); // Fires an event based on the copy operation result.\n\n      this.emit(text ? 'success' : 'error', {\n        action: action,\n        text: text,\n        trigger: trigger,\n        clearSelection: function clearSelection() {\n          if (trigger) {\n            trigger.focus();\n          }\n\n          window.getSelection().removeAllRanges();\n        }\n      });\n    }\n    /**\n     * Default `action` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultAction\",\n    value: function defaultAction(trigger) {\n      return getAttributeValue('action', trigger);\n    }\n    /**\n     * Default `target` lookup function.\n     * @param {Element} trigger\n     */\n\n  }, {\n    key: \"defaultTarget\",\n    value: function defaultTarget(trigger) {\n      var selector = getAttributeValue('target', trigger);\n\n      if (selector) {\n        return document.querySelector(selector);\n      }\n    }\n    /**\n     * Allow fire programmatically a copy action\n     * @param {String|HTMLElement} target\n     * @param {Object} options\n     * @returns Text copied.\n     */\n\n  }, {\n    key: \"defaultText\",\n\n    /**\n     * Default `text` lookup function.\n     * @param {Element} trigger\n     */\n    value: function defaultText(trigger) {\n      return getAttributeValue('text', trigger);\n    }\n    /**\n     * Destroy lifecycle.\n     */\n\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.listener.destroy();\n    }\n  }], [{\n    key: \"copy\",\n    value: function copy(target) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n        container: document.body\n      };\n      return actions_copy(target, options);\n    }\n    /**\n     * Allow fire programmatically a cut action\n     * @param {String|HTMLElement} target\n     * @returns Text cutted.\n     */\n\n  }, {\n    key: \"cut\",\n    value: function cut(target) {\n      return actions_cut(target);\n    }\n    /**\n     * Returns the support of the given action, or all actions if no action is\n     * given.\n     * @param {String} [action]\n     */\n\n  }, {\n    key: \"isSupported\",\n    value: function isSupported() {\n      var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n      var actions = typeof action === 'string' ? [action] : action;\n      var support = !!document.queryCommandSupported;\n      actions.forEach(function (action) {\n        support = support && !!document.queryCommandSupported(action);\n      });\n      return support;\n    }\n  }]);\n\n  return Clipboard;\n}((tiny_emitter_default()));\n\n/* harmony default export */ var clipboard = (Clipboard);\n\n/***/ }),\n\n/***/ 828:\n/***/ (function(module) {\n\nvar DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n\n\n/***/ }),\n\n/***/ 438:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar closest = __webpack_require__(828);\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n\n\n/***/ }),\n\n/***/ 879:\n/***/ (function(__unused_webpack_module, exports) {\n\n/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n\n\n/***/ }),\n\n/***/ 370:\n/***/ (function(module, __unused_webpack_exports, __webpack_require__) {\n\nvar is = __webpack_require__(879);\nvar delegate = __webpack_require__(438);\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n\n\n/***/ }),\n\n/***/ 817:\n/***/ (function(module) {\n\nfunction select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n\n\n/***/ }),\n\n/***/ 279:\n/***/ (function(module) {\n\nfunction E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n\n\n/***/ })\n\n/******/ \t});\n/************************************************************************/\n/******/ \t// The module cache\n/******/ \tvar __webpack_module_cache__ = {};\n/******/ \t\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(__webpack_module_cache__[moduleId]) {\n/******/ \t\t\treturn __webpack_module_cache__[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = __webpack_module_cache__[moduleId] = {\n/******/ \t\t\t// no module.id needed\n/******/ \t\t\t// no module.loaded needed\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/ \t\n/******/ \t\t// Execute the module function\n/******/ \t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n/******/ \t\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/ \t\n/************************************************************************/\n/******/ \t/* webpack/runtime/compat get default export */\n/******/ \t!function() {\n/******/ \t\t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t\t__webpack_require__.n = function(module) {\n/******/ \t\t\tvar getter = module && module.__esModule ?\n/******/ \t\t\t\tfunction() { return module['default']; } :\n/******/ \t\t\t\tfunction() { return module; };\n/******/ \t\t\t__webpack_require__.d(getter, { a: getter });\n/******/ \t\t\treturn getter;\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/define property getters */\n/******/ \t!function() {\n/******/ \t\t// define getter functions for harmony exports\n/******/ \t\t__webpack_require__.d = function(exports, definition) {\n/******/ \t\t\tfor(var key in definition) {\n/******/ \t\t\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n/******/ \t\t\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n/******/ \t\t\t\t}\n/******/ \t\t\t}\n/******/ \t\t};\n/******/ \t}();\n/******/ \t\n/******/ \t/* webpack/runtime/hasOwnProperty shorthand */\n/******/ \t!function() {\n/******/ \t\t__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }\n/******/ \t}();\n/******/ \t\n/************************************************************************/\n/******/ \t// module exports must be returned from runtime so entry inlining is disabled\n/******/ \t// startup\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(686);\n/******/ })()\n.default;\n});","(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n","(function (Prism) {\n\n\tvar keywords = /\\b(?:abstract|assert|boolean|break|byte|case|catch|char|class|const|continue|default|do|double|else|enum|exports|extends|final|finally|float|for|goto|if|implements|import|instanceof|int|interface|long|module|native|new|non-sealed|null|open|opens|package|permits|private|protected|provides|public|record(?!\\s*[(){}[\\]<>=%~.:,;?+\\-*/&|^])|requires|return|sealed|short|static|strictfp|super|switch|synchronized|this|throw|throws|to|transient|transitive|try|uses|var|void|volatile|while|with|yield)\\b/;\n\n\t// full package (optional) + parent classes (optional)\n\tvar classNamePrefix = /(?:[a-z]\\w*\\s*\\.\\s*)*(?:[A-Z]\\w*\\s*\\.\\s*)*/.source;\n\n\t// based on the java naming conventions\n\tvar className = {\n\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z](?:[\\d_A-Z]*[a-z]\\w*)?\\b/.source),\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'namespace': {\n\t\t\t\tpattern: /^[a-z]\\w*(?:\\s*\\.\\s*[a-z]\\w*)*(?:\\s*\\.)?/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /\\./\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\./\n\t\t}\n\t};\n\n\tPrism.languages.java = Prism.languages.extend('clike', {\n\t\t'string': {\n\t\t\tpattern: /(^|[^\\\\])\"(?:\\\\.|[^\"\\\\\\r\\n])*\"/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t'class-name': [\n\t\t\tclassName,\n\t\t\t{\n\t\t\t\t// variables, parameters, and constructor references\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(/(^|[^\\w.])/.source + classNamePrefix + /[A-Z]\\w*(?=\\s+\\w+\\s*[;,=()]|\\s*(?:\\[[\\s,]*\\]\\s*)?::\\s*new\\b)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t},\n\t\t\t{\n\t\t\t\t// class names based on keyword\n\t\t\t\t// this to support class names (or generic parameters) which do not contain a lower case letter (also works for methods)\n\t\t\t\tpattern: RegExp(/(\\b(?:class|enum|extends|implements|instanceof|interface|new|record|throws)\\s+)/.source + classNamePrefix + /[A-Z]\\w*\\b/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: className.inside\n\t\t\t}\n\t\t],\n\t\t'keyword': keywords,\n\t\t'function': [\n\t\t\tPrism.languages.clike.function,\n\t\t\t{\n\t\t\t\tpattern: /(::\\s*)[a-z_]\\w*/,\n\t\t\t\tlookbehind: true\n\t\t\t}\n\t\t],\n\t\t'number': /\\b0b[01][01_]*L?\\b|\\b0x(?:\\.[\\da-f_p+-]+|[\\da-f_]+(?:\\.[\\da-f_p+-]+)?)\\b|(?:\\b\\d[\\d_]*(?:\\.[\\d_]*)?|\\B\\.\\d[\\d_]*)(?:e[+-]?\\d[\\d_]*)?[dfl]?/i,\n\t\t'operator': {\n\t\t\tpattern: /(^|[^.])(?:<<=?|>>>?=?|->|--|\\+\\+|&&|\\|\\||::|[?:~]|[-+*/%&|^!=<>]=?)/m,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'constant': /\\b[A-Z][A-Z_\\d]+\\b/\n\t});\n\n\tPrism.languages.insertBefore('java', 'string', {\n\t\t'triple-quoted-string': {\n\t\t\t// http://openjdk.java.net/jeps/355#Description\n\t\t\tpattern: /\"\"\"[ \\t]*[\\r\\n](?:(?:\"|\"\")?(?:\\\\.|[^\"\\\\]))*\"\"\"/,\n\t\t\tgreedy: true,\n\t\t\talias: 'string'\n\t\t},\n\t\t'char': {\n\t\t\tpattern: /'(?:\\\\.|[^'\\\\\\r\\n]){1,6}'/,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('java', 'class-name', {\n\t\t'annotation': {\n\t\t\tpattern: /(^|[^.])@\\w+(?:\\s*\\.\\s*\\w+)*/,\n\t\t\tlookbehind: true,\n\t\t\talias: 'punctuation'\n\t\t},\n\t\t'generics': {\n\t\t\tpattern: /<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&)|<(?:[\\w\\s,.?]|&(?!&))*>)*>)*>)*>/,\n\t\t\tinside: {\n\t\t\t\t'class-name': className,\n\t\t\t\t'keyword': keywords,\n\t\t\t\t'punctuation': /[<>(),.:]/,\n\t\t\t\t'operator': /[?&|]/\n\t\t\t}\n\t\t},\n\t\t'import': [\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+)/.source + classNamePrefix + /(?:[A-Z]\\w*|\\*)(?=\\s*;)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': className.inside.namespace,\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t\t'operator': /\\*/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t},\n\t\t\t{\n\t\t\t\tpattern: RegExp(/(\\bimport\\s+static\\s+)/.source + classNamePrefix + /(?:\\w+|\\*)(?=\\s*;)/.source),\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'static',\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': className.inside.namespace,\n\t\t\t\t\t'static': /\\b\\w+$/,\n\t\t\t\t\t'punctuation': /\\./,\n\t\t\t\t\t'operator': /\\*/,\n\t\t\t\t\t'class-name': /\\w+/\n\t\t\t\t}\n\t\t\t}\n\t\t],\n\t\t'namespace': {\n\t\t\tpattern: RegExp(\n\t\t\t\t/(\\b(?:exports|import(?:\\s+static)?|module|open|opens|package|provides|requires|to|transitive|uses|with)\\s+)(?!<keyword>)[a-z]\\w*(?:\\.[a-z]\\w*)*\\.?/\n\t\t\t\t\t.source.replace(/<keyword>/g, function () { return keywords.source; })),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /\\./,\n\t\t\t}\n\t\t}\n\t});\n}(Prism));\n","Prism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n","Prism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n","(function (Prism) {\n\tPrism.languages.sass = Prism.languages.extend('css', {\n\t\t// Sass comments don't need to be closed, only indented\n\t\t'comment': {\n\t\t\tpattern: /^([ \\t]*)\\/[\\/*].*(?:(?:\\r?\\n|\\r)\\1[ \\t].+)*/m,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n\tPrism.languages.insertBefore('sass', 'atrule', {\n\t\t// We want to consume the whole line\n\t\t'atrule-line': {\n\t\t\t// Includes support for = and + shortcuts\n\t\t\tpattern: /^(?:[ \\t]*)[@+=].+/m,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'atrule': /(?:@[\\w-]+|[+=])/\n\t\t\t}\n\t\t}\n\t});\n\tdelete Prism.languages.sass.atrule;\n\n\n\tvar variable = /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/;\n\tvar operator = [\n\t\t/[+*\\/%]|[=!]=|<=?|>=?|\\b(?:and|not|or)\\b/,\n\t\t{\n\t\t\tpattern: /(\\s)-(?=\\s)/,\n\t\t\tlookbehind: true\n\t\t}\n\t];\n\n\tPrism.languages.insertBefore('sass', 'property', {\n\t\t// We want to consume the whole line\n\t\t'variable-line': {\n\t\t\tpattern: /^[ \\t]*\\$.+/m,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'punctuation': /:/,\n\t\t\t\t'variable': variable,\n\t\t\t\t'operator': operator\n\t\t\t}\n\t\t},\n\t\t// We want to consume the whole line\n\t\t'property-line': {\n\t\t\tpattern: /^[ \\t]*(?:[^:\\s]+ *:.*|:[^:\\s].*)/m,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'property': [\n\t\t\t\t\t/[^:\\s]+(?=\\s*:)/,\n\t\t\t\t\t{\n\t\t\t\t\t\tpattern: /(:)[^:\\s]+/,\n\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t}\n\t\t\t\t],\n\t\t\t\t'punctuation': /:/,\n\t\t\t\t'variable': variable,\n\t\t\t\t'operator': operator,\n\t\t\t\t'important': Prism.languages.sass.important\n\t\t\t}\n\t\t}\n\t});\n\tdelete Prism.languages.sass.property;\n\tdelete Prism.languages.sass.important;\n\n\t// Now that whole lines for other patterns are consumed,\n\t// what's left should be selectors\n\tPrism.languages.insertBefore('sass', 'punctuation', {\n\t\t'selector': {\n\t\t\tpattern: /^([ \\t]*)\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*(?:,(?:\\r?\\n|\\r)\\1[ \\t]+\\S(?:,[^,\\r\\n]+|[^,\\r\\n]*)(?:,[^,\\r\\n]+)*)*/m,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t});\n\n}(Prism));\n","Prism.languages.scss = Prism.languages.extend('css', {\n\t'comment': {\n\t\tpattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|\\/\\/.*)/,\n\t\tlookbehind: true\n\t},\n\t'atrule': {\n\t\tpattern: /@[\\w-](?:\\([^()]+\\)|[^()\\s]|\\s+(?!\\s))*?(?=\\s+[{;])/,\n\t\tinside: {\n\t\t\t'rule': /@[\\w-]+/\n\t\t\t// See rest below\n\t\t}\n\t},\n\t// url, compassified\n\t'url': /(?:[-a-z]+-)?url(?=\\()/i,\n\t// CSS selector regex is not appropriate for Sass\n\t// since there can be lot more things (var, @ directive, nesting..)\n\t// a selector must start at the end of a property or after a brace (end of other rules or nesting)\n\t// it can contain some characters that aren't used for defining rules or end of selector, & (parent selector), or interpolated variable\n\t// the end of a selector is found when there is no rules in it ( {} or {\\s}) or if there is a property (because an interpolated var\n\t// can \"pass\" as a selector- e.g: proper#{$erty})\n\t// this one was hard to do, so please be careful if you edit this one :)\n\t'selector': {\n\t\t// Initial look-ahead is used to prevent matching of blank selectors\n\t\tpattern: /(?=\\S)[^@;{}()]?(?:[^@;{}()\\s]|\\s+(?!\\s)|#\\{\\$[-\\w]+\\})+(?=\\s*\\{(?:\\}|\\s|[^}][^:{}]*[:{][^}]))/,\n\t\tinside: {\n\t\t\t'parent': {\n\t\t\t\tpattern: /&/,\n\t\t\t\talias: 'important'\n\t\t\t},\n\t\t\t'placeholder': /%[-\\w]+/,\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t},\n\t'property': {\n\t\tpattern: /(?:[-\\w]|\\$[-\\w]|#\\{\\$[-\\w]+\\})+(?=\\s*:)/,\n\t\tinside: {\n\t\t\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n\t\t}\n\t}\n});\n\nPrism.languages.insertBefore('scss', 'atrule', {\n\t'keyword': [\n\t\t/@(?:content|debug|each|else(?: if)?|extend|for|forward|function|if|import|include|mixin|return|use|warn|while)\\b/i,\n\t\t{\n\t\t\tpattern: /( )(?:from|through)(?= )/,\n\t\t\tlookbehind: true\n\t\t}\n\t]\n});\n\nPrism.languages.insertBefore('scss', 'important', {\n\t// var and interpolated vars\n\t'variable': /\\$[-\\w]+|#\\{\\$[-\\w]+\\}/\n});\n\nPrism.languages.insertBefore('scss', 'function', {\n\t'module-modifier': {\n\t\tpattern: /\\b(?:as|hide|show|with)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'placeholder': {\n\t\tpattern: /%[-\\w]+/,\n\t\talias: 'selector'\n\t},\n\t'statement': {\n\t\tpattern: /\\B!(?:default|optional)\\b/i,\n\t\talias: 'keyword'\n\t},\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'null': {\n\t\tpattern: /\\bnull\\b/,\n\t\talias: 'keyword'\n\t},\n\t'operator': {\n\t\tpattern: /(\\s)(?:[-+*\\/%]|[=!]=|<=?|>=?|and|not|or)(?=\\s)/,\n\t\tlookbehind: true\n\t}\n});\n\nPrism.languages.scss['atrule'].inside.rest = Prism.languages.scss;\n","(function (Prism) {\n\n\tPrism.languages.typescript = Prism.languages.extend('javascript', {\n\t\t'class-name': {\n\t\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|type)\\s+)(?!keyof\\b)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?:\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>)?/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: null // see below\n\t\t},\n\t\t'builtin': /\\b(?:Array|Function|Promise|any|boolean|console|never|number|string|symbol|unknown)\\b/,\n\t});\n\n\t// The keywords TypeScript adds to JavaScript\n\tPrism.languages.typescript.keyword.push(\n\t\t/\\b(?:abstract|declare|is|keyof|readonly|require)\\b/,\n\t\t// keywords that have to be followed by an identifier\n\t\t/\\b(?:asserts|infer|interface|module|namespace|type)\\b(?=\\s*(?:[{_$a-zA-Z\\xA0-\\uFFFF]|$))/,\n\t\t// This is for `import type *, {}`\n\t\t/\\btype\\b(?=\\s*(?:[\\{*]|$))/\n\t);\n\n\t// doesn't work with TS because TS is too complex\n\tdelete Prism.languages.typescript['parameter'];\n\tdelete Prism.languages.typescript['literal-property'];\n\n\t// a version of typescript specifically for highlighting types\n\tvar typeInside = Prism.languages.extend('typescript', {});\n\tdelete typeInside['class-name'];\n\n\tPrism.languages.typescript['class-name'].inside = typeInside;\n\n\tPrism.languages.insertBefore('typescript', 'function', {\n\t\t'decorator': {\n\t\t\tpattern: /@[$\\w\\xA0-\\uFFFF]+/,\n\t\t\tinside: {\n\t\t\t\t'at': {\n\t\t\t\t\tpattern: /^@/,\n\t\t\t\t\talias: 'operator'\n\t\t\t\t},\n\t\t\t\t'function': /^[\\s\\S]+/\n\t\t\t}\n\t\t},\n\t\t'generic-function': {\n\t\t\t// e.g. foo<T extends \"bar\" | \"baz\">( ...\n\t\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*<(?:[^<>]|<(?:[^<>]|<[^<>]*>)*>)*>(?=\\s*\\()/,\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*/,\n\t\t\t\t'generic': {\n\t\t\t\t\tpattern: /<[\\s\\S]+/, // everything after the first <\n\t\t\t\t\talias: 'class-name',\n\t\t\t\t\tinside: typeInside\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n\tPrism.languages.ts = Prism.languages.typescript;\n\n}(Prism));\n","(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\tif (!Prism.plugins.toolbar) {\n\t\tconsole.warn('Copy to Clipboard plugin loaded before Toolbar plugin.');\n\n\t\treturn;\n\t}\n\n\t/**\n\t * When the given elements is clicked by the user, the given text will be copied to clipboard.\n\t *\n\t * @param {HTMLElement} element\n\t * @param {CopyInfo} copyInfo\n\t *\n\t * @typedef CopyInfo\n\t * @property {() => string} getText\n\t * @property {() => void} success\n\t * @property {(reason: unknown) => void} error\n\t */\n\tfunction registerClipboard(element, copyInfo) {\n\t\telement.addEventListener('click', function () {\n\t\t\tcopyTextToClipboard(copyInfo);\n\t\t});\n\t}\n\n\t// https://stackoverflow.com/a/30810322/7595472\n\n\t/** @param {CopyInfo} copyInfo */\n\tfunction fallbackCopyTextToClipboard(copyInfo) {\n\t\tvar textArea = document.createElement('textarea');\n\t\ttextArea.value = copyInfo.getText();\n\n\t\t// Avoid scrolling to bottom\n\t\ttextArea.style.top = '0';\n\t\ttextArea.style.left = '0';\n\t\ttextArea.style.position = 'fixed';\n\n\t\tdocument.body.appendChild(textArea);\n\t\ttextArea.focus();\n\t\ttextArea.select();\n\n\t\ttry {\n\t\t\tvar successful = document.execCommand('copy');\n\t\t\tsetTimeout(function () {\n\t\t\t\tif (successful) {\n\t\t\t\t\tcopyInfo.success();\n\t\t\t\t} else {\n\t\t\t\t\tcopyInfo.error();\n\t\t\t\t}\n\t\t\t}, 1);\n\t\t} catch (err) {\n\t\t\tsetTimeout(function () {\n\t\t\t\tcopyInfo.error(err);\n\t\t\t}, 1);\n\t\t}\n\n\t\tdocument.body.removeChild(textArea);\n\t}\n\t/** @param {CopyInfo} copyInfo */\n\tfunction copyTextToClipboard(copyInfo) {\n\t\tif (navigator.clipboard) {\n\t\t\tnavigator.clipboard.writeText(copyInfo.getText()).then(copyInfo.success, function () {\n\t\t\t\t// try the fallback in case `writeText` didn't work\n\t\t\t\tfallbackCopyTextToClipboard(copyInfo);\n\t\t\t});\n\t\t} else {\n\t\t\tfallbackCopyTextToClipboard(copyInfo);\n\t\t}\n\t}\n\n\t/**\n\t * Selects the text content of the given element.\n\t *\n\t * @param {Element} element\n\t */\n\tfunction selectElementText(element) {\n\t\t// https://stackoverflow.com/a/20079910/7595472\n\t\twindow.getSelection().selectAllChildren(element);\n\t}\n\n\t/**\n\t * Traverses up the DOM tree to find data attributes that override the default plugin settings.\n\t *\n\t * @param {Element} startElement An element to start from.\n\t * @returns {Settings} The plugin settings.\n\t * @typedef {Record<\"copy\" | \"copy-error\" | \"copy-success\" | \"copy-timeout\", string | number>} Settings\n\t */\n\tfunction getSettings(startElement) {\n\t\t/** @type {Settings} */\n\t\tvar settings = {\n\t\t\t'copy': 'Copy',\n\t\t\t'copy-error': 'Press Ctrl+C to copy',\n\t\t\t'copy-success': 'Copied!',\n\t\t\t'copy-timeout': 5000\n\t\t};\n\n\t\tvar prefix = 'data-prismjs-';\n\t\tfor (var key in settings) {\n\t\t\tvar attr = prefix + key;\n\t\t\tvar element = startElement;\n\t\t\twhile (element && !element.hasAttribute(attr)) {\n\t\t\t\telement = element.parentElement;\n\t\t\t}\n\t\t\tif (element) {\n\t\t\t\tsettings[key] = element.getAttribute(attr);\n\t\t\t}\n\t\t}\n\t\treturn settings;\n\t}\n\n\tPrism.plugins.toolbar.registerButton('copy-to-clipboard', function (env) {\n\t\tvar element = env.element;\n\n\t\tvar settings = getSettings(element);\n\n\t\tvar linkCopy = document.createElement('button');\n\t\tlinkCopy.className = 'copy-to-clipboard-button';\n\t\tlinkCopy.setAttribute('type', 'button');\n\t\tvar linkSpan = document.createElement('span');\n\t\tlinkCopy.appendChild(linkSpan);\n\n\t\tsetState('copy');\n\n\t\tregisterClipboard(linkCopy, {\n\t\t\tgetText: function () {\n\t\t\t\treturn element.textContent;\n\t\t\t},\n\t\t\tsuccess: function () {\n\t\t\t\tsetState('copy-success');\n\n\t\t\t\tresetText();\n\t\t\t},\n\t\t\terror: function () {\n\t\t\t\tsetState('copy-error');\n\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tselectElementText(element);\n\t\t\t\t}, 1);\n\n\t\t\t\tresetText();\n\t\t\t}\n\t\t});\n\n\t\treturn linkCopy;\n\n\t\tfunction resetText() {\n\t\t\tsetTimeout(function () { setState('copy'); }, settings['copy-timeout']);\n\t\t}\n\n\t\t/** @param {\"copy\" | \"copy-error\" | \"copy-success\"} state */\n\t\tfunction setState(state) {\n\t\t\tlinkSpan.textContent = settings[state];\n\t\t\tlinkCopy.setAttribute('data-copy-state', state);\n\t\t}\n\t});\n}());\n","(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\tvar callbacks = [];\n\tvar map = {};\n\tvar noop = function () {};\n\n\tPrism.plugins.toolbar = {};\n\n\t/**\n\t * @typedef ButtonOptions\n\t * @property {string} text The text displayed.\n\t * @property {string} [url] The URL of the link which will be created.\n\t * @property {Function} [onClick] The event listener for the `click` event of the created button.\n\t * @property {string} [className] The class attribute to include with element.\n\t */\n\n\t/**\n\t * Register a button callback with the toolbar.\n\t *\n\t * @param {string} key\n\t * @param {ButtonOptions|Function} opts\n\t */\n\tvar registerButton = Prism.plugins.toolbar.registerButton = function (key, opts) {\n\t\tvar callback;\n\n\t\tif (typeof opts === 'function') {\n\t\t\tcallback = opts;\n\t\t} else {\n\t\t\tcallback = function (env) {\n\t\t\t\tvar element;\n\n\t\t\t\tif (typeof opts.onClick === 'function') {\n\t\t\t\t\telement = document.createElement('button');\n\t\t\t\t\telement.type = 'button';\n\t\t\t\t\telement.addEventListener('click', function () {\n\t\t\t\t\t\topts.onClick.call(this, env);\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof opts.url === 'string') {\n\t\t\t\t\telement = document.createElement('a');\n\t\t\t\t\telement.href = opts.url;\n\t\t\t\t} else {\n\t\t\t\t\telement = document.createElement('span');\n\t\t\t\t}\n\n\t\t\t\tif (opts.className) {\n\t\t\t\t\telement.classList.add(opts.className);\n\t\t\t\t}\n\n\t\t\t\telement.textContent = opts.text;\n\n\t\t\t\treturn element;\n\t\t\t};\n\t\t}\n\n\t\tif (key in map) {\n\t\t\tconsole.warn('There is a button with the key \"' + key + '\" registered already.');\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.push(map[key] = callback);\n\t};\n\n\t/**\n\t * Returns the callback order of the given element.\n\t *\n\t * @param {HTMLElement} element\n\t * @returns {string[] | undefined}\n\t */\n\tfunction getOrder(element) {\n\t\twhile (element) {\n\t\t\tvar order = element.getAttribute('data-toolbar-order');\n\t\t\tif (order != null) {\n\t\t\t\torder = order.trim();\n\t\t\t\tif (order.length) {\n\t\t\t\t\treturn order.split(/\\s*,\\s*/g);\n\t\t\t\t} else {\n\t\t\t\t\treturn [];\n\t\t\t\t}\n\t\t\t}\n\t\t\telement = element.parentElement;\n\t\t}\n\t}\n\n\t/**\n\t * Post-highlight Prism hook callback.\n\t *\n\t * @param env\n\t */\n\tvar hook = Prism.plugins.toolbar.hook = function (env) {\n\t\t// Check if inline or actual code block (credit to line-numbers plugin)\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Autoloader rehighlights, so only do this once.\n\t\tif (pre.parentNode.classList.contains('code-toolbar')) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Create wrapper for <pre> to prevent scrolling toolbar with content\n\t\tvar wrapper = document.createElement('div');\n\t\twrapper.classList.add('code-toolbar');\n\t\tpre.parentNode.insertBefore(wrapper, pre);\n\t\twrapper.appendChild(pre);\n\n\t\t// Setup the toolbar\n\t\tvar toolbar = document.createElement('div');\n\t\ttoolbar.classList.add('toolbar');\n\n\t\t// order callbacks\n\t\tvar elementCallbacks = callbacks;\n\t\tvar order = getOrder(env.element);\n\t\tif (order) {\n\t\t\telementCallbacks = order.map(function (key) {\n\t\t\t\treturn map[key] || noop;\n\t\t\t});\n\t\t}\n\n\t\telementCallbacks.forEach(function (callback) {\n\t\t\tvar element = callback(env);\n\n\t\t\tif (!element) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar item = document.createElement('div');\n\t\t\titem.classList.add('toolbar-item');\n\n\t\t\titem.appendChild(element);\n\t\t\ttoolbar.appendChild(item);\n\t\t});\n\n\t\t// Add our toolbar to the currently created wrapper of <pre> tag\n\t\twrapper.appendChild(toolbar);\n\t};\n\n\tregisterButton('label', function (env) {\n\t\tvar pre = env.element.parentNode;\n\t\tif (!pre || !/pre/i.test(pre.nodeName)) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (!pre.hasAttribute('data-label')) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element; var template;\n\t\tvar text = pre.getAttribute('data-label');\n\t\ttry {\n\t\t\t// Any normal text will blow up this selector.\n\t\t\ttemplate = document.querySelector('template#' + text);\n\t\t} catch (e) { /* noop */ }\n\n\t\tif (template) {\n\t\t\telement = template.content;\n\t\t} else {\n\t\t\tif (pre.hasAttribute('data-url')) {\n\t\t\t\telement = document.createElement('a');\n\t\t\t\telement.href = pre.getAttribute('data-url');\n\t\t\t} else {\n\t\t\t\telement = document.createElement('span');\n\t\t\t}\n\n\t\t\telement.textContent = text;\n\t\t}\n\n\t\treturn element;\n\t});\n\n\t/**\n\t * Register the toolbar with Prism.\n\t */\n\tPrism.hooks.add('complete', hook);\n}());\n","\n/* **********************************************\n     Begin prism-core.js\n********************************************** */\n\n/// <reference lib=\"WebWorker\"/>\n\nvar _self = (typeof window !== 'undefined')\n\t? window   // if in browser\n\t: (\n\t\t(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)\n\t\t\t? self // if in worker\n\t\t\t: {}   // if in node js\n\t);\n\n/**\n * Prism: Lightweight, robust, elegant syntax highlighting\n *\n * @license MIT <https://opensource.org/licenses/MIT>\n * @author Lea Verou <https://lea.verou.me>\n * @namespace\n * @public\n */\nvar Prism = (function (_self) {\n\n\t// Private helper vars\n\tvar lang = /(?:^|\\s)lang(?:uage)?-([\\w-]+)(?=\\s|$)/i;\n\tvar uniqueId = 0;\n\n\t// The grammar object for plaintext\n\tvar plainTextGrammar = {};\n\n\n\tvar _ = {\n\t\t/**\n\t\t * By default, Prism will attempt to highlight all code elements (by calling {@link Prism.highlightAll}) on the\n\t\t * current page after the page finished loading. This might be a problem if e.g. you wanted to asynchronously load\n\t\t * additional languages or plugins yourself.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not automatically highlight all code elements on the page.\n\t\t *\n\t\t * You obviously have to change this value before the automatic highlighting started. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.manual = true;\n\t\t * // add a new <script> to load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tmanual: _self.Prism && _self.Prism.manual,\n\t\t/**\n\t\t * By default, if Prism is in a web worker, it assumes that it is in a worker it created itself, so it uses\n\t\t * `addEventListener` to communicate with its parent instance. However, if you're using Prism manually in your\n\t\t * own worker, you don't want it to do this.\n\t\t *\n\t\t * By setting this value to `true`, Prism will not add its own listeners to the worker.\n\t\t *\n\t\t * You obviously have to change this value before Prism executes. To do this, you can add an\n\t\t * empty Prism object into the global scope before loading the Prism script like this:\n\t\t *\n\t\t * ```js\n\t\t * window.Prism = window.Prism || {};\n\t\t * Prism.disableWorkerMessageHandler = true;\n\t\t * // Load Prism's script\n\t\t * ```\n\t\t *\n\t\t * @default false\n\t\t * @type {boolean}\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tdisableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,\n\n\t\t/**\n\t\t * A namespace for utility methods.\n\t\t *\n\t\t * All function in this namespace that are not explicitly marked as _public_ are for __internal use only__ and may\n\t\t * change or disappear at any time.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t */\n\t\tutil: {\n\t\t\tencode: function encode(tokens) {\n\t\t\t\tif (tokens instanceof Token) {\n\t\t\t\t\treturn new Token(tokens.type, encode(tokens.content), tokens.alias);\n\t\t\t\t} else if (Array.isArray(tokens)) {\n\t\t\t\t\treturn tokens.map(encode);\n\t\t\t\t} else {\n\t\t\t\t\treturn tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\\u00a0/g, ' ');\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the name of the type of the given value.\n\t\t\t *\n\t\t\t * @param {any} o\n\t\t\t * @returns {string}\n\t\t\t * @example\n\t\t\t * type(null)      === 'Null'\n\t\t\t * type(undefined) === 'Undefined'\n\t\t\t * type(123)       === 'Number'\n\t\t\t * type('foo')     === 'String'\n\t\t\t * type(true)      === 'Boolean'\n\t\t\t * type([1, 2])    === 'Array'\n\t\t\t * type({})        === 'Object'\n\t\t\t * type(String)    === 'Function'\n\t\t\t * type(/abc+/)    === 'RegExp'\n\t\t\t */\n\t\t\ttype: function (o) {\n\t\t\t\treturn Object.prototype.toString.call(o).slice(8, -1);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns a unique number for the given object. Later calls will still return the same number.\n\t\t\t *\n\t\t\t * @param {Object} obj\n\t\t\t * @returns {number}\n\t\t\t */\n\t\t\tobjId: function (obj) {\n\t\t\t\tif (!obj['__id']) {\n\t\t\t\t\tObject.defineProperty(obj, '__id', { value: ++uniqueId });\n\t\t\t\t}\n\t\t\t\treturn obj['__id'];\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Creates a deep clone of the given object.\n\t\t\t *\n\t\t\t * The main intended use of this function is to clone language definitions.\n\t\t\t *\n\t\t\t * @param {T} o\n\t\t\t * @param {Record<number, any>} [visited]\n\t\t\t * @returns {T}\n\t\t\t * @template T\n\t\t\t */\n\t\t\tclone: function deepClone(o, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar clone; var id;\n\t\t\t\tswitch (_.util.type(o)) {\n\t\t\t\t\tcase 'Object':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = /** @type {Record<string, any>} */ ({});\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\tfor (var key in o) {\n\t\t\t\t\t\t\tif (o.hasOwnProperty(key)) {\n\t\t\t\t\t\t\t\tclone[key] = deepClone(o[key], visited);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tid = _.util.objId(o);\n\t\t\t\t\t\tif (visited[id]) {\n\t\t\t\t\t\t\treturn visited[id];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tclone = [];\n\t\t\t\t\t\tvisited[id] = clone;\n\n\t\t\t\t\t\t(/** @type {Array} */(/** @type {any} */(o))).forEach(function (v, i) {\n\t\t\t\t\t\t\tclone[i] = deepClone(v, visited);\n\t\t\t\t\t\t});\n\n\t\t\t\t\t\treturn /** @type {any} */ (clone);\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\treturn o;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the Prism language of the given element set by a `language-xxxx` or `lang-xxxx` class.\n\t\t\t *\n\t\t\t * If no language is set for the element or the element is `null` or `undefined`, `none` will be returned.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @returns {string}\n\t\t\t */\n\t\t\tgetLanguage: function (element) {\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar m = lang.exec(element.className);\n\t\t\t\t\tif (m) {\n\t\t\t\t\t\treturn m[1].toLowerCase();\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn 'none';\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Sets the Prism `language-xxxx` class of the given element.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} language\n\t\t\t * @returns {void}\n\t\t\t */\n\t\t\tsetLanguage: function (element, language) {\n\t\t\t\t// remove all `language-xxxx` classes\n\t\t\t\t// (this might leave behind a leading space)\n\t\t\t\telement.className = element.className.replace(RegExp(lang, 'gi'), '');\n\n\t\t\t\t// add the new `language-xxxx` class\n\t\t\t\t// (using `classList` will automatically clean up spaces for us)\n\t\t\t\telement.classList.add('language-' + language);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns the script element that is currently executing.\n\t\t\t *\n\t\t\t * This does __not__ work for line script element.\n\t\t\t *\n\t\t\t * @returns {HTMLScriptElement | null}\n\t\t\t */\n\t\t\tcurrentScript: function () {\n\t\t\t\tif (typeof document === 'undefined') {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t\tif ('currentScript' in document && 1 < 2 /* hack to trip TS' flow analysis */) {\n\t\t\t\t\treturn /** @type {any} */ (document.currentScript);\n\t\t\t\t}\n\n\t\t\t\t// IE11 workaround\n\t\t\t\t// we'll get the src of the current script by parsing IE11's error stack trace\n\t\t\t\t// this will not work for inline scripts\n\n\t\t\t\ttry {\n\t\t\t\t\tthrow new Error();\n\t\t\t\t} catch (err) {\n\t\t\t\t\t// Get file src url from stack. Specifically works with the format of stack traces in IE.\n\t\t\t\t\t// A stack will look like this:\n\t\t\t\t\t//\n\t\t\t\t\t// Error\n\t\t\t\t\t//    at _.util.currentScript (http://localhost/components/prism-core.js:119:5)\n\t\t\t\t\t//    at Global code (http://localhost/components/prism-core.js:606:1)\n\n\t\t\t\t\tvar src = (/at [^(\\r\\n]*\\((.*):[^:]+:[^:]+\\)$/i.exec(err.stack) || [])[1];\n\t\t\t\t\tif (src) {\n\t\t\t\t\t\tvar scripts = document.getElementsByTagName('script');\n\t\t\t\t\t\tfor (var i in scripts) {\n\t\t\t\t\t\t\tif (scripts[i].src == src) {\n\t\t\t\t\t\t\t\treturn scripts[i];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Returns whether a given class is active for `element`.\n\t\t\t *\n\t\t\t * The class can be activated if `element` or one of its ancestors has the given class and it can be deactivated\n\t\t\t * if `element` or one of its ancestors has the negated version of the given class. The _negated version_ of the\n\t\t\t * given class is just the given class with a `no-` prefix.\n\t\t\t *\n\t\t\t * Whether the class is active is determined by the closest ancestor of `element` (where `element` itself is\n\t\t\t * closest ancestor) that has the given class or the negated version of it. If neither `element` nor any of its\n\t\t\t * ancestors have the given class or the negated version of it, then the default activation will be returned.\n\t\t\t *\n\t\t\t * In the paradoxical situation where the closest ancestor contains __both__ the given class and the negated\n\t\t\t * version of it, the class is considered active.\n\t\t\t *\n\t\t\t * @param {Element} element\n\t\t\t * @param {string} className\n\t\t\t * @param {boolean} [defaultActivation=false]\n\t\t\t * @returns {boolean}\n\t\t\t */\n\t\t\tisActive: function (element, className, defaultActivation) {\n\t\t\t\tvar no = 'no-' + className;\n\n\t\t\t\twhile (element) {\n\t\t\t\t\tvar classList = element.classList;\n\t\t\t\t\tif (classList.contains(className)) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tif (classList.contains(no)) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\telement = element.parentElement;\n\t\t\t\t}\n\t\t\t\treturn !!defaultActivation;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * This namespace contains all currently loaded languages and the some helper functions to create and modify languages.\n\t\t *\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\tlanguages: {\n\t\t\t/**\n\t\t\t * The grammar for plain, unformatted text.\n\t\t\t */\n\t\t\tplain: plainTextGrammar,\n\t\t\tplaintext: plainTextGrammar,\n\t\t\ttext: plainTextGrammar,\n\t\t\ttxt: plainTextGrammar,\n\n\t\t\t/**\n\t\t\t * Creates a deep copy of the language with the given id and appends the given tokens.\n\t\t\t *\n\t\t\t * If a token in `redef` also appears in the copied language, then the existing token in the copied language\n\t\t\t * will be overwritten at its original position.\n\t\t\t *\n\t\t\t * ## Best practices\n\t\t\t *\n\t\t\t * Since the position of overwriting tokens (token in `redef` that overwrite tokens in the copied language)\n\t\t\t * doesn't matter, they can technically be in any order. However, this can be confusing to others that trying to\n\t\t\t * understand the language definition because, normally, the order of tokens matters in Prism grammars.\n\t\t\t *\n\t\t\t * Therefore, it is encouraged to order overwriting tokens according to the positions of the overwritten tokens.\n\t\t\t * Furthermore, all non-overwriting tokens should be placed after the overwriting ones.\n\t\t\t *\n\t\t\t * @param {string} id The id of the language to extend. This has to be a key in `Prism.languages`.\n\t\t\t * @param {Grammar} redef The new tokens to append.\n\t\t\t * @returns {Grammar} The new language created.\n\t\t\t * @public\n\t\t\t * @example\n\t\t\t * Prism.languages['css-with-colors'] = Prism.languages.extend('css', {\n\t\t\t *     // Prism.languages.css already has a 'comment' token, so this token will overwrite CSS' 'comment' token\n\t\t\t *     // at its original position\n\t\t\t *     'comment': { ... },\n\t\t\t *     // CSS doesn't have a 'color' token, so this token will be appended\n\t\t\t *     'color': /\\b(?:red|green|blue)\\b/\n\t\t\t * });\n\t\t\t */\n\t\t\textend: function (id, redef) {\n\t\t\t\tvar lang = _.util.clone(_.languages[id]);\n\n\t\t\t\tfor (var key in redef) {\n\t\t\t\t\tlang[key] = redef[key];\n\t\t\t\t}\n\n\t\t\t\treturn lang;\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Inserts tokens _before_ another token in a language definition or any other grammar.\n\t\t\t *\n\t\t\t * ## Usage\n\t\t\t *\n\t\t\t * This helper method makes it easy to modify existing languages. For example, the CSS language definition\n\t\t\t * not only defines CSS highlighting for CSS documents, but also needs to define highlighting for CSS embedded\n\t\t\t * in HTML through `<style>` elements. To do this, it needs to modify `Prism.languages.markup` and add the\n\t\t\t * appropriate tokens. However, `Prism.languages.markup` is a regular JavaScript object literal, so if you do\n\t\t\t * this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.markup.style = {\n\t\t\t *     // token\n\t\t\t * };\n\t\t\t * ```\n\t\t\t *\n\t\t\t * then the `style` token will be added (and processed) at the end. `insertBefore` allows you to insert tokens\n\t\t\t * before existing tokens. For the CSS example above, you would use it like this:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'cdata', {\n\t\t\t *     'style': {\n\t\t\t *         // token\n\t\t\t *     }\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Special cases\n\t\t\t *\n\t\t\t * If the grammars of `inside` and `insert` have tokens with the same name, the tokens in `inside`'s grammar\n\t\t\t * will be ignored.\n\t\t\t *\n\t\t\t * This behavior can be used to insert tokens after `before`:\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * Prism.languages.insertBefore('markup', 'comment', {\n\t\t\t *     'comment': Prism.languages.markup.comment,\n\t\t\t *     // tokens after 'comment'\n\t\t\t * });\n\t\t\t * ```\n\t\t\t *\n\t\t\t * ## Limitations\n\t\t\t *\n\t\t\t * The main problem `insertBefore` has to solve is iteration order. Since ES2015, the iteration order for object\n\t\t\t * properties is guaranteed to be the insertion order (except for integer keys) but some browsers behave\n\t\t\t * differently when keys are deleted and re-inserted. So `insertBefore` can't be implemented by temporarily\n\t\t\t * deleting properties which is necessary to insert at arbitrary positions.\n\t\t\t *\n\t\t\t * To solve this problem, `insertBefore` doesn't actually insert the given tokens into the target object.\n\t\t\t * Instead, it will create a new object and replace all references to the target object with the new one. This\n\t\t\t * can be done without temporarily deleting properties, so the iteration order is well-defined.\n\t\t\t *\n\t\t\t * However, only references that can be reached from `Prism.languages` or `insert` will be replaced. I.e. if\n\t\t\t * you hold the target object in a variable, then the value of the variable will not change.\n\t\t\t *\n\t\t\t * ```js\n\t\t\t * var oldMarkup = Prism.languages.markup;\n\t\t\t * var newMarkup = Prism.languages.insertBefore('markup', 'comment', { ... });\n\t\t\t *\n\t\t\t * assert(oldMarkup !== Prism.languages.markup);\n\t\t\t * assert(newMarkup === Prism.languages.markup);\n\t\t\t * ```\n\t\t\t *\n\t\t\t * @param {string} inside The property of `root` (e.g. a language id in `Prism.languages`) that contains the\n\t\t\t * object to be modified.\n\t\t\t * @param {string} before The key to insert before.\n\t\t\t * @param {Grammar} insert An object containing the key-value pairs to be inserted.\n\t\t\t * @param {Object<string, any>} [root] The object containing `inside`, i.e. the object that contains the\n\t\t\t * object to be modified.\n\t\t\t *\n\t\t\t * Defaults to `Prism.languages`.\n\t\t\t * @returns {Grammar} The new grammar object.\n\t\t\t * @public\n\t\t\t */\n\t\t\tinsertBefore: function (inside, before, insert, root) {\n\t\t\t\troot = root || /** @type {any} */ (_.languages);\n\t\t\t\tvar grammar = root[inside];\n\t\t\t\t/** @type {Grammar} */\n\t\t\t\tvar ret = {};\n\n\t\t\t\tfor (var token in grammar) {\n\t\t\t\t\tif (grammar.hasOwnProperty(token)) {\n\n\t\t\t\t\t\tif (token == before) {\n\t\t\t\t\t\t\tfor (var newToken in insert) {\n\t\t\t\t\t\t\t\tif (insert.hasOwnProperty(newToken)) {\n\t\t\t\t\t\t\t\t\tret[newToken] = insert[newToken];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Do not insert token which also occur in insert. See #1525\n\t\t\t\t\t\tif (!insert.hasOwnProperty(token)) {\n\t\t\t\t\t\t\tret[token] = grammar[token];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tvar old = root[inside];\n\t\t\t\troot[inside] = ret;\n\n\t\t\t\t// Update references in other language definitions\n\t\t\t\t_.languages.DFS(_.languages, function (key, value) {\n\t\t\t\t\tif (value === old && key != inside) {\n\t\t\t\t\t\tthis[key] = ret;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn ret;\n\t\t\t},\n\n\t\t\t// Traverse a language definition with Depth First Search\n\t\t\tDFS: function DFS(o, callback, type, visited) {\n\t\t\t\tvisited = visited || {};\n\n\t\t\t\tvar objId = _.util.objId;\n\n\t\t\t\tfor (var i in o) {\n\t\t\t\t\tif (o.hasOwnProperty(i)) {\n\t\t\t\t\t\tcallback.call(o, i, o[i], type || i);\n\n\t\t\t\t\t\tvar property = o[i];\n\t\t\t\t\t\tvar propertyType = _.util.type(property);\n\n\t\t\t\t\t\tif (propertyType === 'Object' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, null, visited);\n\t\t\t\t\t\t} else if (propertyType === 'Array' && !visited[objId(property)]) {\n\t\t\t\t\t\t\tvisited[objId(property)] = true;\n\t\t\t\t\t\t\tDFS(property, callback, i, visited);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tplugins: {},\n\n\t\t/**\n\t\t * This is the most high-level function in Prism’s API.\n\t\t * It fetches all the elements that have a `.language-xxxx` class and then calls {@link Prism.highlightElement} on\n\t\t * each one of them.\n\t\t *\n\t\t * This is equivalent to `Prism.highlightAllUnder(document, async, callback)`.\n\t\t *\n\t\t * @param {boolean} [async=false] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @param {HighlightCallback} [callback] Same as in {@link Prism.highlightAllUnder}.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAll: function (async, callback) {\n\t\t\t_.highlightAllUnder(document, async, callback);\n\t\t},\n\n\t\t/**\n\t\t * Fetches all the descendants of `container` that have a `.language-xxxx` class and then calls\n\t\t * {@link Prism.highlightElement} on each one of them.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-highlightall`\n\t\t * 2. `before-all-elements-highlight`\n\t\t * 3. All hooks of {@link Prism.highlightElement} for each element.\n\t\t *\n\t\t * @param {ParentNode} container The root element, whose descendants that have a `.language-xxxx` class will be highlighted.\n\t\t * @param {boolean} [async=false] Whether each element is to be highlighted asynchronously using Web Workers.\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked on each element after its highlighting is done.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightAllUnder: function (container, async, callback) {\n\t\t\tvar env = {\n\t\t\t\tcallback: callback,\n\t\t\t\tcontainer: container,\n\t\t\t\tselector: 'code[class*=\"language-\"], [class*=\"language-\"] code, code[class*=\"lang-\"], [class*=\"lang-\"] code'\n\t\t\t};\n\n\t\t\t_.hooks.run('before-highlightall', env);\n\n\t\t\tenv.elements = Array.prototype.slice.apply(env.container.querySelectorAll(env.selector));\n\n\t\t\t_.hooks.run('before-all-elements-highlight', env);\n\n\t\t\tfor (var i = 0, element; (element = env.elements[i++]);) {\n\t\t\t\t_.highlightElement(element, async === true, env.callback);\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Highlights the code inside a single element.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-sanity-check`\n\t\t * 2. `before-highlight`\n\t\t * 3. All hooks of {@link Prism.highlight}. These hooks will be run by an asynchronous worker if `async` is `true`.\n\t\t * 4. `before-insert`\n\t\t * 5. `after-highlight`\n\t\t * 6. `complete`\n\t\t *\n\t\t * Some the above hooks will be skipped if the element doesn't contain any text or there is no grammar loaded for\n\t\t * the element's language.\n\t\t *\n\t\t * @param {Element} element The element containing the code.\n\t\t * It must have a class of `language-xxxx` to be processed, where `xxxx` is a valid language identifier.\n\t\t * @param {boolean} [async=false] Whether the element is to be highlighted asynchronously using Web Workers\n\t\t * to improve performance and avoid blocking the UI when highlighting very large chunks of code. This option is\n\t\t * [disabled by default](https://prismjs.com/faq.html#why-is-asynchronous-highlighting-disabled-by-default).\n\t\t *\n\t\t * Note: All language definitions required to highlight the code must be included in the main `prism.js` file for\n\t\t * asynchronous highlighting to work. You can build your own bundle on the\n\t\t * [Download page](https://prismjs.com/download.html).\n\t\t * @param {HighlightCallback} [callback] An optional callback to be invoked after the highlighting is done.\n\t\t * Mostly useful when `async` is `true`, since in that case, the highlighting is done asynchronously.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thighlightElement: function (element, async, callback) {\n\t\t\t// Find language\n\t\t\tvar language = _.util.getLanguage(element);\n\t\t\tvar grammar = _.languages[language];\n\n\t\t\t// Set language on the element, if not present\n\t\t\t_.util.setLanguage(element, language);\n\n\t\t\t// Set language on the parent, for styling\n\t\t\tvar parent = element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre') {\n\t\t\t\t_.util.setLanguage(parent, language);\n\t\t\t}\n\n\t\t\tvar code = element.textContent;\n\n\t\t\tvar env = {\n\t\t\t\telement: element,\n\t\t\t\tlanguage: language,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tcode: code\n\t\t\t};\n\n\t\t\tfunction insertHighlightedCode(highlightedCode) {\n\t\t\t\tenv.highlightedCode = highlightedCode;\n\n\t\t\t\t_.hooks.run('before-insert', env);\n\n\t\t\t\tenv.element.innerHTML = env.highlightedCode;\n\n\t\t\t\t_.hooks.run('after-highlight', env);\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t}\n\n\t\t\t_.hooks.run('before-sanity-check', env);\n\n\t\t\t// plugins may change/add the parent/element\n\t\t\tparent = env.element.parentElement;\n\t\t\tif (parent && parent.nodeName.toLowerCase() === 'pre' && !parent.hasAttribute('tabindex')) {\n\t\t\t\tparent.setAttribute('tabindex', '0');\n\t\t\t}\n\n\t\t\tif (!env.code) {\n\t\t\t\t_.hooks.run('complete', env);\n\t\t\t\tcallback && callback.call(env.element);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_.hooks.run('before-highlight', env);\n\n\t\t\tif (!env.grammar) {\n\t\t\t\tinsertHighlightedCode(_.util.encode(env.code));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (async && _self.Worker) {\n\t\t\t\tvar worker = new Worker(_.filename);\n\n\t\t\t\tworker.onmessage = function (evt) {\n\t\t\t\t\tinsertHighlightedCode(evt.data);\n\t\t\t\t};\n\n\t\t\t\tworker.postMessage(JSON.stringify({\n\t\t\t\t\tlanguage: env.language,\n\t\t\t\t\tcode: env.code,\n\t\t\t\t\timmediateClose: true\n\t\t\t\t}));\n\t\t\t} else {\n\t\t\t\tinsertHighlightedCode(_.highlight(env.code, env.grammar, env.language));\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Low-level function, only use if you know what you’re doing. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns a string with the HTML produced.\n\t\t *\n\t\t * The following hooks will be run:\n\t\t * 1. `before-tokenize`\n\t\t * 2. `after-tokenize`\n\t\t * 3. `wrap`: On each {@link Token}.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @param {string} language The name of the language definition passed to `grammar`.\n\t\t * @returns {string} The highlighted HTML.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * Prism.highlight('var foo = true;', Prism.languages.javascript, 'javascript');\n\t\t */\n\t\thighlight: function (text, grammar, language) {\n\t\t\tvar env = {\n\t\t\t\tcode: text,\n\t\t\t\tgrammar: grammar,\n\t\t\t\tlanguage: language\n\t\t\t};\n\t\t\t_.hooks.run('before-tokenize', env);\n\t\t\tif (!env.grammar) {\n\t\t\t\tthrow new Error('The language \"' + env.language + '\" has no grammar.');\n\t\t\t}\n\t\t\tenv.tokens = _.tokenize(env.code, env.grammar);\n\t\t\t_.hooks.run('after-tokenize', env);\n\t\t\treturn Token.stringify(_.util.encode(env.tokens), env.language);\n\t\t},\n\n\t\t/**\n\t\t * This is the heart of Prism, and the most low-level function you can use. It accepts a string of text as input\n\t\t * and the language definitions to use, and returns an array with the tokenized code.\n\t\t *\n\t\t * When the language definition includes nested tokens, the function is called recursively on each of these tokens.\n\t\t *\n\t\t * This method could be useful in other contexts as well, as a very crude parser.\n\t\t *\n\t\t * @param {string} text A string with the code to be highlighted.\n\t\t * @param {Grammar} grammar An object containing the tokens to use.\n\t\t *\n\t\t * Usually a language definition like `Prism.languages.markup`.\n\t\t * @returns {TokenStream} An array of strings and tokens, a token stream.\n\t\t * @memberof Prism\n\t\t * @public\n\t\t * @example\n\t\t * let code = `var foo = 0;`;\n\t\t * let tokens = Prism.tokenize(code, Prism.languages.javascript);\n\t\t * tokens.forEach(token => {\n\t\t *     if (token instanceof Prism.Token && token.type === 'number') {\n\t\t *         console.log(`Found numeric literal: ${token.content}`);\n\t\t *     }\n\t\t * });\n\t\t */\n\t\ttokenize: function (text, grammar) {\n\t\t\tvar rest = grammar.rest;\n\t\t\tif (rest) {\n\t\t\t\tfor (var token in rest) {\n\t\t\t\t\tgrammar[token] = rest[token];\n\t\t\t\t}\n\n\t\t\t\tdelete grammar.rest;\n\t\t\t}\n\n\t\t\tvar tokenList = new LinkedList();\n\t\t\taddAfter(tokenList, tokenList.head, text);\n\n\t\t\tmatchGrammar(text, tokenList, grammar, tokenList.head, 0);\n\n\t\t\treturn toArray(tokenList);\n\t\t},\n\n\t\t/**\n\t\t * @namespace\n\t\t * @memberof Prism\n\t\t * @public\n\t\t */\n\t\thooks: {\n\t\t\tall: {},\n\n\t\t\t/**\n\t\t\t * Adds the given callback to the list of callbacks for the given hook.\n\t\t\t *\n\t\t\t * The callback will be invoked when the hook it is registered for is run.\n\t\t\t * Hooks are usually directly run by a highlight function but you can also run hooks yourself.\n\t\t\t *\n\t\t\t * One callback function can be registered to multiple hooks and the same hook multiple times.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {HookCallback} callback The callback function which is given environment variables.\n\t\t\t * @public\n\t\t\t */\n\t\t\tadd: function (name, callback) {\n\t\t\t\tvar hooks = _.hooks.all;\n\n\t\t\t\thooks[name] = hooks[name] || [];\n\n\t\t\t\thooks[name].push(callback);\n\t\t\t},\n\n\t\t\t/**\n\t\t\t * Runs a hook invoking all registered callbacks with the given environment variables.\n\t\t\t *\n\t\t\t * Callbacks will be invoked synchronously and in the order in which they were registered.\n\t\t\t *\n\t\t\t * @param {string} name The name of the hook.\n\t\t\t * @param {Object<string, any>} env The environment variables of the hook passed to all callbacks registered.\n\t\t\t * @public\n\t\t\t */\n\t\t\trun: function (name, env) {\n\t\t\t\tvar callbacks = _.hooks.all[name];\n\n\t\t\t\tif (!callbacks || !callbacks.length) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tfor (var i = 0, callback; (callback = callbacks[i++]);) {\n\t\t\t\t\tcallback(env);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tToken: Token\n\t};\n\t_self.Prism = _;\n\n\n\t// Typescript note:\n\t// The following can be used to import the Token type in JSDoc:\n\t//\n\t//   @typedef {InstanceType<import(\"./prism-core\")[\"Token\"]>} Token\n\n\t/**\n\t * Creates a new token.\n\t *\n\t * @param {string} type See {@link Token#type type}\n\t * @param {string | TokenStream} content See {@link Token#content content}\n\t * @param {string|string[]} [alias] The alias(es) of the token.\n\t * @param {string} [matchedStr=\"\"] A copy of the full string this token was created from.\n\t * @class\n\t * @global\n\t * @public\n\t */\n\tfunction Token(type, content, alias, matchedStr) {\n\t\t/**\n\t\t * The type of the token.\n\t\t *\n\t\t * This is usually the key of a pattern in a {@link Grammar}.\n\t\t *\n\t\t * @type {string}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.type = type;\n\t\t/**\n\t\t * The strings or tokens contained by this token.\n\t\t *\n\t\t * This will be a token stream if the pattern matched also defined an `inside` grammar.\n\t\t *\n\t\t * @type {string | TokenStream}\n\t\t * @public\n\t\t */\n\t\tthis.content = content;\n\t\t/**\n\t\t * The alias(es) of the token.\n\t\t *\n\t\t * @type {string|string[]}\n\t\t * @see GrammarToken\n\t\t * @public\n\t\t */\n\t\tthis.alias = alias;\n\t\t// Copy of the full string this token was created from\n\t\tthis.length = (matchedStr || '').length | 0;\n\t}\n\n\t/**\n\t * A token stream is an array of strings and {@link Token Token} objects.\n\t *\n\t * Token streams have to fulfill a few properties that are assumed by most functions (mostly internal ones) that process\n\t * them.\n\t *\n\t * 1. No adjacent strings.\n\t * 2. No empty strings.\n\t *\n\t *    The only exception here is the token stream that only contains the empty string and nothing else.\n\t *\n\t * @typedef {Array<string | Token>} TokenStream\n\t * @global\n\t * @public\n\t */\n\n\t/**\n\t * Converts the given token or token stream to an HTML representation.\n\t *\n\t * The following hooks will be run:\n\t * 1. `wrap`: On each {@link Token}.\n\t *\n\t * @param {string | Token | TokenStream} o The token or token stream to be converted.\n\t * @param {string} language The name of current language.\n\t * @returns {string} The HTML representation of the token or token stream.\n\t * @memberof Token\n\t * @static\n\t */\n\tToken.stringify = function stringify(o, language) {\n\t\tif (typeof o == 'string') {\n\t\t\treturn o;\n\t\t}\n\t\tif (Array.isArray(o)) {\n\t\t\tvar s = '';\n\t\t\to.forEach(function (e) {\n\t\t\t\ts += stringify(e, language);\n\t\t\t});\n\t\t\treturn s;\n\t\t}\n\n\t\tvar env = {\n\t\t\ttype: o.type,\n\t\t\tcontent: stringify(o.content, language),\n\t\t\ttag: 'span',\n\t\t\tclasses: ['token', o.type],\n\t\t\tattributes: {},\n\t\t\tlanguage: language\n\t\t};\n\n\t\tvar aliases = o.alias;\n\t\tif (aliases) {\n\t\t\tif (Array.isArray(aliases)) {\n\t\t\t\tArray.prototype.push.apply(env.classes, aliases);\n\t\t\t} else {\n\t\t\t\tenv.classes.push(aliases);\n\t\t\t}\n\t\t}\n\n\t\t_.hooks.run('wrap', env);\n\n\t\tvar attributes = '';\n\t\tfor (var name in env.attributes) {\n\t\t\tattributes += ' ' + name + '=\"' + (env.attributes[name] || '').replace(/\"/g, '&quot;') + '\"';\n\t\t}\n\n\t\treturn '<' + env.tag + ' class=\"' + env.classes.join(' ') + '\"' + attributes + '>' + env.content + '</' + env.tag + '>';\n\t};\n\n\t/**\n\t * @param {RegExp} pattern\n\t * @param {number} pos\n\t * @param {string} text\n\t * @param {boolean} lookbehind\n\t * @returns {RegExpExecArray | null}\n\t */\n\tfunction matchPattern(pattern, pos, text, lookbehind) {\n\t\tpattern.lastIndex = pos;\n\t\tvar match = pattern.exec(text);\n\t\tif (match && lookbehind && match[1]) {\n\t\t\t// change the match to remove the text matched by the Prism lookbehind group\n\t\t\tvar lookbehindLength = match[1].length;\n\t\t\tmatch.index += lookbehindLength;\n\t\t\tmatch[0] = match[0].slice(lookbehindLength);\n\t\t}\n\t\treturn match;\n\t}\n\n\t/**\n\t * @param {string} text\n\t * @param {LinkedList<string | Token>} tokenList\n\t * @param {any} grammar\n\t * @param {LinkedListNode<string | Token>} startNode\n\t * @param {number} startPos\n\t * @param {RematchOptions} [rematch]\n\t * @returns {void}\n\t * @private\n\t *\n\t * @typedef RematchOptions\n\t * @property {string} cause\n\t * @property {number} reach\n\t */\n\tfunction matchGrammar(text, tokenList, grammar, startNode, startPos, rematch) {\n\t\tfor (var token in grammar) {\n\t\t\tif (!grammar.hasOwnProperty(token) || !grammar[token]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tvar patterns = grammar[token];\n\t\t\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\t\t\tfor (var j = 0; j < patterns.length; ++j) {\n\t\t\t\tif (rematch && rematch.cause == token + ',' + j) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar patternObj = patterns[j];\n\t\t\t\tvar inside = patternObj.inside;\n\t\t\t\tvar lookbehind = !!patternObj.lookbehind;\n\t\t\t\tvar greedy = !!patternObj.greedy;\n\t\t\t\tvar alias = patternObj.alias;\n\n\t\t\t\tif (greedy && !patternObj.pattern.global) {\n\t\t\t\t\t// Without the global flag, lastIndex won't work\n\t\t\t\t\tvar flags = patternObj.pattern.toString().match(/[imsuy]*$/)[0];\n\t\t\t\t\tpatternObj.pattern = RegExp(patternObj.pattern.source, flags + 'g');\n\t\t\t\t}\n\n\t\t\t\t/** @type {RegExp} */\n\t\t\t\tvar pattern = patternObj.pattern || patternObj;\n\n\t\t\t\tfor ( // iterate the token list and keep track of the current token/string position\n\t\t\t\t\tvar currentNode = startNode.next, pos = startPos;\n\t\t\t\t\tcurrentNode !== tokenList.tail;\n\t\t\t\t\tpos += currentNode.value.length, currentNode = currentNode.next\n\t\t\t\t) {\n\n\t\t\t\t\tif (rematch && pos >= rematch.reach) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar str = currentNode.value;\n\n\t\t\t\t\tif (tokenList.length > text.length) {\n\t\t\t\t\t\t// Something went terribly wrong, ABORT, ABORT!\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (str instanceof Token) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeCount = 1; // this is the to parameter of removeBetween\n\t\t\t\t\tvar match;\n\n\t\t\t\t\tif (greedy) {\n\t\t\t\t\t\tmatch = matchPattern(pattern, pos, text, lookbehind);\n\t\t\t\t\t\tif (!match || match.index >= text.length) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar from = match.index;\n\t\t\t\t\t\tvar to = match.index + match[0].length;\n\t\t\t\t\t\tvar p = pos;\n\n\t\t\t\t\t\t// find the node that contains the match\n\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\twhile (from >= p) {\n\t\t\t\t\t\t\tcurrentNode = currentNode.next;\n\t\t\t\t\t\t\tp += currentNode.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// adjust pos (and p)\n\t\t\t\t\t\tp -= currentNode.value.length;\n\t\t\t\t\t\tpos = p;\n\n\t\t\t\t\t\t// the current node is a Token, then the match starts inside another Token, which is invalid\n\t\t\t\t\t\tif (currentNode.value instanceof Token) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// find the last node which is affected by this match\n\t\t\t\t\t\tfor (\n\t\t\t\t\t\t\tvar k = currentNode;\n\t\t\t\t\t\t\tk !== tokenList.tail && (p < to || typeof k.value === 'string');\n\t\t\t\t\t\t\tk = k.next\n\t\t\t\t\t\t) {\n\t\t\t\t\t\t\tremoveCount++;\n\t\t\t\t\t\t\tp += k.value.length;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tremoveCount--;\n\n\t\t\t\t\t\t// replace with the new match\n\t\t\t\t\t\tstr = text.slice(pos, p);\n\t\t\t\t\t\tmatch.index -= pos;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmatch = matchPattern(pattern, 0, str, lookbehind);\n\t\t\t\t\t\tif (!match) {\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// eslint-disable-next-line no-redeclare\n\t\t\t\t\tvar from = match.index;\n\t\t\t\t\tvar matchStr = match[0];\n\t\t\t\t\tvar before = str.slice(0, from);\n\t\t\t\t\tvar after = str.slice(from + matchStr.length);\n\n\t\t\t\t\tvar reach = pos + str.length;\n\t\t\t\t\tif (rematch && reach > rematch.reach) {\n\t\t\t\t\t\trematch.reach = reach;\n\t\t\t\t\t}\n\n\t\t\t\t\tvar removeFrom = currentNode.prev;\n\n\t\t\t\t\tif (before) {\n\t\t\t\t\t\tremoveFrom = addAfter(tokenList, removeFrom, before);\n\t\t\t\t\t\tpos += before.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tremoveRange(tokenList, removeFrom, removeCount);\n\n\t\t\t\t\tvar wrapped = new Token(token, inside ? _.tokenize(matchStr, inside) : matchStr, alias, matchStr);\n\t\t\t\t\tcurrentNode = addAfter(tokenList, removeFrom, wrapped);\n\n\t\t\t\t\tif (after) {\n\t\t\t\t\t\taddAfter(tokenList, currentNode, after);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (removeCount > 1) {\n\t\t\t\t\t\t// at least one Token object was removed, so we have to do some rematching\n\t\t\t\t\t\t// this can only happen if the current pattern is greedy\n\n\t\t\t\t\t\t/** @type {RematchOptions} */\n\t\t\t\t\t\tvar nestedRematch = {\n\t\t\t\t\t\t\tcause: token + ',' + j,\n\t\t\t\t\t\t\treach: reach\n\t\t\t\t\t\t};\n\t\t\t\t\t\tmatchGrammar(text, tokenList, grammar, currentNode.prev, pos, nestedRematch);\n\n\t\t\t\t\t\t// the reach might have been extended because of the rematching\n\t\t\t\t\t\tif (rematch && nestedRematch.reach > rematch.reach) {\n\t\t\t\t\t\t\trematch.reach = nestedRematch.reach;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * @typedef LinkedListNode\n\t * @property {T} value\n\t * @property {LinkedListNode<T> | null} prev The previous node.\n\t * @property {LinkedListNode<T> | null} next The next node.\n\t * @template T\n\t * @private\n\t */\n\n\t/**\n\t * @template T\n\t * @private\n\t */\n\tfunction LinkedList() {\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar head = { value: null, prev: null, next: null };\n\t\t/** @type {LinkedListNode<T>} */\n\t\tvar tail = { value: null, prev: head, next: null };\n\t\thead.next = tail;\n\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.head = head;\n\t\t/** @type {LinkedListNode<T>} */\n\t\tthis.tail = tail;\n\t\tthis.length = 0;\n\t}\n\n\t/**\n\t * Adds a new node with the given value to the list.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {T} value\n\t * @returns {LinkedListNode<T>} The added node.\n\t * @template T\n\t */\n\tfunction addAfter(list, node, value) {\n\t\t// assumes that node != list.tail && values.length >= 0\n\t\tvar next = node.next;\n\n\t\tvar newNode = { value: value, prev: node, next: next };\n\t\tnode.next = newNode;\n\t\tnext.prev = newNode;\n\t\tlist.length++;\n\n\t\treturn newNode;\n\t}\n\t/**\n\t * Removes `count` nodes after the given node. The given node will not be removed.\n\t *\n\t * @param {LinkedList<T>} list\n\t * @param {LinkedListNode<T>} node\n\t * @param {number} count\n\t * @template T\n\t */\n\tfunction removeRange(list, node, count) {\n\t\tvar next = node.next;\n\t\tfor (var i = 0; i < count && next !== list.tail; i++) {\n\t\t\tnext = next.next;\n\t\t}\n\t\tnode.next = next;\n\t\tnext.prev = node;\n\t\tlist.length -= i;\n\t}\n\t/**\n\t * @param {LinkedList<T>} list\n\t * @returns {T[]}\n\t * @template T\n\t */\n\tfunction toArray(list) {\n\t\tvar array = [];\n\t\tvar node = list.head.next;\n\t\twhile (node !== list.tail) {\n\t\t\tarray.push(node.value);\n\t\t\tnode = node.next;\n\t\t}\n\t\treturn array;\n\t}\n\n\n\tif (!_self.document) {\n\t\tif (!_self.addEventListener) {\n\t\t\t// in Node.js\n\t\t\treturn _;\n\t\t}\n\n\t\tif (!_.disableWorkerMessageHandler) {\n\t\t\t// In worker\n\t\t\t_self.addEventListener('message', function (evt) {\n\t\t\t\tvar message = JSON.parse(evt.data);\n\t\t\t\tvar lang = message.language;\n\t\t\t\tvar code = message.code;\n\t\t\t\tvar immediateClose = message.immediateClose;\n\n\t\t\t\t_self.postMessage(_.highlight(code, _.languages[lang], lang));\n\t\t\t\tif (immediateClose) {\n\t\t\t\t\t_self.close();\n\t\t\t\t}\n\t\t\t}, false);\n\t\t}\n\n\t\treturn _;\n\t}\n\n\t// Get current script and highlight\n\tvar script = _.util.currentScript();\n\n\tif (script) {\n\t\t_.filename = script.src;\n\n\t\tif (script.hasAttribute('data-manual')) {\n\t\t\t_.manual = true;\n\t\t}\n\t}\n\n\tfunction highlightAutomaticallyCallback() {\n\t\tif (!_.manual) {\n\t\t\t_.highlightAll();\n\t\t}\n\t}\n\n\tif (!_.manual) {\n\t\t// If the document state is \"loading\", then we'll use DOMContentLoaded.\n\t\t// If the document state is \"interactive\" and the prism.js script is deferred, then we'll also use the\n\t\t// DOMContentLoaded event because there might be some plugins or languages which have also been deferred and they\n\t\t// might take longer one animation frame to execute which can create a race condition where only some plugins have\n\t\t// been loaded when Prism.highlightAll() is executed, depending on how fast resources are loaded.\n\t\t// See https://github.com/PrismJS/prism/issues/2102\n\t\tvar readyState = document.readyState;\n\t\tif (readyState === 'loading' || readyState === 'interactive' && script && script.defer) {\n\t\t\tdocument.addEventListener('DOMContentLoaded', highlightAutomaticallyCallback);\n\t\t} else {\n\t\t\tif (window.requestAnimationFrame) {\n\t\t\t\twindow.requestAnimationFrame(highlightAutomaticallyCallback);\n\t\t\t} else {\n\t\t\t\twindow.setTimeout(highlightAutomaticallyCallback, 16);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn _;\n\n}(_self));\n\nif (typeof module !== 'undefined' && module.exports) {\n\tmodule.exports = Prism;\n}\n\n// hack for components to work correctly in node.js\nif (typeof global !== 'undefined') {\n\tglobal.Prism = Prism;\n}\n\n// some additional documentation/types\n\n/**\n * The expansion of a simple `RegExp` literal to support additional properties.\n *\n * @typedef GrammarToken\n * @property {RegExp} pattern The regular expression of the token.\n * @property {boolean} [lookbehind=false] If `true`, then the first capturing group of `pattern` will (effectively)\n * behave as a lookbehind group meaning that the captured text will not be part of the matched text of the new token.\n * @property {boolean} [greedy=false] Whether the token is greedy.\n * @property {string|string[]} [alias] An optional alias or list of aliases.\n * @property {Grammar} [inside] The nested grammar of this token.\n *\n * The `inside` grammar will be used to tokenize the text value of each token of this kind.\n *\n * This can be used to make nested and even recursive language definitions.\n *\n * Note: This can cause infinite recursion. Be careful when you embed different languages or even the same language into\n * each another.\n * @global\n * @public\n */\n\n/**\n * @typedef Grammar\n * @type {Object<string, RegExp | GrammarToken | Array<RegExp | GrammarToken>>}\n * @property {Grammar} [rest] An optional grammar object that will be appended to this grammar.\n * @global\n * @public\n */\n\n/**\n * A function which will invoked after an element was successfully highlighted.\n *\n * @callback HighlightCallback\n * @param {Element} element The element successfully highlighted.\n * @returns {void}\n * @global\n * @public\n */\n\n/**\n * @callback HookCallback\n * @param {Object<string, any>} env The environment variables of the hook.\n * @returns {void}\n * @global\n * @public\n */\n\n\n/* **********************************************\n     Begin prism-markup.js\n********************************************** */\n\nPrism.languages.markup = {\n\t'comment': {\n\t\tpattern: /<!--(?:(?!<!--)[\\s\\S])*?-->/,\n\t\tgreedy: true\n\t},\n\t'prolog': {\n\t\tpattern: /<\\?[\\s\\S]+?\\?>/,\n\t\tgreedy: true\n\t},\n\t'doctype': {\n\t\t// https://www.w3.org/TR/xml/#NT-doctypedecl\n\t\tpattern: /<!DOCTYPE(?:[^>\"'[\\]]|\"[^\"]*\"|'[^']*')+(?:\\[(?:[^<\"'\\]]|\"[^\"]*\"|'[^']*'|<(?!!--)|<!--(?:[^-]|-(?!->))*-->)*\\]\\s*)?>/i,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'internal-subset': {\n\t\t\t\tpattern: /(^[^\\[]*\\[)[\\s\\S]+(?=\\]>$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tgreedy: true,\n\t\t\t\tinside: null // see below\n\t\t\t},\n\t\t\t'string': {\n\t\t\t\tpattern: /\"[^\"]*\"|'[^']*'/,\n\t\t\t\tgreedy: true\n\t\t\t},\n\t\t\t'punctuation': /^<!|>$|[[\\]]/,\n\t\t\t'doctype-tag': /^DOCTYPE/i,\n\t\t\t'name': /[^\\s<>'\"]+/\n\t\t}\n\t},\n\t'cdata': {\n\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\tgreedy: true\n\t},\n\t'tag': {\n\t\tpattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'tag': {\n\t\t\t\tpattern: /^<\\/?[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': /^<\\/?/,\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t},\n\t\t\t'special-attr': [],\n\t\t\t'attr-value': {\n\t\t\t\tpattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/,\n\t\t\t\tinside: {\n\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t},\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpattern: /^(\\s*)[\"']|[\"']$/,\n\t\t\t\t\t\t\tlookbehind: true\n\t\t\t\t\t\t}\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t},\n\t\t\t'punctuation': /\\/?>/,\n\t\t\t'attr-name': {\n\t\t\t\tpattern: /[^\\s>\\/]+/,\n\t\t\t\tinside: {\n\t\t\t\t\t'namespace': /^[^\\s>\\/:]+:/\n\t\t\t\t}\n\t\t\t}\n\n\t\t}\n\t},\n\t'entity': [\n\t\t{\n\t\t\tpattern: /&[\\da-z]{1,8};/i,\n\t\t\talias: 'named-entity'\n\t\t},\n\t\t/&#x?[\\da-f]{1,8};/i\n\t]\n};\n\nPrism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n\tPrism.languages.markup['entity'];\nPrism.languages.markup['doctype'].inside['internal-subset'].inside = Prism.languages.markup;\n\n// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap', function (env) {\n\n\tif (env.type === 'entity') {\n\t\tenv.attributes['title'] = env.content.replace(/&amp;/, '&');\n\t}\n});\n\nObject.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n\t/**\n\t * Adds an inlined language to markup.\n\t *\n\t * An example of an inlined language is CSS with `<style>` tags.\n\t *\n\t * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addInlined('style', 'css');\n\t */\n\tvalue: function addInlined(tagName, lang) {\n\t\tvar includedCdataInside = {};\n\t\tincludedCdataInside['language-' + lang] = {\n\t\t\tpattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\t\tincludedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i;\n\n\t\tvar inside = {\n\t\t\t'included-cdata': {\n\t\t\t\tpattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n\t\t\t\tinside: includedCdataInside\n\t\t\t}\n\t\t};\n\t\tinside['language-' + lang] = {\n\t\t\tpattern: /[\\s\\S]+/,\n\t\t\tinside: Prism.languages[lang]\n\t\t};\n\n\t\tvar def = {};\n\t\tdef[tagName] = {\n\t\t\tpattern: RegExp(/(<__[^>]*>)(?:<!\\[CDATA\\[(?:[^\\]]|\\](?!\\]>))*\\]\\]>|(?!<!\\[CDATA\\[)[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g, function () { return tagName; }), 'i'),\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true,\n\t\t\tinside: inside\n\t\t};\n\n\t\tPrism.languages.insertBefore('markup', 'cdata', def);\n\t}\n});\nObject.defineProperty(Prism.languages.markup.tag, 'addAttribute', {\n\t/**\n\t * Adds an pattern to highlight languages embedded in HTML attributes.\n\t *\n\t * An example of an inlined language is CSS with `style` attributes.\n\t *\n\t * @param {string} attrName The name of the tag that contains the inlined language. This name will be treated as\n\t * case insensitive.\n\t * @param {string} lang The language key.\n\t * @example\n\t * addAttribute('style', 'css');\n\t */\n\tvalue: function (attrName, lang) {\n\t\tPrism.languages.markup.tag.inside['special-attr'].push({\n\t\t\tpattern: RegExp(\n\t\t\t\t/(^|[\"'\\s])/.source + '(?:' + attrName + ')' + /\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))/.source,\n\t\t\t\t'i'\n\t\t\t),\n\t\t\tlookbehind: true,\n\t\t\tinside: {\n\t\t\t\t'attr-name': /^[^\\s=]+/,\n\t\t\t\t'attr-value': {\n\t\t\t\t\tpattern: /=[\\s\\S]+/,\n\t\t\t\t\tinside: {\n\t\t\t\t\t\t'value': {\n\t\t\t\t\t\t\tpattern: /(^=\\s*([\"']|(?![\"'])))\\S[\\s\\S]*(?=\\2$)/,\n\t\t\t\t\t\t\tlookbehind: true,\n\t\t\t\t\t\t\talias: [lang, 'language-' + lang],\n\t\t\t\t\t\t\tinside: Prism.languages[lang]\n\t\t\t\t\t\t},\n\t\t\t\t\t\t'punctuation': [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tpattern: /^=/,\n\t\t\t\t\t\t\t\talias: 'attr-equals'\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/\"|'/\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t}\n});\n\nPrism.languages.html = Prism.languages.markup;\nPrism.languages.mathml = Prism.languages.markup;\nPrism.languages.svg = Prism.languages.markup;\n\nPrism.languages.xml = Prism.languages.extend('markup', {});\nPrism.languages.ssml = Prism.languages.xml;\nPrism.languages.atom = Prism.languages.xml;\nPrism.languages.rss = Prism.languages.xml;\n\n\n/* **********************************************\n     Begin prism-css.js\n********************************************** */\n\n(function (Prism) {\n\n\tvar string = /(?:\"(?:\\\\(?:\\r\\n|[\\s\\S])|[^\"\\\\\\r\\n])*\"|'(?:\\\\(?:\\r\\n|[\\s\\S])|[^'\\\\\\r\\n])*')/;\n\n\tPrism.languages.css = {\n\t\t'comment': /\\/\\*[\\s\\S]*?\\*\\//,\n\t\t'atrule': {\n\t\t\tpattern: RegExp('@[\\\\w-](?:' + /[^;{\\s\"']|\\s+(?!\\s)/.source + '|' + string.source + ')*?' + /(?:;|(?=\\s*\\{))/.source),\n\t\t\tinside: {\n\t\t\t\t'rule': /^@[\\w-]+/,\n\t\t\t\t'selector-function-argument': {\n\t\t\t\t\tpattern: /(\\bselector\\s*\\(\\s*(?![\\s)]))(?:[^()\\s]|\\s+(?![\\s)])|\\((?:[^()]|\\([^()]*\\))*\\))+(?=\\s*\\))/,\n\t\t\t\t\tlookbehind: true,\n\t\t\t\t\talias: 'selector'\n\t\t\t\t},\n\t\t\t\t'keyword': {\n\t\t\t\t\tpattern: /(^|[^\\w-])(?:and|not|only|or)(?![\\w-])/,\n\t\t\t\t\tlookbehind: true\n\t\t\t\t}\n\t\t\t\t// See rest below\n\t\t\t}\n\t\t},\n\t\t'url': {\n\t\t\t// https://drafts.csswg.org/css-values-3/#urls\n\t\t\tpattern: RegExp('\\\\burl\\\\((?:' + string.source + '|' + /(?:[^\\\\\\r\\n()\"']|\\\\[\\s\\S])*/.source + ')\\\\)', 'i'),\n\t\t\tgreedy: true,\n\t\t\tinside: {\n\t\t\t\t'function': /^url/i,\n\t\t\t\t'punctuation': /^\\(|\\)$/,\n\t\t\t\t'string': {\n\t\t\t\t\tpattern: RegExp('^' + string.source + '$'),\n\t\t\t\t\talias: 'url'\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t'selector': {\n\t\t\tpattern: RegExp('(^|[{}\\\\s])[^{}\\\\s](?:[^{};\"\\'\\\\s]|\\\\s+(?![\\\\s{])|' + string.source + ')*(?=\\\\s*\\\\{)'),\n\t\t\tlookbehind: true\n\t\t},\n\t\t'string': {\n\t\t\tpattern: string,\n\t\t\tgreedy: true\n\t\t},\n\t\t'property': {\n\t\t\tpattern: /(^|[^-\\w\\xA0-\\uFFFF])(?!\\s)[-_a-z\\xA0-\\uFFFF](?:(?!\\s)[-\\w\\xA0-\\uFFFF])*(?=\\s*:)/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'important': /!important\\b/i,\n\t\t'function': {\n\t\t\tpattern: /(^|[^-a-z0-9])[-a-z0-9]+(?=\\()/i,\n\t\t\tlookbehind: true\n\t\t},\n\t\t'punctuation': /[(){};:,]/\n\t};\n\n\tPrism.languages.css['atrule'].inside.rest = Prism.languages.css;\n\n\tvar markup = Prism.languages.markup;\n\tif (markup) {\n\t\tmarkup.tag.addInlined('style', 'css');\n\t\tmarkup.tag.addAttribute('style', 'css');\n\t}\n\n}(Prism));\n\n\n/* **********************************************\n     Begin prism-clike.js\n********************************************** */\n\nPrism.languages.clike = {\n\t'comment': [\n\t\t{\n\t\t\tpattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?(?:\\*\\/|$)/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^\\\\:])\\/\\/.*/,\n\t\t\tlookbehind: true,\n\t\t\tgreedy: true\n\t\t}\n\t],\n\t'string': {\n\t\tpattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n\t\tgreedy: true\n\t},\n\t'class-name': {\n\t\tpattern: /(\\b(?:class|extends|implements|instanceof|interface|new|trait)\\s+|\\bcatch\\s+\\()[\\w.\\\\]+/i,\n\t\tlookbehind: true,\n\t\tinside: {\n\t\t\t'punctuation': /[.\\\\]/\n\t\t}\n\t},\n\t'keyword': /\\b(?:break|catch|continue|do|else|finally|for|function|if|in|instanceof|new|null|return|throw|try|while)\\b/,\n\t'boolean': /\\b(?:false|true)\\b/,\n\t'function': /\\b\\w+(?=\\()/,\n\t'number': /\\b0x[\\da-f]+\\b|(?:\\b\\d+(?:\\.\\d*)?|\\B\\.\\d+)(?:e[+-]?\\d+)?/i,\n\t'operator': /[<>]=?|[!=]=?=?|--?|\\+\\+?|&&?|\\|\\|?|[?*/~^%]/,\n\t'punctuation': /[{}[\\];(),.:]/\n};\n\n\n/* **********************************************\n     Begin prism-javascript.js\n********************************************** */\n\nPrism.languages.javascript = Prism.languages.extend('clike', {\n\t'class-name': [\n\t\tPrism.languages.clike['class-name'],\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$A-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\.(?:constructor|prototype))/,\n\t\t\tlookbehind: true\n\t\t}\n\t],\n\t'keyword': [\n\t\t{\n\t\t\tpattern: /((?:^|\\})\\s*)catch\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^.]|\\.\\.\\.\\s*)\\b(?:as|assert(?=\\s*\\{)|async(?=\\s*(?:function\\b|\\(|[$\\w\\xA0-\\uFFFF]|$))|await|break|case|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally(?=\\s*(?:\\{|$))|for|from(?=\\s*(?:['\"]|$))|function|(?:get|set)(?=\\s*(?:[#\\[$\\w\\xA0-\\uFFFF]|$))|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)\\b/,\n\t\t\tlookbehind: true\n\t\t},\n\t],\n\t// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)\n\t'function': /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*(?:\\.\\s*(?:apply|bind|call)\\s*)?\\()/,\n\t'number': {\n\t\tpattern: RegExp(\n\t\t\t/(^|[^\\w$])/.source +\n\t\t\t'(?:' +\n\t\t\t(\n\t\t\t\t// constant\n\t\t\t\t/NaN|Infinity/.source +\n\t\t\t\t'|' +\n\t\t\t\t// binary integer\n\t\t\t\t/0[bB][01]+(?:_[01]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// octal integer\n\t\t\t\t/0[oO][0-7]+(?:_[0-7]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// hexadecimal integer\n\t\t\t\t/0[xX][\\dA-Fa-f]+(?:_[\\dA-Fa-f]+)*n?/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal bigint\n\t\t\t\t/\\d+(?:_\\d+)*n/.source +\n\t\t\t\t'|' +\n\t\t\t\t// decimal number (integer or float) but no bigint\n\t\t\t\t/(?:\\d+(?:_\\d+)*(?:\\.(?:\\d+(?:_\\d+)*)?)?|\\.\\d+(?:_\\d+)*)(?:[Ee][+-]?\\d+(?:_\\d+)*)?/.source\n\t\t\t) +\n\t\t\t')' +\n\t\t\t/(?![\\w$])/.source\n\t\t),\n\t\tlookbehind: true\n\t},\n\t'operator': /--|\\+\\+|\\*\\*=?|=>|&&=?|\\|\\|=?|[!=]==|<<=?|>>>?=?|[-+*/%&|^!=<>]=?|\\.{3}|\\?\\?=?|\\?\\.?|[~:]/\n});\n\nPrism.languages.javascript['class-name'][0].pattern = /(\\b(?:class|extends|implements|instanceof|interface|new)\\s+)[\\w.\\\\]+/;\n\nPrism.languages.insertBefore('javascript', 'keyword', {\n\t'regex': {\n\t\tpattern: RegExp(\n\t\t\t// lookbehind\n\t\t\t// eslint-disable-next-line regexp/no-dupe-characters-character-class\n\t\t\t/((?:^|[^$\\w\\xA0-\\uFFFF.\"'\\])\\s]|\\b(?:return|yield))\\s*)/.source +\n\t\t\t// Regex pattern:\n\t\t\t// There are 2 regex patterns here. The RegExp set notation proposal added support for nested character\n\t\t\t// classes if the `v` flag is present. Unfortunately, nested CCs are both context-free and incompatible\n\t\t\t// with the only syntax, so we have to define 2 different regex patterns.\n\t\t\t/\\//.source +\n\t\t\t'(?:' +\n\t\t\t/(?:\\[(?:[^\\]\\\\\\r\\n]|\\\\.)*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}/.source +\n\t\t\t'|' +\n\t\t\t// `v` flag syntax. This supports 3 levels of nested character classes.\n\t\t\t/(?:\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.|\\[(?:[^[\\]\\\\\\r\\n]|\\\\.)*\\])*\\])*\\]|\\\\.|[^/\\\\\\[\\r\\n])+\\/[dgimyus]{0,7}v[dgimyus]{0,7}/.source +\n\t\t\t')' +\n\t\t\t// lookahead\n\t\t\t/(?=(?:\\s|\\/\\*(?:[^*]|\\*(?!\\/))*\\*\\/)*(?:$|[\\r\\n,.;:})\\]]|\\/\\/))/.source\n\t\t),\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'regex-source': {\n\t\t\t\tpattern: /^(\\/)[\\s\\S]+(?=\\/[a-z]*$)/,\n\t\t\t\tlookbehind: true,\n\t\t\t\talias: 'language-regex',\n\t\t\t\tinside: Prism.languages.regex\n\t\t\t},\n\t\t\t'regex-delimiter': /^\\/|\\/$/,\n\t\t\t'regex-flags': /^[a-z]+$/,\n\t\t}\n\t},\n\t// This must be declared before keyword because we use \"function\" inside the look-forward\n\t'function-variable': {\n\t\tpattern: /#?(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*[=:]\\s*(?:async\\s*)?(?:\\bfunction\\b|(?:\\((?:[^()]|\\([^()]*\\))*\\)|(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)\\s*=>))/,\n\t\talias: 'function'\n\t},\n\t'parameter': [\n\t\t{\n\t\t\tpattern: /(function(?:\\s+(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*)?\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\))/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(^|[^$\\w\\xA0-\\uFFFF])(?!\\s)[_$a-z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*=>)/i,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /(\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*=>)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t},\n\t\t{\n\t\t\tpattern: /((?:\\b|\\s|^)(?!(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|undefined|var|void|while|with|yield)(?![$\\w\\xA0-\\uFFFF]))(?:(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*\\s*)\\(\\s*|\\]\\s*\\(\\s*)(?!\\s)(?:[^()\\s]|\\s+(?![\\s)])|\\([^()]*\\))+(?=\\s*\\)\\s*\\{)/,\n\t\t\tlookbehind: true,\n\t\t\tinside: Prism.languages.javascript\n\t\t}\n\t],\n\t'constant': /\\b[A-Z](?:[A-Z_]|\\dx?)*\\b/\n});\n\nPrism.languages.insertBefore('javascript', 'string', {\n\t'hashbang': {\n\t\tpattern: /^#!.*/,\n\t\tgreedy: true,\n\t\talias: 'comment'\n\t},\n\t'template-string': {\n\t\tpattern: /`(?:\\\\[\\s\\S]|\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}|(?!\\$\\{)[^\\\\`])*`/,\n\t\tgreedy: true,\n\t\tinside: {\n\t\t\t'template-punctuation': {\n\t\t\t\tpattern: /^`|`$/,\n\t\t\t\talias: 'string'\n\t\t\t},\n\t\t\t'interpolation': {\n\t\t\t\tpattern: /((?:^|[^\\\\])(?:\\\\{2})*)\\$\\{(?:[^{}]|\\{(?:[^{}]|\\{[^}]*\\})*\\})+\\}/,\n\t\t\t\tlookbehind: true,\n\t\t\t\tinside: {\n\t\t\t\t\t'interpolation-punctuation': {\n\t\t\t\t\t\tpattern: /^\\$\\{|\\}$/,\n\t\t\t\t\t\talias: 'punctuation'\n\t\t\t\t\t},\n\t\t\t\t\trest: Prism.languages.javascript\n\t\t\t\t}\n\t\t\t},\n\t\t\t'string': /[\\s\\S]+/\n\t\t}\n\t},\n\t'string-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\2)[^\\\\\\r\\n])*\\2(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\tgreedy: true,\n\t\talias: 'property'\n\t}\n});\n\nPrism.languages.insertBefore('javascript', 'operator', {\n\t'literal-property': {\n\t\tpattern: /((?:^|[,{])[ \\t]*)(?!\\s)[_$a-zA-Z\\xA0-\\uFFFF](?:(?!\\s)[$\\w\\xA0-\\uFFFF])*(?=\\s*:)/m,\n\t\tlookbehind: true,\n\t\talias: 'property'\n\t},\n});\n\nif (Prism.languages.markup) {\n\tPrism.languages.markup.tag.addInlined('script', 'javascript');\n\n\t// add attribute support for all DOM events.\n\t// https://developer.mozilla.org/en-US/docs/Web/Events#Standard_events\n\tPrism.languages.markup.tag.addAttribute(\n\t\t/on(?:abort|blur|change|click|composition(?:end|start|update)|dblclick|error|focus(?:in|out)?|key(?:down|up)|load|mouse(?:down|enter|leave|move|out|over|up)|reset|resize|scroll|select|slotchange|submit|unload|wheel)/.source,\n\t\t'javascript'\n\t);\n}\n\nPrism.languages.js = Prism.languages.javascript;\n\n\n/* **********************************************\n     Begin prism-file-highlight.js\n********************************************** */\n\n(function () {\n\n\tif (typeof Prism === 'undefined' || typeof document === 'undefined') {\n\t\treturn;\n\t}\n\n\t// https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#Polyfill\n\tif (!Element.prototype.matches) {\n\t\tElement.prototype.matches = Element.prototype.msMatchesSelector || Element.prototype.webkitMatchesSelector;\n\t}\n\n\tvar LOADING_MESSAGE = 'Loading…';\n\tvar FAILURE_MESSAGE = function (status, message) {\n\t\treturn '✖ Error ' + status + ' while fetching file: ' + message;\n\t};\n\tvar FAILURE_EMPTY_MESSAGE = '✖ Error: File does not exist or is empty';\n\n\tvar EXTENSIONS = {\n\t\t'js': 'javascript',\n\t\t'py': 'python',\n\t\t'rb': 'ruby',\n\t\t'ps1': 'powershell',\n\t\t'psm1': 'powershell',\n\t\t'sh': 'bash',\n\t\t'bat': 'batch',\n\t\t'h': 'c',\n\t\t'tex': 'latex'\n\t};\n\n\tvar STATUS_ATTR = 'data-src-status';\n\tvar STATUS_LOADING = 'loading';\n\tvar STATUS_LOADED = 'loaded';\n\tvar STATUS_FAILED = 'failed';\n\n\tvar SELECTOR = 'pre[data-src]:not([' + STATUS_ATTR + '=\"' + STATUS_LOADED + '\"])'\n\t\t+ ':not([' + STATUS_ATTR + '=\"' + STATUS_LOADING + '\"])';\n\n\t/**\n\t * Loads the given file.\n\t *\n\t * @param {string} src The URL or path of the source file to load.\n\t * @param {(result: string) => void} success\n\t * @param {(reason: string) => void} error\n\t */\n\tfunction loadFile(src, success, error) {\n\t\tvar xhr = new XMLHttpRequest();\n\t\txhr.open('GET', src, true);\n\t\txhr.onreadystatechange = function () {\n\t\t\tif (xhr.readyState == 4) {\n\t\t\t\tif (xhr.status < 400 && xhr.responseText) {\n\t\t\t\t\tsuccess(xhr.responseText);\n\t\t\t\t} else {\n\t\t\t\t\tif (xhr.status >= 400) {\n\t\t\t\t\t\terror(FAILURE_MESSAGE(xhr.status, xhr.statusText));\n\t\t\t\t\t} else {\n\t\t\t\t\t\terror(FAILURE_EMPTY_MESSAGE);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\txhr.send(null);\n\t}\n\n\t/**\n\t * Parses the given range.\n\t *\n\t * This returns a range with inclusive ends.\n\t *\n\t * @param {string | null | undefined} range\n\t * @returns {[number, number | undefined] | undefined}\n\t */\n\tfunction parseRange(range) {\n\t\tvar m = /^\\s*(\\d+)\\s*(?:(,)\\s*(?:(\\d+)\\s*)?)?$/.exec(range || '');\n\t\tif (m) {\n\t\t\tvar start = Number(m[1]);\n\t\t\tvar comma = m[2];\n\t\t\tvar end = m[3];\n\n\t\t\tif (!comma) {\n\t\t\t\treturn [start, start];\n\t\t\t}\n\t\t\tif (!end) {\n\t\t\t\treturn [start, undefined];\n\t\t\t}\n\t\t\treturn [start, Number(end)];\n\t\t}\n\t\treturn undefined;\n\t}\n\n\tPrism.hooks.add('before-highlightall', function (env) {\n\t\tenv.selector += ', ' + SELECTOR;\n\t});\n\n\tPrism.hooks.add('before-sanity-check', function (env) {\n\t\tvar pre = /** @type {HTMLPreElement} */ (env.element);\n\t\tif (pre.matches(SELECTOR)) {\n\t\t\tenv.code = ''; // fast-path the whole thing and go to complete\n\n\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADING); // mark as loading\n\n\t\t\t// add code element with loading message\n\t\t\tvar code = pre.appendChild(document.createElement('CODE'));\n\t\t\tcode.textContent = LOADING_MESSAGE;\n\n\t\t\tvar src = pre.getAttribute('data-src');\n\n\t\t\tvar language = env.language;\n\t\t\tif (language === 'none') {\n\t\t\t\t// the language might be 'none' because there is no language set;\n\t\t\t\t// in this case, we want to use the extension as the language\n\t\t\t\tvar extension = (/\\.(\\w+)$/.exec(src) || [, 'none'])[1];\n\t\t\t\tlanguage = EXTENSIONS[extension] || extension;\n\t\t\t}\n\n\t\t\t// set language classes\n\t\t\tPrism.util.setLanguage(code, language);\n\t\t\tPrism.util.setLanguage(pre, language);\n\n\t\t\t// preload the language\n\t\t\tvar autoloader = Prism.plugins.autoloader;\n\t\t\tif (autoloader) {\n\t\t\t\tautoloader.loadLanguages(language);\n\t\t\t}\n\n\t\t\t// load file\n\t\t\tloadFile(\n\t\t\t\tsrc,\n\t\t\t\tfunction (text) {\n\t\t\t\t\t// mark as loaded\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_LOADED);\n\n\t\t\t\t\t// handle data-range\n\t\t\t\t\tvar range = parseRange(pre.getAttribute('data-range'));\n\t\t\t\t\tif (range) {\n\t\t\t\t\t\tvar lines = text.split(/\\r\\n?|\\n/g);\n\n\t\t\t\t\t\t// the range is one-based and inclusive on both ends\n\t\t\t\t\t\tvar start = range[0];\n\t\t\t\t\t\tvar end = range[1] == null ? lines.length : range[1];\n\n\t\t\t\t\t\tif (start < 0) { start += lines.length; }\n\t\t\t\t\t\tstart = Math.max(0, Math.min(start - 1, lines.length));\n\t\t\t\t\t\tif (end < 0) { end += lines.length; }\n\t\t\t\t\t\tend = Math.max(0, Math.min(end, lines.length));\n\n\t\t\t\t\t\ttext = lines.slice(start, end).join('\\n');\n\n\t\t\t\t\t\t// add data-start for line numbers\n\t\t\t\t\t\tif (!pre.hasAttribute('data-start')) {\n\t\t\t\t\t\t\tpre.setAttribute('data-start', String(start + 1));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// highlight code\n\t\t\t\t\tcode.textContent = text;\n\t\t\t\t\tPrism.highlightElement(code);\n\t\t\t\t},\n\t\t\t\tfunction (error) {\n\t\t\t\t\t// mark as failed\n\t\t\t\t\tpre.setAttribute(STATUS_ATTR, STATUS_FAILED);\n\n\t\t\t\t\tcode.textContent = error;\n\t\t\t\t}\n\t\t\t);\n\t\t}\n\t});\n\n\tPrism.plugins.fileHighlight = {\n\t\t/**\n\t\t * Executes the File Highlight plugin for all matching `pre` elements under the given container.\n\t\t *\n\t\t * Note: Elements which are already loaded or currently loading will not be touched by this method.\n\t\t *\n\t\t * @param {ParentNode} [container=document]\n\t\t */\n\t\thighlight: function highlight(container) {\n\t\t\tvar elements = (container || document).querySelectorAll(SELECTOR);\n\n\t\t\tfor (var i = 0, element; (element = elements[i++]);) {\n\t\t\t\tPrism.highlightElement(element);\n\t\t\t}\n\t\t}\n\t};\n\n\tvar logged = false;\n\t/** @deprecated Use `Prism.plugins.fileHighlight.highlight` instead. */\n\tPrism.fileHighlight = function () {\n\t\tif (!logged) {\n\t\t\tconsole.warn('Prism.fileHighlight is deprecated. Use `Prism.plugins.fileHighlight.highlight` instead.');\n\t\t\tlogged = true;\n\t\t}\n\t\tPrism.plugins.fileHighlight.highlight.apply(this, arguments);\n\t};\n\n}());\n"]}