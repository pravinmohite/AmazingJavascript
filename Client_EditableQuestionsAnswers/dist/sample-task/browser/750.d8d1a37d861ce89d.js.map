{"version":3,"file":"750.d8d1a37d861ce89d.js","mappings":"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","names":["RelatedUserPostsComponent","constructor","loaderService","questionAnswerService","route","cd","highlightService","this","setQuestionTitleByExperience","ngOnInit","handleRouteChangeEvent","freshersInterviewQuestionsObj","UIConstants","threeYearsExperienceInterviewQuestionsObj","fiveYearsExperienceInterviewQuestionsObj","topAngularInterviewQuestions","topHTML5InterviewQuestions","topCSS3InterviewQuestions","topJavascriptInterviewQuestions","paramMap","subscribe","params","getRelatedQuestionAnswer","display","response","relatedQuestionAnswerList","detectChanges","e","selectors","i0","ctx_r5","ctx_r7","UserPostDetailComponent","title","richSnippetService","renderer","faEdit","faTrash","faExclamationTriangle","adminMode","isAdmin","routeParamEvent","postId","get","searchParam","formatQuestion","questionAnswerDetailPageEvent","next","hideQuestionTypeDropdown","hideSearchInput","getQuestionAnswerByParams","setDataForRichSnippet","setRichSnippetData","questionAnswerItem","setTitle","updateDescription","description","getUserPostByParams","question","answer","highlightAll","scrollToTheTopOfThePage","result","split","join","editQuestionAnswer","editedItem","console","log","deleteQuestionAnswer","item","AddEditUserPostComponent","EventEmitter","rank","editable","spellcheck","minHeight","maxHeight","placeholder","translate","sanitize","outline","defaultParagraphSeparator","customClasses","name","class","tag","toolbarHiddenButtons","setUserDetails","Object","keys","length","interviewQuestion","editMode","getQuestionTypes","ngAfterViewInit","changes","enableImageResizeInDiv","userDetails","questionTypes","closeAddEditPopup","popupEvent","emit","addQuestionMarkIfNotPresent","trimmedQuestion","trim","lastCharacter","charAt","saveInterviewQuestionAnswer","convertAnswerHtmlIntoString","tempDiv","replace","setDetailsBeforeSave","updateUserPost","addUserPost","data","setUserIdAndIsAdminBeforeSave","setIsApprovedFlag","isApproved","isApprovedFlagDefault","interviewQuestionObj","_id","userId","updateAnswer","onChange","event","onBlur","editor","textArea","nativeElement","innerHTML","addCodeBlock","AngularEditorComponent","AngularEditorToolbarComponent","ctx","ctx_r2","oxw","ctx_r10","ctx_r13","ctx_r16","ctx_r19","UserPostComponent","router","faClock","faExternalLinkSquareAlt","itemsPerPage","maxSize","openNewTabText","handleUserPostSubscription","handleRouteParamChangeSubscription","currentUserPostSubject","userPostItems","totalItems","isLoggedInUserPost","n","t","snapshot","userName","getMyPostsData","getUserPosts","pageNumberParamsValue","pageNumber","userPostServerSideObj","currentPage","getUserPostListByUserIdServerSide","resetUserPostByUserIdServerSideObj","fetchLoggedInUserPosts","getUserPostListServerSide","resetUserPostServerSideObj","fetchUserPosts","handleRouteUrlChangeSubscription","url","toggleShowHideAnswer","showAnswer","buttonText","userPostByUserIdServerSideObj","renderPage","checkAndSetPaginationByUserIfPresent","location","href","indexOf","navigate","editArticle","showPopup","deleteUserPost","id","confirmAction","openPopup","closePopup","getQuestionAnswerLink","formatAndReturnFullUrl","addQuestionMarkIfNotPresentCondition","approveArticle","article","confirmApproveAction","routes","path","component","UserPostRoutingModule","RouterModule","UserPostModule","CommonModule","FontAwesomeModule","FormsModule","AppRoutingModule","HttpClientModule","AngularEditorModule","NgxPaginationModule"],"sourceRoot":"webpack:///","sources":["./src/app/user-post/related-user-posts/related-user-posts.component.ts","./src/app/user-post/related-user-posts/related-user-posts.component.html","./src/app/user-post/user-post-detail/user-post-detail.component.html","./src/app/user-post/user-post-detail/user-post-detail.component.ts","./src/app/user-post/add-edit-user-post/add-edit-user-post.component.html","./src/app/user-post/add-edit-user-post/add-edit-user-post.component.ts","./src/app/user-post/user-post.component.html","./src/app/user-post/user-post.component.ts","./src/app/user-post/user-post-routing.module.ts","./src/app/user-post/user-post.module.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { QuestionAnswerService } from 'src/app/services/question-answer-service/question-answer.service';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport * as UIConstants from './../../utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-related-user-posts',\r\n  templateUrl: './related-user-posts.component.html',\r\n  styleUrls: ['./related-user-posts.component.scss']\r\n})\r\nexport class RelatedUserPostsComponent implements OnInit {\r\n  relatedQuestionAnswerList: any;\r\n  freshersInterviewQuestionsObj: any;\r\n  threeYearsExperienceInterviewQuestionsObj: any;\r\n  fiveYearsExperienceInterviewQuestionsObj: any;\r\n  topAngularInterviewQuestions: any;\r\n  topHTML5InterviewQuestions: any;\r\n  topCSS3InterviewQuestions: any;\r\n  topJavascriptInterviewQuestions: any;\r\n\r\n  constructor(\r\n    private loaderService: LoaderService,\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private route: ActivatedRoute,\r\n    private cd: ChangeDetectorRef,\r\n    private highlightService: HightlightService\r\n  ) { \r\n     this.setQuestionTitleByExperience();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.handleRouteChangeEvent();\r\n  }\r\n\r\n  setQuestionTitleByExperience() {\r\n    this.freshersInterviewQuestionsObj = UIConstants.topFresherFrontendInterviewQuestions;\r\n    this.threeYearsExperienceInterviewQuestionsObj = UIConstants.topThreeYearsExperienceFrontendInterviewQuestions;\r\n    this.fiveYearsExperienceInterviewQuestionsObj = UIConstants.topFiveYearsExperienceFrontendInterviewQuestions;\r\n    this.topAngularInterviewQuestions = UIConstants.topAngularInterviewQuestions;\r\n    this.topHTML5InterviewQuestions = UIConstants.topHTML5InterviewQuestions;\r\n    this.topCSS3InterviewQuestions = UIConstants.topCSS3InterviewQuestions;\r\n    this.topJavascriptInterviewQuestions = UIConstants.topJavascriptInterviewQuestions;\r\n  }\r\n\r\n  handleRouteChangeEvent() {\r\n    this.route.paramMap.subscribe(params => {\r\n       this.getRelatedQuestionAnswer();\r\n    });\r\n  }\r\n\r\n  getRelatedQuestionAnswer() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getRelatedQuestionAnswer().subscribe(response=>{\r\n       this.loaderService.display(false);\r\n       this.relatedQuestionAnswerList= response;\r\n     //  this.formatQuestionUrl();\r\n       this.cd.detectChanges();\r\n    })\r\n  }\r\n\r\n  // formatQuestionUrl() {\r\n  //   if (this.relatedQuestionAnswerList && this.relatedQuestionAnswerList.length > 0) {\r\n  //     for (const [index, item] of this.relatedQuestionAnswerList.entries()) {\r\n  //       this.relatedQuestionAnswerList[index]['questionUrl'] = this.questionAnswerService.formatQuestionUrl(item.question);\r\n  //       // Call addQuestionMarkIfNotPresentCondition to add a question mark if needed\r\n  //       this.relatedQuestionAnswerList[index]['question'] = this.questionAnswerService.addQuestionMarkIfNotPresentCondition(item.question);\r\n  //     }\r\n  //   }\r\n  // }\r\n}\r\n","<!-- related list {{relatedQuestionAnswerList | json}} -->\r\n\r\n<div class=\"panel-container related-questionanswer-container\">\r\n    <div class=\"panel-item\">\r\n        <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n            Related questions\r\n        </div>\r\n        <div class=\"panel-body open\">\r\n            <div class=\"panel-body-content\">\r\n                <div class=\"related-questions-container\">\r\n                    <!-- <article *ngFor=\"let item of relatedQuestionAnswerList;let i = index\"\r\n                        class=\"related-question-item\"> \r\n                        <a [routerLink] = \"['/interview-questions/', item.questionUrl]\" class=\"question-link\">\r\n                            {{item.question}}\r\n                        </a>\r\n                    </article> -->\r\n                    <article class=\"related-question-item\">\r\n                      <a [routerLink]= \"['/interview-questions/', freshersInterviewQuestionsObj.path]\" class=\"question-link\">\r\n                        {{freshersInterviewQuestionsObj.title}}\r\n                      </a>\r\n                    </article>\r\n                    <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', threeYearsExperienceInterviewQuestionsObj.path]\" class=\"question-link\">\r\n                            {{threeYearsExperienceInterviewQuestionsObj.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', fiveYearsExperienceInterviewQuestionsObj.path]\" class=\"question-link\">\r\n                            {{fiveYearsExperienceInterviewQuestionsObj.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topAngularInterviewQuestions.path, {data:topAngularInterviewQuestions}]\" class=\"question-link\">\r\n                            {{topAngularInterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topHTML5InterviewQuestions.path, {data:topHTML5InterviewQuestions}]\" class=\"question-link\">\r\n                            {{topHTML5InterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topCSS3InterviewQuestions.path, {data:topCSS3InterviewQuestions}]\" class=\"question-link\">\r\n                            {{topCSS3InterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topJavascriptInterviewQuestions.path, {data:topJavascriptInterviewQuestions}]\" class=\"question-link\">\r\n                            {{topJavascriptInterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"offset-md-1 col-md-8 col-12 main-questions-container\">\r\n            <div class=\"panel-container question-answer-detailcontainer\"\r\n                *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n                <div class=\"panel-item\">\r\n                    <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-10 col-md-9\">\r\n                                <header>\r\n                                    <h1 class=\"question-text\" [innerHtml]=\"questionAnswerItem.question\"></h1>\r\n                                </header>\r\n                            </div>\r\n                            <div class=\"col-xl-2 col-md-3 action-btns\">\r\n                                <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor edit-icon\" [icon]=\"faEdit\"\r\n                                    (click)=\"editQuestionAnswer(questionAnswerItem)\">\r\n                                </fa-icon>\r\n                                <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor delete-icon\" [icon]=\"faTrash\"\r\n                                    (click)=\"deleteQuestionAnswer(questionAnswerItem._id)\">\r\n                                </fa-icon>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"panel-body\" [ngClass]=\"{'open': true}\">\r\n                        <div class=\"panel-body-content\" [innerHtml]=\"questionAnswerItem.answer\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"affiliate-ads-container\">\r\n                    <!-- <app-affiliate-ads></app-affiliate-ads> -->\r\n                </div>\r\n            </div>\r\n            <!-- <app-other-interview-questions *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n            </app-other-interview-questions> -->\r\n            <div class=\"question-error-container\" *ngIf=\"questionAnswerItem && questionAnswerItem.invalidQuestion\">\r\n                <div class=\"error-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <fa-icon class=\"hand-cursor error-triangle-icon\" [icon]=\"faExclamationTriangle\">\r\n                            </fa-icon>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <div class=\"error-header\">\r\n                                <span>Page not found</span>\r\n                            </div>\r\n                            <div class=\"error-inner-content\">\r\n                                <span>We're sorry, we couldn't find the page you requested.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-md-3 col-12 detail-relatedquestion-container\">\r\n            <div class=\"related-questionanswer-template\"\r\n                *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n                <app-related-user-posts></app-related-user-posts>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"offset-md-1 col-md-8 col-12 other-important-questionscontainer\">\r\n            <app-other-interview-questions></app-other-interview-questions>\r\n        </div>\r\n    </div>\r\n</div> -->","import { Component, OnInit, Renderer2 } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { faTrash,faEdit, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { QuestionAnswerService } from 'src/app/services/question-answer-service/question-answer.service';\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport { RichSnippetService } from 'src/app/services/rich-snippet-service/rich-snippet.service';\r\n\r\n@Component({\r\n  selector: 'app-user-post-detail',\r\n  templateUrl: './user-post-detail.component.html',\r\n  styleUrls: ['./user-post-detail.component.scss']\r\n})\r\nexport class UserPostDetailComponent implements OnInit {\r\n\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n  faExclamationTriangle = faExclamationTriangle;\r\n  searchParam: string;\r\n  questionAnswerItem: any;\r\n  adminMode = false;\r\n  postId: any;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private loaderService: LoaderService,\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private title: Title,\r\n    private highlightService: HightlightService,\r\n    private richSnippetService: RichSnippetService,\r\n    private renderer: Renderer2, \r\n  ) { \r\n    this.adminMode = this.questionAnswerService.isAdmin;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n     this.routeParamEvent();\r\n  }\r\n\r\n  routeParamEvent() {\r\n    this.route.paramMap.subscribe(params => {\r\n      if(params) {\r\n        this.postId = params.get('postId');\r\n        this.searchParam = this.formatQuestion(params);\r\n        this.questionAnswerService.questionAnswerDetailPageEvent.next({\r\n          hideQuestionTypeDropdown: true,\r\n          hideSearchInput: true\r\n        });\r\n        this.getQuestionAnswerByParams();\r\n      }\r\n    });\r\n  }\r\n\r\n  setDataForRichSnippet() {\r\n    this.richSnippetService.setRichSnippetData([this.questionAnswerItem], this.renderer);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.questionAnswerService.setTitle(title);\r\n    this.setDataForRichSnippet();\r\n  }\r\n\r\n  updateDescription(description) {\r\n    this.questionAnswerService.updateDescription(description)\r\n  }\r\n\r\n  getQuestionAnswerByParams() {\r\n    this.loaderService.display(true);\r\n    const queryobj = {\r\n      searchParam: this.searchParam,\r\n      postId: this.postId\r\n    }\r\n    this.questionAnswerService.getUserPostByParams(queryobj).subscribe(response=>{\r\n      this.loaderService.display(false);\r\n      this.questionAnswerItem = response;\r\n      this.setTitle(this.questionAnswerItem.question)\r\n      this.updateDescription(this.questionAnswerItem.answer);\r\n      this.highlightService.highlightAll();\r\n      this.questionAnswerService.scrollToTheTopOfThePage();\r\n    })\r\n  }\r\n\r\n  formatQuestion(params) {\r\n    let result = params.get('question').split('-');\r\n    if(result) {\r\n      return result.join(' ');\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  editQuestionAnswer(editedItem) {\r\n    console.log('editeditem', editedItem);\r\n  }\r\n\r\n  deleteQuestionAnswer(item) {\r\n    console.log('deleteditem', item);\r\n  }\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-content\">\r\n      <div>\r\n        <fieldset>\r\n          <legend>Add Post:</legend>\r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-3 col-form-label\">Title</label>\r\n            <div class=\"col-9\">\r\n              <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.question\"\r\n                placeholder=\"Enter Post Title\" type=\"text\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label for=\"answer\" class=\"col-3 col-form-label\">Details</label>\r\n            <div class=\"col-9\">\r\n              <!-- angular editor -->\r\n              <div>  \r\n                <button id=\"addCodeBlockBtn\" class=\"btn btn-primary\" title=\"Add code block\" (click)=\"addCodeBlock()\">Add code block</button>           \r\n                <angular-editor #editor id=\"editor1\" [(ngModel)]=\"interviewQuestion.answer\" [config]=\"config1\" (ngModelChange)=\"onChange($event)\" (blur)=\"onBlur($event)\">\r\n                </angular-editor>\r\n              </div> \r\n              <!-- angular editor -->\r\n              <textarea *ngIf=\"userDetails?.isAdmin\" id=\"answer\" [(ngModel)]=\"interviewQuestion.answer\" placeholder=\"Enter Answer\" name=\"answer\"\r\n                cols=\"40\" rows=\"5\" class=\"form-control textarea admin-text-area\"></textarea>\r\n            </div>\r\n          </div>\r\n          <div class=\"form-group row\">\r\n            <label for=\"type\" class=\"col-3 col-form-label\">Type</label>\r\n            <div class=\"col-9\">\r\n              <select id=\"type\" name=\"type\" class=\"custom-select\" [(ngModel)]=\"interviewQuestion.questionType\">\r\n                <option *ngFor=\"let item of questionTypes\" [value]=\"item.questionType\">{{item.questionType}}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <!-- <div class=\"form-group row\">\r\n            <label for=\"text\" class=\"col-3 col-form-label\">Email</label>\r\n            <div class=\"col-9\">\r\n              <input id=\"text\" [(ngModel)]=\"interviewQuestion.rank\" name=\"text\" placeholder=\"Enter your email\" type=\"text\"\r\n                class=\"form-control\">\r\n            </div>\r\n          </div> -->\r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-3 col-md-3 col-4\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\"\r\n                (click)=\"saveInterviewQuestionAnswer()\">Submit</button>\r\n            </div>\r\n            <div class=\"col-md-3 col-4\">\r\n              <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\"\r\n                class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n            </div>\r\n          </div>\r\n        </fieldset>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  ","import { ChangeDetectorRef, Component, EventEmitter, Input, OnInit, Output, SimpleChange, ViewChild } from '@angular/core';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport { QuestionAnswerService } from \"./../../services/question-answer-service/question-answer.service\";\r\nimport { LoaderService } from './../../services/loader-service/loader.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { AngularEditorComponent, AngularEditorConfig, AngularEditorToolbarComponent } from '@kolkov/angular-editor';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-user-post',\r\n  templateUrl: './add-edit-user-post.component.html',\r\n  styleUrls: ['./add-edit-user-post.component.scss']\r\n})\r\nexport class AddEditUserPostComponent implements OnInit {\r\n  @Output() closePopup: EventEmitter<void> = new EventEmitter<void>();\r\n  @Output() questionAnswerSaved = new EventEmitter<any>();\r\n\r\n  @ViewChild(AngularEditorComponent) editor: AngularEditorComponent; // ViewChild reference to the AngularEditorComponent\r\n  editorContent: string = ''; // Initialize with an empty string or appropriate content\r\n  @ViewChild(AngularEditorToolbarComponent) customButtons: AngularEditorComponent;\r\n  questionTypes: any;\r\n  interviewQuestion: any = { question: '', answer: '', rank: '' };\r\n  @Input() editedItem;\r\n  editMode: Boolean = true;\r\n  @Output() popupEvent = new EventEmitter();\r\n  tempDiv = 'div';\r\n  isApprovedFlagDefault = false;\r\n  angularEditorLogo =\"<button>Code button</button\";\r\n  userDetails: any;\r\n\r\n  tempSattu: any;\r\n  constructor(\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private loaderService: LoaderService,\r\n    private cd: ChangeDetectorRef,\r\n    private highlightService: HightlightService,\r\n  ) {\r\n    this.setUserDetails();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (this.editedItem && Object.keys(this.editedItem).length > 0) {\r\n      this.interviewQuestion = { ...this.editedItem };\r\n      this.editMode = true;\r\n    } else {\r\n      this.editMode = false;\r\n    }\r\n    this.getQuestionTypes();\r\n    this.highlightService.highlightAll();\r\n  }\r\n\r\n  ngAfterViewInit(changes: SimpleChange) {\r\n    this.questionAnswerService.enableImageResizeInDiv('editor1')\r\n  }\r\n\r\n  setUserDetails() {\r\n    this.userDetails = this.questionAnswerService.userDetails;\r\n  }\r\n\r\n  getQuestionTypes() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(response => {\r\n      this.questionTypes = response;\r\n      this.loaderService.display(false);\r\n    });\r\n  }\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionAnswerPopup');\r\n  }\r\n\r\n  addQuestionMarkIfNotPresent(question: string) {\r\n    const trimmedQuestion = question.trim();\r\n    const lastCharacter = trimmedQuestion.charAt(trimmedQuestion.length - 1);\r\n\r\n    if (lastCharacter !== '?' && lastCharacter !== '.' && lastCharacter !== ':') {\r\n      return trimmedQuestion + ' ?';\r\n    }\r\n\r\n    return trimmedQuestion;\r\n  }\r\n\r\n  saveInterviewQuestionAnswer() {\r\n    // Convert answer HTML into formatted string\r\n    this.interviewQuestion.answer = this.questionAnswerService.convertAnswerHtmlIntoString(this.interviewQuestion.answer, this.tempDiv);\r\n    // Wrap center-aligned <img> elements in a <div> with the 'img-center' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"display: block; margin: 0 auto;\">/g, '<div class=\"img-center\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n\r\n    // Wrap right-aligned <img> elements in a <div> with the 'img-right' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"float: right;\">/g, '<div class=\"img-right\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n\r\n    // Wrap right-aligned <img> elements in a <div> with the 'img-left' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"float: left;\">/g, '<div class=\"img-left\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n    // Wrap center-aligned content in a <div> with the 'text-center' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: center;\">/g, '<div class=\"text-center\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n\r\n    // Wrap right-aligned content in a <div> with the 'text-right' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: right;\">/g, '<div class=\"text-right\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n    // Wrap right-aligned content in a <div> with the 'text-left' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: left;\">/g, '<div class=\"text-left\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n    this.setDetailsBeforeSave(this.interviewQuestion);\r\n    if (this.editMode) {\r\n      this.questionAnswerService.updateUserPost(this.interviewQuestion);\r\n    } else {\r\n      this.questionAnswerService.addUserPost(this.interviewQuestion);\r\n    }\r\n\r\n    this.closeAddEditPopup();\r\n    console.log('Interview Question after save:', this.interviewQuestion);\r\n  }\r\n\r\n  setDetailsBeforeSave(data) {\r\n    this.setUserIdAndIsAdminBeforeSave(data);\r\n    this.setIsApprovedFlag(data);\r\n  }\r\n\r\n  setIsApprovedFlag(data) {\r\n    if(!data.isApproved) {\r\n      data.isApproved = this.isApprovedFlagDefault;\r\n    }\r\n  }\r\n\r\n  setUserIdAndIsAdminBeforeSave(interviewQuestionObj) {\r\n    if (this.questionAnswerService.userDetails && this.questionAnswerService.userDetails._id) {\r\n      interviewQuestionObj.userId = this.questionAnswerService.userDetails._id;\r\n      interviewQuestionObj.isAdmin = this.questionAnswerService.userDetails.isAdmin;\r\n    }\r\n  }\r\n\r\n  updateAnswer() {\r\n    this.interviewQuestion.answer = ''; // Assigning a value to the answer property\r\n  }\r\n\r\n  config1: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    minHeight: '5rem',\r\n    maxHeight: 'auto',\r\n    placeholder: 'Enter Post Details here...',\r\n    translate: 'no',\r\n    sanitize: false,\r\n    // toolbarPosition: 'top',\r\n    outline: true,\r\n    // defaultFontName: 'Comic Sans MS',\r\n    // defaultFontSize: '5',\r\n    // showToolbar: false,\r\n    defaultParagraphSeparator: 'p',\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'text-center',\r\n        class: 'text-center',\r\n      },\r\n      {\r\n        name: 'text-right',\r\n        class: 'text-right',\r\n      },\r\n      {\r\n        name: 'img-center',\r\n        class: 'img-center',\r\n      },\r\n      {\r\n        name: 'img-right',\r\n        class: 'img-right',\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    toolbarHiddenButtons: [\r\n      // ['bold', 'italic'],\r\n      // ['fontSize']\r\n    ]\r\n  };\r\n\r\n  onChange(event) {\r\n    this.interviewQuestion.answer = event; // Manually update the answer\r\n  }\r\n\r\n  onBlur(event) {\r\n    console.log('blur ' + event);\r\n    this.interviewQuestion.answer = this.editor.textArea.nativeElement.innerHTML;\r\n  }\r\n\r\n  addCodeBlock() {\r\n    this.questionAnswerService.addCodeBlock();\r\n  }\r\n}\r\n","<!-- <app-my-post></app-my-post> -->\r\n<div class=\"row main-questions-container\">\r\n  <div class=\"col-12 panel-container \">\r\n    <div class=\"offset-md-1 col-md-8 col-12 main-questions-container add-articlebtn-container\">\r\n      <b>\r\n        <h1 class=\"page-heading text-center\">{{headingTitle}}</h1>\r\n      </b>\r\n      <button class=\"btn add-questions-btn hand-cursor\" (click)=\"openPopup()\">+ Add Post</button>\r\n      <app-add-edit-user-post [editedItem]=\"editedItem\" (popupEvent)=\"closePopup($event)\"\r\n        *ngIf=\"showPopup\"></app-add-edit-user-post>\r\n        <div *ngFor=\"let item of userPostItems | paginate : {\r\n          itemsPerPage: itemsPerPage,\r\n          currentPage: currentPage,\r\n          totalItems: totalItems\r\n        };let i=index\">\r\n          <!-- Display each saved item here using item.question and item.answer -->\r\n          <div class=\"question-answer-detailcontainer\">\r\n            <div class=\"panel-item\">\r\n              <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-10 col-md-9\">\r\n                    <header>\r\n                      {{i+1 + (currentPage-1)*itemsPerPage}}.\r\n                      <h1 class=\"question-text\" [innerHtml]=\"addQuestionMarkIfNotPresent(item.question)\"></h1>\r\n                    </header>\r\n                  </div>\r\n                  <!-- Edit button -->\r\n                  <div class=\"col-xl-2 col-md-3 action-btns text-right\">\r\n                    <div class=\"col-md-7 faIcon\">\r\n                      <div *ngIf=\"userDetails?.isAdmin || isLoggedInUserPost\" class=\"col-md-6\">\r\n                        <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faEdit\" (click)=\"editArticle(item)\"></fa-icon>\r\n                      </div>\r\n                      <div *ngIf=\"userDetails?.isAdmin\" class=\"col-md-6\">\r\n                        <fa-icon class=\"hand-cursor trash-icon\" [icon]=\"faTrash\"\r\n                          (click)=\"deleteUserPost(item._id)\"></fa-icon>\r\n                      </div>\r\n                    </div>\r\n                    <button class=\"showHideAnswer hand-cursor btn-show-hide\"\r\n                      (click)=\"toggleShowHideAnswer(item)\">{{item.buttonText?item.buttonText:\"Show\"}}</button>\r\n                  </div>\r\n                </div>\r\n                <div class=\"row\">\r\n                  <div class=\"col-md-12\">\r\n                    <button class=\"hand-cursor btn btn-primary\" *ngIf=\"userDetails?.isAdmin && !item.isApproved\"\r\n                    (click)=\"approveArticle(item)\">Approve</button>\r\n                    </div>\r\n                    <div class=\"order-progress\" *ngIf=\"!userDetails?.isAdmin && !item.isApproved\">\r\n                      <fa-icon class=\"hand-cursor fa-icon clock-icon\" [icon]=\"faClock\">\r\n                      </fa-icon>\r\n                      Pending confirmation\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"panel-body\" [ngClass]=\"{'open': item.showAnswer ==true}\">\r\n                <div class=\"panel-body\" [ngClass]=\"{'open': true}\">\r\n                  <div class=\"panel-body-content\">\r\n                    <div [innerHtml]=\"item.answer\">\r\n                    </div>\r\n                    <div class=\"open-linkseperate-container\">\r\n                      <a [title]=\"openNewTabText\" target=\"_blank\"\r\n                        [routerLink]=\"['/user-posts/'+ item._id + '/', getQuestionAnswerLink(item.question)]\"\r\n                        class=\"question-link\">\r\n                        <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faExternalLinkSquareAlt\"></fa-icon>\r\n                      </a>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <!-- Other HTML elements for saved items here -->\r\n        </div> \r\n    </div>\r\n    <!-- <div class=\"offset-md-1 col-md-8 col-12\">\r\n      \r\n    </div> -->\r\n    <div class=\"col-md-3 col-12 relation-questions-container\">\r\n      <div class=\"related-questionanswer-template\">\r\n        <app-related-user-posts></app-related-user-posts>\r\n      </div>\r\n      <!-- <div class=\"related-questionanswer-template\">\r\n        <app-other-interview-questions></app-other-interview-questions>\r\n      </div>    -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<div class=\" offset-md-1 col-md-8 col-12 pagination-container d-flex justify-content-center\">\r\n  <pagination-controls (pageChange)=\"renderPage($event)\" [maxSize]=\"maxSize\"></pagination-controls>\r\n</div>","import { Component, Input, OnChanges, OnDestroy, OnInit, SimpleChanges } from '@angular/core';\r\nimport { QuestionAnswerService } from '../services/question-answer-service/question-answer.service';\r\nimport { LoaderService } from '../services/loader-service/loader.service';\r\nimport { Observable, Subscription } from 'rxjs'; // Import Observable\r\nimport { faTrash, faEdit, faClock, faTimes, faExternalLinkSquareAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { PaginationInstance } from 'ngx-pagination';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-user-post',\r\n  templateUrl: './user-post.component.html',\r\n  styleUrls: ['./user-post.component.scss']\r\n})\r\nexport class UserPostComponent implements OnInit {\r\n  @Input() isMyPost = false;\r\n  headingTitle = 'Top Front End Posts';\r\n  showPopup: boolean = false;\r\n  userPostItems: any[] = [];\r\n  editedItem: any;\r\n  lastFilledPopup: any;\r\n  editMode: boolean = false;\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n  faClock = faClock;\r\n  faExternalLinkSquareAlt = faExternalLinkSquareAlt;\r\n  maxSize: number;\r\n  totalItems = 0;\r\n  currentPage = 1;\r\n  itemsPerPage;\r\n  pageNumberParamsValue: string;\r\n  routeParamsSubscription: Subscription;\r\n  userDetails: any;\r\n  confirmApproveText = \"Are you sure you want to approve ?\";\r\n  isLoggedInUserPost: any;\r\n  openNewTabText: string;\r\n  constructor(\r\n    private router: Router,\r\n    private route: ActivatedRoute,\r\n    private loaderService: LoaderService,\r\n    private questionAnswerService: QuestionAnswerService,\r\n  ) {\r\n    this.itemsPerPage = this.questionAnswerService.itemsPerPage;\r\n    this.maxSize = this.questionAnswerService.maxSize;\r\n    this.userDetails = this.questionAnswerService.userDetails;\r\n    this.openNewTabText = this.questionAnswerService.openNewTabText;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.handleUserPostSubscription();\r\n    this.handleRouteParamChangeSubscription();\r\n    // this.handleRouteUrlChangeSubscription();\r\n  }\r\n\r\n  handleUserPostSubscription() {\r\n    this.questionAnswerService.currentUserPostSubject.subscribe(response => {\r\n      if (response && response['result']) {\r\n        this.userPostItems = response['result'];\r\n        this.totalItems = response.totalItems;\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRouteParamChangeSubscription() {\r\n    this.isLoggedInUserPost = this.route.snapshot?.params?.userName;\r\n    if(this.isLoggedInUserPost) {\r\n      this.getMyPostsData();\r\n    }\r\n    else {\r\n      this.getUserPosts();\r\n    }\r\n  }\r\n\r\n  getMyPostsData() {\r\n    this.route.params.subscribe(params =>{\r\n      this.pageNumberParamsValue = params['pageNumber'];\r\n      if (this.pageNumberParamsValue) {\r\n        this.questionAnswerService.userPostServerSideObj.currentPage = this.pageNumberParamsValue ? this.pageNumberParamsValue : this.currentPage;\r\n        this.currentPage = this.questionAnswerService.userPostServerSideObj.currentPage;\r\n        this.questionAnswerService.getUserPostListByUserIdServerSide(this.questionAnswerService.userPostServerSideObj, this.userDetails._id);\r\n      }\r\n      else {\r\n        this.questionAnswerService.resetUserPostByUserIdServerSideObj();\r\n        this.fetchLoggedInUserPosts();\r\n      }\r\n    });\r\n  }\r\n\r\n  getUserPosts() {\r\n    this.route.params.subscribe(params =>{\r\n      this.pageNumberParamsValue = params['pageNumber'];\r\n      if (this.pageNumberParamsValue) {\r\n        this.questionAnswerService.userPostServerSideObj.currentPage = this.pageNumberParamsValue ? this.pageNumberParamsValue : this.currentPage;\r\n        this.currentPage = this.questionAnswerService.userPostServerSideObj.currentPage;\r\n        this.questionAnswerService.getUserPostListServerSide(this.questionAnswerService.userPostServerSideObj);\r\n      }\r\n      else {\r\n        this.questionAnswerService.resetUserPostServerSideObj();\r\n        this.fetchUserPosts();\r\n      }\r\n    });\r\n  }\r\n\r\n  handleRouteUrlChangeSubscription() {\r\n    this.route.url.subscribe(params =>{\r\n        this.pageNumberParamsValue = params['pageNumber'];\r\n        if (this.pageNumberParamsValue) {\r\n          this.questionAnswerService.userPostServerSideObj.currentPage = this.pageNumberParamsValue ? this.pageNumberParamsValue : this.currentPage;\r\n          this.currentPage = this.questionAnswerService.userPostServerSideObj.currentPage;\r\n          this.questionAnswerService.getUserPostListServerSide(this.questionAnswerService.userPostServerSideObj);\r\n        }\r\n        else {\r\n          this.fetchUserPosts();\r\n        }\r\n      });\r\n  }\r\n\r\n  toggleShowHideAnswer(item) {\r\n    if (!item.showAnswer) {\r\n      item.showAnswer = true;\r\n      item.buttonText = \"Hide\"\r\n    }\r\n    else {\r\n      item.showAnswer = false;\r\n      item.buttonText = \"Show\"\r\n    }\r\n  }\r\n   fetchUserPosts() {\r\n    this.questionAnswerService.getUserPostListServerSide(this.questionAnswerService.userPostServerSideObj);\r\n  }\r\n\r\n  fetchLoggedInUserPosts() {\r\n    this.questionAnswerService.getUserPostListByUserIdServerSide(this.questionAnswerService.userPostByUserIdServerSideObj, this.userDetails._id);\r\n  }\r\n\r\n  renderPage(event: number) {\r\n    this.currentPage = event;\r\n    this.checkAndSetPaginationByUserIfPresent();\r\n  }\r\n\r\n  checkAndSetPaginationByUserIfPresent() {\r\n    let url = window.location.href;\r\n    if(url.indexOf(this.userDetails.userName) > -1) {\r\n      this.questionAnswerService.userPostByUserIdServerSideObj.currentPage = this.currentPage;\r\n      this.router.navigate([\"user-posts/author/\" + this.userDetails.userName + \"/page\", this.currentPage]);\r\n      this.fetchLoggedInUserPosts();\r\n    }\r\n    else {\r\n      this.questionAnswerService.userPostServerSideObj.currentPage = this.currentPage;\r\n      this.router.navigate([\"user-posts/page\", this.currentPage]);\r\n      this.fetchUserPosts();\r\n    }\r\n  }\r\n\r\n  editArticle(data) {\r\n    this.editedItem = data;\r\n    this.showPopup = true;\r\n  }\r\n  deleteUserPost(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n     this.questionAnswerService.deleteUserPost(id);\r\n    }\r\n  }\r\n  openPopup() {\r\n    this.showPopup = true;\r\n    this.editedItem = {}\r\n  }\r\n\r\n  closePopup(event) {\r\n    if (event == \"closeQuestionAnswerPopup\") {\r\n      this.showPopup = false;\r\n    }\r\n    else {\r\n      this.showPopup = false;\r\n    }\r\n  }\r\n\r\n  getQuestionAnswerLink(question) {\r\n    let result = this.questionAnswerService.formatAndReturnFullUrl(question);\r\n    return result;\r\n  }\r\n\r\n  addQuestionMarkIfNotPresent(question: string): string {\r\n    return this.questionAnswerService.addQuestionMarkIfNotPresentCondition(question);\r\n  }\r\n\r\n  approveArticle(article) {\r\n    let result = this.questionAnswerService.confirmApproveAction();\r\n    if (result) {\r\n      article.isApproved = true;\r\n      this.questionAnswerService.updateUserPost(article);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { UserPostDetailComponent } from './user-post-detail/user-post-detail.component';\r\nimport { UserPostComponent } from './user-post.component';\r\n\r\nconst routes: Routes = [\r\n   {\r\n      path: 'page/:pageNumber',\r\n      component: UserPostComponent,\r\n    },\r\n    {\r\n      path: 'page/:pageNumber/:searchTerm/:questionType',\r\n      component: UserPostComponent,\r\n    },\r\n    {\r\n      path: 'author/:userName',\r\n      component: UserPostComponent,\r\n    },\r\n    {\r\n      path: 'author/:userName/page/:pageNumber',\r\n      component: UserPostComponent,\r\n    },\r\n    {\r\n       path: ':postId/:question',\r\n       component: UserPostDetailComponent,\r\n    },\r\n    {\r\n      path: '',\r\n      component: UserPostComponent,\r\n    }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserPostRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserPostRoutingModule } from './user-post-routing.module';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AppRoutingModule } from '../app-routing.module';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AngularEditorModule, AngularEditorService } from '@kolkov/angular-editor';\r\nimport { UserBlogPopupComponent } from '../user-blog-popup/user-blog-popup.component';\r\nimport { UserPostComponent } from './user-post.component';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { AddEditUserPostComponent } from './add-edit-user-post/add-edit-user-post.component';\r\nimport { UserPostDetailComponent } from './user-post-detail/user-post-detail.component';\r\nimport { OtherUserPostsComponent } from './other-user-posts/other-user-posts.component';\r\nimport { RelatedUserPostsComponent } from './related-user-posts/related-user-posts.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    UserPostComponent, \r\n    UserBlogPopupComponent, AddEditUserPostComponent, UserPostDetailComponent, OtherUserPostsComponent, RelatedUserPostsComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    UserPostRoutingModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule, \r\n    AngularEditorModule,\r\n    NgxPaginationModule\r\n  ]\r\n})\r\nexport class UserPostModule { }\r\n"]}