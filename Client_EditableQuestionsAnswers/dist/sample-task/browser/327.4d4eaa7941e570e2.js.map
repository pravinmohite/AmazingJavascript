{"version":3,"file":"327.4d4eaa7941e570e2.js","mappings":"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","names":["OtherInterviewQuestionsComponent","constructor","loaderService","questionAnswerService","route","cd","this","setQuestionTitleByExperience","ngOnInit","topGitInterviewQuestions","UIConstants","topTypescriptInterviewQuestions","topJavascriptCodingInterviewQuestions","e","selectors","i0","AddEditInterviewQuestionsComponent","highlightService","question","answer","rank","EventEmitter","editable","spellcheck","minHeight","maxHeight","placeholder","translate","sanitize","outline","defaultParagraphSeparator","customClasses","name","class","tag","toolbarHiddenButtons","Object","keys","editedItem","length","editMode","interviewQuestion","JSON","parse","stringify","getQuestionTypes","detectChanges","console","log","display","subscribe","response","questionTypes","closeAddEditPopup","popupEvent","emit","addQuestionMarkIfNotPresent","trimmedQuestion","trim","lastCharacter","charAt","convertAnswerHtmlIntoString","tempElement","document","createElement","tempDiv","innerHTML","headings","querySelectorAll","forEach","heading","textAlign","style","outerHTML","S","replace","formattedAnswer","tempSattu","parser","DOMParser","parseFromString","value","fontTag","querySelector","attributes","color","saveInterviewQuestionAnswer","updateQuestionAnswer","addQuestionAnswer","updateAnswer","onChange","event","checkForImage","onBlur","editor","textArea","nativeElement","editorElement","image","classList","add","makeResizable","addEventListener","preventDefault","initialWidth","clientWidth","initialHeight","clientHeight","startX","clientX","startY","clientY","resize","height","width","stopResize","window","removeEventListener","AngularEditorComponent","ctx","ctx_r2","oxw","ctx_r4","AddEditQuestionTypesComponent","questionType","faTrash","faEdit","data","saveQuestionType","updateQuestionType","addQuestionType","deleteQuestionType","id","result","confirmAction","editQuestionType","item","ctx_r8","ctx_r10","ctx_r12","ctx_r18","ctx_r21","ctx_r24","ctx_r26","ctx_r28","QuestionAnswerPanelComponent","router","richSnippetService","renderer","elem","faTimes","faExternalLinkSquareAlt","itemsPerPage","maxSize","openNewTabText","handleRouteDataSubscription","setHeadingTitleIfEmpty","headingTitle","defaultTitle","articleFeaturedImgPath","defaultArticleImg","ngOnChanges","changes","questionAnswerList","currentValue","currentPage","serverSideObj","highlightAll","setDataForRichSnippet","ngAfterViewInit","setRichSnippetData","setHeadingTitle","title","setTitle","toggleShowHideAnswer","questionAnswerItem","showAnswer","buttonText","openAddQuestionAnswerPopup","showQuestionAnswerModal","openAddQuestionTypePopup","showQuestionTypeModal","closeModal","deleteQuestionAnswer","editQuestionAnswer","clearSearch","showSearchTerm","navigate","renderPage","getQuestionAnswerLink","formatAndReturnFullUrl","addQuestionMarkIfNotPresentCondition","RelatedInterviewQuestionsComponent","handleRouteChangeEvent","freshersInterviewQuestionsObj","threeYearsExperienceInterviewQuestionsObj","fiveYearsExperienceInterviewQuestionsObj","topAngularInterviewQuestions","topHTML5InterviewQuestions","topCSS3InterviewQuestions","topJavascriptInterviewQuestions","paramMap","params","getRelatedQuestionAnswer","relatedQuestionAnswerList","formatQuestionUrl","index","entries","questionUrl","AngularInterviewQuestionsComponent","handleRouteParamChangeSubscription","handleGetQuestionAnswerListSubscription","getQuestionAnswerServerSideIfNoParams","pageNumberParamsValue","experienceFromUrl","questionTypeFromUrl","getQuestionAnswerListServerSide","currentData","totalItems","hightLightAgain","scrollToTheTopOfThePage","checkRouteParamsDataAndGetQuestionAnswer","resetServerSideObj","experience","questionAnswerDetailPageEvent","next","hideQuestionTypeDropdown","hideSearchInput","type","imgPath","get","o","ctx_r6","QuestionAnswerDetailComponent","faExclamationTriangle","adminMode","isAdmin","routeParamEvent","searchParam","formatQuestion","getQuestionAnswerByParams","updateDescription","description","split","join","routes","path","component","InterviewQuestionsRoutingModule","CommonModule","RouterModule","InterviewQuestionsModule","AngularEditorModule","FontAwesomeModule","FormsModule","NgxPaginationModule","RichSnippetService","platformId","_doc","setRichSnippetBaseFormat","getWindow","defaultView","richSnippetData","mainEntity","acceptedAnswer","text","setJsonLd","renderer2","removeExistingJsonLdIfPresent","script","appendChild","body","element","jsonLdScriptTagQuery","remove","push","d","PLATFORM_ID","DOCUMENT","factory"],"sourceRoot":"webpack:///","sources":["./src/app/interview-questions/angular-interview-questions/other-interview-questions/other-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/other-interview-questions/other-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/add-edit-question-types/add-edit-question-types.component.html","./src/app/interview-questions/angular-interview-questions/add-edit-question-types/add-edit-question-types.component.ts","./src/app/interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component.html","./src/app/interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component.ts","./src/app/interview-questions/angular-interview-questions/related-interview-questions/related-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/related-interview-questions/related-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/angular-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/angular-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/question-answer-detail/question-answer-detail.component.html","./src/app/interview-questions/angular-interview-questions/question-answer-detail/question-answer-detail.component.ts","./src/app/utils/custom-routes/custom-angular-routes/customAngularRoutes.ts","./src/app/interview-questions/interview-questions-routing.module.ts","./src/app/utils/custom-routes/custom-javascript-routes/customJavascriptRoutes.ts","./src/app/utils/custom-routes/custom-css-routes/customCSSRoutes.ts","./src/app/utils/custom-routes/custom-html-routes/customHtmlRoutes.ts","./src/app/utils/custom-routes/custom-git-routes/customGitRoutes.ts","./src/app/utils/custom-routes/custom-typescript-routes/customTypescriptRoutes.ts","./src/app/utils/custom-routes/custom-coding-question-routes/customCodingQuestionRoutes.ts","./src/app/utils/custom-routes/customRoutes.ts","./src/app/interview-questions/interview-questions.module.ts","./src/app/services/rich-snippet-service/rich-snippet.service.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { QuestionAnswerService } from 'src/app/services/question-answer-service/question-answer.service';\r\nimport * as UIConstants from './../../../utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-other-interview-questions',\r\n  templateUrl: './other-interview-questions.component.html',\r\n  styleUrls: ['./other-interview-questions.component.scss']\r\n})\r\nexport class OtherInterviewQuestionsComponent implements OnInit {\r\n  relatedQuestionAnswerList: any;\r\n  topGitInterviewQuestions: any;\r\n  topTypescriptInterviewQuestions: any;\r\n  topJavascriptCodingInterviewQuestions: any;\r\n\r\n  constructor(\r\n    private loaderService: LoaderService,\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private route: ActivatedRoute,\r\n    private cd: ChangeDetectorRef\r\n  ) { \r\n     this.setQuestionTitleByExperience();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    //this.handleRouteChangeEvent();\r\n  }\r\n\r\n  setQuestionTitleByExperience() {\r\n    this.topGitInterviewQuestions = UIConstants.topGitInterviewQuestions;\r\n    this.topTypescriptInterviewQuestions = UIConstants.topTypescriptInterviewQuestions;\r\n    this.topJavascriptCodingInterviewQuestions = UIConstants.topJavascriptCodingInterviewQuestions;\r\n  }\r\n\r\n  // handleRouteChangeEvent() {\r\n  //   this.route.paramMap.subscribe(params => {\r\n  //      this.getRelatedQuestionAnswer();\r\n  //   });\r\n  // }\r\n\r\n  // getRelatedQuestionAnswer() {\r\n  //   this.loaderService.display(true);\r\n  //   this.questionAnswerService.getRelatedQuestionAnswer().subscribe(response=>{\r\n  //      this.loaderService.display(false);\r\n  //      this.relatedQuestionAnswerList= response;\r\n  //      this.formatQuestionUrl();\r\n  //      this.cd.detectChanges();\r\n  //   })\r\n  // }\r\n\r\n  // formatQuestionUrl() {\r\n  //   if(this.relatedQuestionAnswerList && this.relatedQuestionAnswerList.length >0) {\r\n  //     for(const [index, item] of this.relatedQuestionAnswerList.entries()) {\r\n  //       this.relatedQuestionAnswerList[index]['questionUrl'] = this.questionAnswerService.formatQuestionUrl(item.question);\r\n  //     }\r\n  //   }\r\n  // }\r\n}\r\n","<!-- related list {{relatedQuestionAnswerList | json}} -->\r\n\r\n<div class=\"panel-container related-questionanswer-container\">\r\n    <div class=\"panel-item\">\r\n        <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n            Other Important Topics\r\n        </div>\r\n        <div class=\"panel-body open\">\r\n            <div class=\"panel-body-content\">\r\n                <div class=\"related-questions-container\">\r\n                    <article class=\"related-question-item\">\r\n                      <a [routerLink]= \"['/interview-questions/', topGitInterviewQuestions.path]\" class=\"question-link\">\r\n                        {{topGitInterviewQuestions.title}}\r\n                      </a>\r\n                    </article>\r\n                    <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topTypescriptInterviewQuestions.path]\" class=\"question-link\">\r\n                            {{topTypescriptInterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topJavascriptCodingInterviewQuestions.path]\" class=\"question-link\">\r\n                            {{topJavascriptCodingInterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>","<div class=\"modal\">\r\n  <div class=\"modal-content\">\r\n    <div>\r\n      <fieldset>\r\n        <legend>Add question and answer:</legend>\r\n        <div class=\"form-group row\">\r\n          <label for=\"question\" class=\"col-3 col-form-label\">Question</label>\r\n          <div class=\"col-9\">\r\n            <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.question\"\r\n              placeholder=\"Enter Question\" type=\"text\" class=\"form-control\"></textarea>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"answer\" class=\"col-3 col-form-label\">Answer</label>\r\n          <div class=\"col-9\">\r\n            \r\n            <!-- angular editor -->\r\n            <div>             \r\n              <angular-editor #editor id=\"editor1\" [(ngModel)]=\"interviewQuestion.answer\" [config]=\"config1\" (ngModelChange)=\"onChange($event)\" (blur)=\"onBlur($event)\">\r\n              </angular-editor>\r\n              <p class=\"html\">\r\n                <!-- HTML Output: {{ interviewQuestion.answer }} -->\r\n              </p>\r\n            </div> \r\n            <!-- angular editor -->\r\n            <textarea id=\"answer\" [(ngModel)]=\"interviewQuestion.answer\" placeholder=\"Enter Answer\" name=\"answer\"\r\n              cols=\"40\" rows=\"5\" class=\"form-control textarea \"></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"type\" class=\"col-3 col-form-label\">Type</label>\r\n          <div class=\"col-9\">\r\n            <select id=\"type\" name=\"type\" class=\"custom-select\" [(ngModel)]=\"interviewQuestion.questionType\">\r\n              <option *ngFor=\"let item of questionTypes\" [value]=\"item.questionType\">{{item.questionType}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-3 col-form-label\">Rank</label>\r\n          <div class=\"col-9\">\r\n            <input id=\"text\" [(ngModel)]=\"interviewQuestion.rank\" name=\"text\" placeholder=\"Enter Rank\" type=\"number\"\r\n              class=\"form-control\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-3 col-md-3 col-4\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\"\r\n              (click)=\"saveInterviewQuestionAnswer()\">Submit</button>\r\n          </div>\r\n          <div class=\"col-md-3 col-4\">\r\n            <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\"\r\n              class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  </div>\r\n</div>","import { Component, ChangeDetectorRef, Input, OnInit, Output, Renderer2, ViewChild } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport { QuestionAnswerService } from \"../../../services/question-answer-service/question-answer.service\";\r\nimport { LoaderService } from './../../../services/loader-service/loader.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { AngularEditorComponent, AngularEditorConfig } from '@kolkov/angular-editor';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-interview-questions',\r\n  templateUrl: './add-edit-interview-questions.component.html',\r\n  styleUrls: ['./add-edit-interview-questions.component.scss']\r\n})\r\nexport class AddEditInterviewQuestionsComponent implements OnInit {\r\n  @ViewChild(AngularEditorComponent) editor: AngularEditorComponent; // ViewChild reference to the AngularEditorComponent\r\n  editorContent: string = ''; // Initialize with an empty string or appropriate content\r\n\r\n  questionTypes: any;\r\n  interviewQuestion: any = { question: '', answer: '', rank: '' };\r\n  @Input() editedItem;\r\n  editMode: Boolean = true;\r\n  @Output() popupEvent = new EventEmitter();\r\n  tempDiv = 'div';\r\n\r\n  tempSattu: any;\r\n  constructor(\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private loaderService: LoaderService,\r\n    private cd: ChangeDetectorRef,\r\n    private highlightService: HightlightService,\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (Object.keys(this.editedItem).length === 0 && this.editedItem.constructor === Object)\r\n      this.editMode = false;\r\n    this.interviewQuestion = JSON.parse(JSON.stringify(this.editedItem));\r\n    this.getQuestionTypes();\r\n    this.cd.detectChanges(); console.log('Initial Interview Question:', this.interviewQuestion);\r\n    // Call the highlightAll() method here\r\n    // this.highlightService.highlightAll();\r\n  }\r\n  getQuestionTypes() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(response => {\r\n      this.questionTypes = response;\r\n      this.loaderService.display(false);\r\n    });\r\n  }\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionAnswerPopup');\r\n  }\r\n\r\n  // convertCodeContentHtmlIntoString() {\r\n  //   var tempElement = document.createElement(this.tempDiv);\r\n  //   tempElement.innerHTML = this.interviewQuestion.answer;\r\n  //   this.highlightService.convertHtmlIntoStringForCodeContent(tempElement);\r\n  //   this.interviewQuestion.answer = tempElement.innerHTML;\r\n  // }\r\n\r\n\r\n  addQuestionMarkIfNotPresent(question: string) {\r\n    const trimmedQuestion = question.trim();\r\n    const lastCharacter = trimmedQuestion.charAt(trimmedQuestion.length - 1);\r\n\r\n    if (lastCharacter !== '?' && lastCharacter !== '.' && lastCharacter !== ':') {\r\n      return trimmedQuestion + ' ?';\r\n    }\r\n\r\n    return trimmedQuestion;\r\n  }\r\n\r\n  convertAnswerHtmlIntoString(answer: string): string {\r\n    const tempElement = document.createElement(this.tempDiv);\r\n    tempElement.innerHTML = answer;\r\n    // Handle headings (h1 to h7zzzz)\r\n    const headings = tempElement.querySelectorAll('h1, h2, h3, h4, h5, h6, h7');\r\n    headings.forEach((heading: HTMLElement) => {\r\n      const textAlign = heading.style.textAlign;\r\n      if (textAlign === 'center') {\r\n        heading.outerHTML = `<div class=\"text-center\">${heading.outerHTML}</div>`;\r\n      } else if (textAlign === 'right') {\r\n        heading.outerHTML = `<div class=\"text-right\">${heading.outerHTML}</div>`;\r\n      } else if (textAlign === 'left') {\r\n        heading.outerHTML = `<div class=\"text-left\">${heading.outerHTML}</div>`;\r\n      }\r\n    });\r\n\r\n\r\n    // Replace placeholders with corresponding code section tags\r\n    tempElement.innerHTML = tempElement.innerHTML\r\n      .replace(/&lt;scss&gt;/g, '<div class=\"code-snippet\"><pre><code class=\"language-scss\">')\r\n      .replace(/&lt;\\/scss&gt;/g, '</code></pre></div>')\r\n      .replace(/&lt;html&gt;/g, '<div class=\"code-snippet\"><pre><code class=\"language-html\">')\r\n      .replace(/&lt;\\/html&gt;/g, '</code></pre></div>')\r\n      .replace(/&lt;typescript&gt;/g, '<div class=\"code-snippet\"><pre><code class=\"language-typescript\">')\r\n      .replace(/&lt;\\/typescript&gt;/g, '</code></pre></div>');\r\n\r\n    let formattedAnswer = tempElement.innerHTML;\r\n\r\n    // Additional adjustment to preserve line breaks within code sections\r\n    formattedAnswer = formattedAnswer.replace(/<p>/g, '\\n').replace(/<\\/p>/g, '');\r\n    this.tempSattu = formattedAnswer;\r\n    let parser = new DOMParser();\r\n    this.tempSattu = parser.parseFromString(this.tempSattu, 'text/html');\r\n    let fontTag = this.tempSattu.querySelector('font');\r\n    let value;\r\n    if(fontTag) {\r\n        value = fontTag.attributes.color.value;\r\n        formattedAnswer = formattedAnswer.replace(/<font[^>]*>/g, '<span style=\"color:'+ value +'\">').replace(/<\\/font>/g, '</span>');\r\n    }\r\n    return formattedAnswer;\r\n  }\r\n\r\n  saveInterviewQuestionAnswer() {\r\n    console.log('Interview Question before save:', this.interviewQuestion);\r\n\r\n    // Convert answer HTML into formatted string\r\n    this.interviewQuestion.answer = this.convertAnswerHtmlIntoString(this.interviewQuestion.answer);\r\n    // Wrap center-aligned <img> elements in a <div> with the 'img-center' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"display: block; margin: 0 auto;\">/g, '<div class=\"img-center\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n\r\n    // Wrap right-aligned <img> elements in a <div> with the 'img-right' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"float: right;\">/g, '<div class=\"img-right\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n\r\n    // Wrap right-aligned <img> elements in a <div> with the 'img-left' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"float: left;\">/g, '<div class=\"img-left\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n    // Wrap center-aligned content in a <div> with the 'text-center' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: center;\">/g, '<div class=\"text-center\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n\r\n    // Wrap right-aligned content in a <div> with the 'text-right' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: right;\">/g, '<div class=\"text-right\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n    // Wrap right-aligned content in a <div> with the 'text-left' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: left;\">/g, '<div class=\"text-left\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n\r\n    if (this.editMode) {\r\n      this.questionAnswerService.updateQuestionAnswer(this.interviewQuestion);\r\n    } else {\r\n      this.questionAnswerService.addQuestionAnswer(this.interviewQuestion);\r\n    }\r\n\r\n    this.closeAddEditPopup();\r\n    console.log('Interview Question after save:', this.interviewQuestion);\r\n  }\r\n\r\n\r\n  // angular editor\r\n  form: FormGroup;\r\n\r\n  updateAnswer() {\r\n    this.interviewQuestion.answer = ''; // Assigning a value to the answer property\r\n  }\r\n\r\n  config1: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    minHeight: '5rem',\r\n    maxHeight: 'auto',\r\n    placeholder: 'Enter Answer here...',\r\n    translate: 'no',\r\n    sanitize: false,\r\n    // toolbarPosition: 'top',\r\n    outline: true,\r\n    // defaultFontName: 'Comic Sans MS',\r\n    // defaultFontSize: '5',\r\n    // showToolbar: false,\r\n    defaultParagraphSeparator: 'p',\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'text-center',\r\n        class: 'text-center',\r\n      },\r\n      {\r\n        name: 'text-right',\r\n        class: 'text-right',\r\n      },\r\n      {\r\n        name: 'img-center',\r\n        class: 'img-center',\r\n      },\r\n      {\r\n        name: 'img-right',\r\n        class: 'img-right',\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    toolbarHiddenButtons: [\r\n      // ['bold', 'italic'],\r\n      // ['fontSize']\r\n    ]\r\n  };\r\n\r\n  onChange(event) {\r\n    console.log('changed');\r\n    this.interviewQuestion.answer = event; // Manually update the answer\r\n    this.checkForImage();\r\n  }\r\n\r\n  onBlur(event) {\r\n    console.log('blur ' + event);\r\n    this.interviewQuestion.answer = this.editor.textArea.nativeElement.innerHTML;\r\n  }\r\n\r\n  checkForImage() {\r\n    const editorElement = this.editor.textArea.nativeElement; // Access the underlying textarea element\r\n    const images = editorElement.querySelectorAll('img'); // Select all images within the editoror\r\n\r\n    images.forEach((image) => {\r\n      image.classList.add('your-dynamic-class1'); // Add your class to the image element\r\n      this.makeResizable(image); // Call the method to make images resizable\r\n    });\r\n  }\r\n\r\n  makeResizable(image: HTMLImageElement) {\r\n    // Add resize functionality to the image\r\n    image.addEventListener('mousedown', (e) => {\r\n      e.preventDefault();\r\n      const initialWidth = image.clientWidth;\r\n      const initialHeight = image.clientHeight;\r\n      const startX = e.clientX;\r\n      const startY = e.clientY;\r\n\r\n      const resize = (e) => {\r\n        const width = initialWidth + e.clientX - startX;\r\n        const height = initialHeight + e.clientY - startY;\r\n        image.style.width = `${width}px`;\r\n        image.style.height = `${height}px`;\r\n      };\r\n\r\n      const stopResize = () => {\r\n        window.removeEventListener('mousemove', resize);\r\n        window.removeEventListener('mouseup', stopResize);\r\n      };\r\n\r\n      window.addEventListener('mousemove', resize);\r\n      window.addEventListener('mouseup', (e) => {\r\n        stopResize();\r\n        // Update the answer with modified content\r\n        this.interviewQuestion.answer = this.editor.textArea.nativeElement.innerHTML;\r\n      });\r\n    });\r\n  }\r\n\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-content modal-question-types\"> \r\n        <div>\r\n         <fieldset>\r\n          <legend>Add/Edit Question Types:</legend>\r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-4 col-form-label\">Question Types</label> \r\n            <div class=\"col-8\">\r\n              <div *ngFor=\"let item of questionTypes\">\r\n                <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faEdit\" (click)=\"editQuestionType(item)\"></fa-icon><fa-icon class=\"hand-cursor delete-icon\" [icon]=\"faTrash\" (click)=\"deleteQuestionType(item._id)\"></fa-icon><span class=\"question-type-item\">{{item.questionType}}</span>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-4 col-form-label\">Add/Edit Question Type</label> \r\n            <div class=\"col-8\">\r\n              <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.questionType\" placeholder=\"Enter Question\" type=\"text\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>     \r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-4 col-md-3 col-4\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\" (click)=\"saveQuestionType()\">{{editMode==true?'Update':'Submit'}}</button>\r\n            </div>\r\n            <div class=\"col-md-3 col-4\">\r\n             <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\" class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n            </div>\r\n          </div>\r\n         </fieldset> \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {QuestionAnswerService} from './../../../services/question-answer-service/question-answer.service';\r\nimport { faTrash,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport {LoaderService} from './../../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-question-types',\r\n  templateUrl: './add-edit-question-types.component.html',\r\n  styleUrls: ['./add-edit-question-types.component.scss']\r\n})\r\nexport class AddEditQuestionTypesComponent implements OnInit {\r\n\r\n  @Output() popupEvent=new EventEmitter();\r\n  interviewQuestion:any={questionType:\"\"};\r\n  questionTypes:any;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  editMode=false;\r\n  constructor(private questionAnswerService:QuestionAnswerService,private loaderService:LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuestionTypes();\r\n  }\r\n\r\n  getQuestionTypes() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(data=>{\r\n      this.questionTypes=data;\r\n      this.loaderService.display(false);\r\n    })\r\n  }\r\n\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionTypesPopup');\r\n  }\r\n\r\n  saveQuestionType() {\r\n    this.loaderService.display(true);\r\n    if(this.editMode) {\r\n      this.questionAnswerService.updateQuestionType(this.interviewQuestion).subscribe(data=>{\r\n        this.getQuestionTypes();\r\n        this.interviewQuestion={questionType:''};\r\n        this.editMode=false;\r\n        this.loaderService.display(false);\r\n      })\r\n    }\r\n    else {\r\n      this.questionAnswerService.addQuestionType(this.interviewQuestion).subscribe(data=>{\r\n        this.getQuestionTypes();\r\n        this.interviewQuestion={questionType:''};\r\n        this.loaderService.display(false);\r\n      })\r\n   }\r\n  }\r\n\r\n  deleteQuestionType(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.deleteQuestionType(id).subscribe(data=>{\r\n      this.getQuestionTypes();\r\n      this.loaderService.display(false);\r\n    })\r\n   }\r\n  }\r\n\r\n  editQuestionType(item){\r\n    this.interviewQuestion=JSON.parse(JSON.stringify(item));\r\n    this.editMode=true;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"offset-md-1 col-md-8 col-12 main-questions-container\">\r\n      <article class=\"panel-container multiple-questions-container\" [ngClass]=\"{'admin-panel':adminMode}\">\r\n        <b>\r\n          <h1 class=\"page-heading\">{{headingTitle}}</h1>\r\n          <div class=\"featured-articleimg-container\" *ngIf=\"articleFeaturedImgPath\">\r\n            <img class=\"featured-article-img\" alt=\"{{headingTitle}}\" src={{articleFeaturedImgPath}}/>\r\n          </div>\r\n        </b>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <button class=\"col-md-3 col-5 btn add-questions-btn hand-cursor\" *ngIf=\"adminMode\"\r\n              (click)='openAddQuestionAnswerPopup()'>+ Add Q/A</button>\r\n            <button class=\"col-md-3 col-6 btn add-questions-btn hand-cursor\" *ngIf=\"adminMode\"\r\n              (click)='openAddQuestionTypePopup()'>+ Add/Edit Q/A type</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"showSearchTerm\" class=\"badge badge-secondary badge-pill search-term-container\">\r\n          <span class=\"search-text\">{{searchKey}}</span>\r\n          <span class=\"badge badge-light clear-search\" (click)=\"clearSearch()\">\r\n            <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n          </span>\r\n        </div>\r\n        <div class=\"question-answer-container\">\r\n          <div *ngFor=\"let questionAnswerItem of questionAnswerList | paginate : {\r\n              itemsPerPage: itemsPerPage,\r\n              currentPage: currentPage,\r\n              totalItems: totalItems\r\n            };let i=index\">\r\n            <div class=\"panel-item\">\r\n              <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-10 col-md-9\">\r\n                    <!-- test item -->\r\n                    <span>{{i+1 + (currentPage-1)*itemsPerPage}}. <h2 class=\"question-text\"\r\n                        [innerHtml]=\"addQuestionMarkIfNotPresent(questionAnswerItem.question)\"></h2></span>\r\n                  </div>\r\n                  <div class=\"col-xl-2 col-md-3 action-btns\">\r\n                    <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor edit-icon\" [icon]=\"faEdit\"\r\n                      (click)=\"editQuestionAnswer(questionAnswerItem)\"></fa-icon>\r\n                    <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor delete-icon\" [icon]=\"faTrash\"\r\n                      (click)=\"deleteQuestionAnswer(questionAnswerItem._id)\"></fa-icon><button\r\n                      class=\"showHideAnswer hand-cursor btn-show-hide\"\r\n                      (click)=\"toggleShowHideAnswer(questionAnswerItem)\">{{questionAnswerItem.buttonText?questionAnswerItem.buttonText:\"Show\"}}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"panel-body\" [ngClass]=\"{'open': questionAnswerItem.showAnswer ==true}\">\r\n                <div class=\"panel-body-content\">\r\n                  <div [innerHtml]=\"questionAnswerItem.answer\">\r\n                  </div>\r\n                  <div class=\"open-linkseperate-container\">\r\n                    <a [title]=\"openNewTabText\" target=\"_blank\"\r\n                      [routerLink]=\"['/interview-questions/', getQuestionAnswerLink(questionAnswerItem.question)]\"\r\n                      class=\"question-link\">\r\n                      <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faExternalLinkSquareAlt\"></fa-icon>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"affiliate-ads-container\">\r\n              <!-- <app-affiliate-ads [index]=\"i\" [totalItems]=\"questionAnswerList.length\"></app-affiliate-ads> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"empty-result\" *ngIf=\"questionAnswerList && questionAnswerList.length==0\">\r\n            Search results not found\r\n          </div>\r\n        </div>\r\n        <div class=\"pagination-container d-flex justify-content-center\">\r\n          <pagination-controls (pageChange)=\"renderPage($event)\" [maxSize]=\"maxSize\"></pagination-controls>\r\n        </div>\r\n      </article>\r\n      <app-other-interview-questions></app-other-interview-questions>\r\n    </div>\r\n\r\n    <div class=\"col-md-3 col-12 relation-questions-container\">\r\n      <div class=\"related-questionanswer-template\">\r\n        <app-related-interview-questions></app-related-interview-questions>\r\n      </div>\r\n      <!-- <div class=\"related-questionanswer-template\">\r\n        <app-other-interview-questions></app-other-interview-questions>\r\n      </div>    -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"offset-md-1 col-md-8 col-12 other-important-questionscontainer\">\r\n      <app-other-interview-questions></app-other-interview-questions>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<app-add-edit-interview-questions [editedItem]=\"editedItem\" *ngIf=\"showQuestionAnswerModal\"\r\n  (popupEvent)=\"closeModal($event)\"></app-add-edit-interview-questions>\r\n<app-add-edit-question-types *ngIf=\"showQuestionTypeModal\" (popupEvent)=\"closeModal($event)\">\r\n</app-add-edit-question-types>","import { Component, OnInit, Input, ViewChildren, QueryList, ElementRef, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faTrash,faEdit, faTimes, faExternalLinkSquareAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport {QuestionAnswerService} from './../../../services/question-answer-service/question-answer.service';\r\nimport {IServerSide} from './../../../interfaces/IServerSide';\r\nimport { RichSnippetService } from 'src/app/services/rich-snippet-service/rich-snippet.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-question-answer-panel',\r\n  templateUrl: './question-answer-panel.component.html',\r\n  styleUrls: ['./question-answer-panel.component.scss']\r\n})\r\nexport class QuestionAnswerPanelComponent implements OnInit {\r\n  @ViewChildren('codeContent') codeContentList:QueryList<any>;\r\n  @Input() questionAnswerList;\r\n  @Input() adminMode:boolean;\r\n  @Input() totalItems = 0;\r\n  @Input() currentPage = 1;\r\n  @Input() articleFeaturedImgPath;\r\n  showQuestionAnswerModal:Boolean=false;\r\n  showQuestionTypeModal:Boolean=false;\r\n  searchKey: any;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  faTimes=faTimes;\r\n  faExternalLinkSquareAlt = faExternalLinkSquareAlt;\r\n  editedItem:any;\r\n  showSearchTerm: boolean = false;\r\n  itemsPerPage;\r\n  maxSize;\r\n  serverSideObj: IServerSide;\r\n  headingTitle: string;\r\n  openNewTabText: string;\r\n  defaultArticleFeaturedImgPath: string;\r\n  constructor(\r\n    private questionAnswerService:QuestionAnswerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private highlightService: HightlightService,\r\n    private richSnippetService: RichSnippetService,\r\n    private renderer: Renderer2, \r\n    private elem: ElementRef\r\n    ) { \r\n      this.itemsPerPage = this.questionAnswerService.itemsPerPage;\r\n      this.maxSize = this.questionAnswerService.maxSize;\r\n      this.openNewTabText = this.questionAnswerService.openNewTabText;\r\n    }\r\n  \r\n  ngOnInit(): void {\r\n    this.handleRouteDataSubscription();\r\n  }\r\n\r\n  setHeadingTitleIfEmpty() {\r\n    if(!this.headingTitle) {\r\n      this.headingTitle = this.questionAnswerService.defaultTitle;\r\n      this.articleFeaturedImgPath = this.questionAnswerService.defaultArticleImg;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if(changes.questionAnswerList.currentValue && changes.questionAnswerList.currentValue.length > 0) {\r\n        this.currentPage = this.questionAnswerService.serverSideObj.currentPage;\r\n        this.highlightService.highlightAll();\r\n        this.setDataForRichSnippet(changes.questionAnswerList.currentValue);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setHeadingTitleIfEmpty();\r\n  }\r\n\r\n  setDataForRichSnippet(questionAnswerList) {\r\n    this.richSnippetService.setRichSnippetData(questionAnswerList, this.renderer);\r\n  }\r\n\r\n  setHeadingTitle(title) {\r\n    this.headingTitle = title;\r\n    this.questionAnswerService.defaultTitle = title;\r\n  }\r\n\r\n  handleRouteDataSubscription() {\r\n    this.route.data.subscribe(response=>{\r\n       if(response && response.title) {\r\n         this.questionAnswerService.setTitle(response.title);\r\n         this.setHeadingTitle(response.headingTitle)\r\n       }\r\n    })\r\n  }\r\n\r\n  toggleShowHideAnswer(questionAnswerItem) {\r\n    if(!questionAnswerItem.showAnswer) {\r\n      questionAnswerItem.showAnswer=true;\r\n      questionAnswerItem.buttonText=\"Hide\"\r\n    }\r\n    else {\r\n     questionAnswerItem.showAnswer=false;\r\n     questionAnswerItem.buttonText=\"Show\"\r\n    }\r\n  }\r\n\r\n  openAddQuestionAnswerPopup() {\r\n    this.showQuestionAnswerModal=true;\r\n    this.editedItem={};\r\n  }\r\n\r\n  openAddQuestionTypePopup(){\r\n    this.showQuestionTypeModal=true;\r\n  }\r\n\r\n  closeModal(event) {\r\n    if(event==\"closeQuestionAnswerPopup\") {\r\n      this.showQuestionAnswerModal=false;\r\n    }\r\n    else {\r\n      this.showQuestionTypeModal=false;\r\n    } \r\n  }\r\n\r\n  deleteQuestionAnswer(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n     this.questionAnswerService.deleteQuestionAnswer(id);\r\n    }\r\n  }\r\n\r\n  editQuestionAnswer(data) {\r\n    this.editedItem=data;\r\n    this.showQuestionAnswerModal=true;\r\n  }\r\n\r\n  clearSearch(){\r\n    this.showSearchTerm = false;\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  renderPage(event: number) {\r\n    this.currentPage = event;\r\n    this.questionAnswerService.serverSideObj.currentPage = this.currentPage;\r\n    this.router.navigate([\"interview-questions/page\", this.currentPage]);\r\n  }\r\n\r\n  getQuestionAnswerLink(question) {\r\n    let result = this.questionAnswerService.formatAndReturnFullUrl(question);\r\n    return result;\r\n  }\r\n\r\n //add \"?\" at the end of question, if not present\r\n  addQuestionMarkIfNotPresent(question: string): string {\r\n    return this.questionAnswerService.addQuestionMarkIfNotPresentCondition(question);\r\n  }\r\n}\r\n","<!-- related list {{relatedQuestionAnswerList | json}} -->\r\n\r\n<div class=\"panel-container related-questionanswer-container\">\r\n    <div class=\"panel-item\">\r\n        <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n            Related questions\r\n        </div>\r\n        <div class=\"panel-body open\">\r\n            <div class=\"panel-body-content\">\r\n                <div class=\"related-questions-container\">\r\n                    <article *ngFor=\"let item of relatedQuestionAnswerList;let i = index\"\r\n                        class=\"related-question-item\"> \r\n                        <a [routerLink] = \"['/interview-questions/', item.questionUrl]\" class=\"question-link\">\r\n                            {{item.question}}\r\n                        </a>\r\n                    </article>\r\n                    <article class=\"related-question-item\">\r\n                      <a [routerLink]= \"['/interview-questions/', freshersInterviewQuestionsObj.path]\" class=\"question-link\">\r\n                        {{freshersInterviewQuestionsObj.title}}\r\n                      </a>\r\n                    </article>\r\n                    <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', threeYearsExperienceInterviewQuestionsObj.path]\" class=\"question-link\">\r\n                            {{threeYearsExperienceInterviewQuestionsObj.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', fiveYearsExperienceInterviewQuestionsObj.path]\" class=\"question-link\">\r\n                            {{fiveYearsExperienceInterviewQuestionsObj.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topAngularInterviewQuestions.path, {data:topAngularInterviewQuestions}]\" class=\"question-link\">\r\n                            {{topAngularInterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topHTML5InterviewQuestions.path, {data:topHTML5InterviewQuestions}]\" class=\"question-link\">\r\n                            {{topHTML5InterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topCSS3InterviewQuestions.path, {data:topCSS3InterviewQuestions}]\" class=\"question-link\">\r\n                            {{topCSS3InterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                      <article class=\"related-question-item\">\r\n                        <a [routerLink]= \"['/interview-questions/', topJavascriptInterviewQuestions.path, {data:topJavascriptInterviewQuestions}]\" class=\"question-link\">\r\n                            {{topJavascriptInterviewQuestions.title}}\r\n                        </a>\r\n                      </article>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { QuestionAnswerService } from 'src/app/services/question-answer-service/question-answer.service';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport * as UIConstants from './../../../utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-related-interview-questions',\r\n  templateUrl: './related-interview-questions.component.html',\r\n  styleUrls: ['./related-interview-questions.component.scss']\r\n})\r\nexport class RelatedInterviewQuestionsComponent implements OnInit {\r\n  relatedQuestionAnswerList: any;\r\n  freshersInterviewQuestionsObj: any;\r\n  threeYearsExperienceInterviewQuestionsObj: any;\r\n  fiveYearsExperienceInterviewQuestionsObj: any;\r\n  topAngularInterviewQuestions: any;\r\n  topHTML5InterviewQuestions: any;\r\n  topCSS3InterviewQuestions: any;\r\n  topJavascriptInterviewQuestions: any;\r\n\r\n  constructor(\r\n    private loaderService: LoaderService,\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private route: ActivatedRoute,\r\n    private cd: ChangeDetectorRef,\r\n    private highlightService: HightlightService\r\n  ) { \r\n     this.setQuestionTitleByExperience();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.handleRouteChangeEvent();\r\n  }\r\n\r\n  setQuestionTitleByExperience() {\r\n    this.freshersInterviewQuestionsObj = UIConstants.topFresherFrontendInterviewQuestions;\r\n    this.threeYearsExperienceInterviewQuestionsObj = UIConstants.topThreeYearsExperienceFrontendInterviewQuestions;\r\n    this.fiveYearsExperienceInterviewQuestionsObj = UIConstants.topFiveYearsExperienceFrontendInterviewQuestions;\r\n    this.topAngularInterviewQuestions = UIConstants.topAngularInterviewQuestions;\r\n    this.topHTML5InterviewQuestions = UIConstants.topHTML5InterviewQuestions;\r\n    this.topCSS3InterviewQuestions = UIConstants.topCSS3InterviewQuestions;\r\n    this.topJavascriptInterviewQuestions = UIConstants.topJavascriptInterviewQuestions;\r\n  }\r\n\r\n  handleRouteChangeEvent() {\r\n    this.route.paramMap.subscribe(params => {\r\n       this.getRelatedQuestionAnswer();\r\n    });\r\n  }\r\n\r\n  getRelatedQuestionAnswer() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getRelatedQuestionAnswer().subscribe(response=>{\r\n       this.loaderService.display(false);\r\n       this.relatedQuestionAnswerList= response;\r\n       this.formatQuestionUrl();\r\n       this.cd.detectChanges();\r\n    })\r\n  }\r\n\r\n  formatQuestionUrl() {\r\n    if (this.relatedQuestionAnswerList && this.relatedQuestionAnswerList.length > 0) {\r\n      for (const [index, item] of this.relatedQuestionAnswerList.entries()) {\r\n        this.relatedQuestionAnswerList[index]['questionUrl'] = this.questionAnswerService.formatQuestionUrl(item.question);\r\n        // Call addQuestionMarkIfNotPresentCondition to add a question mark if needed\r\n        this.relatedQuestionAnswerList[index]['question'] = this.questionAnswerService.addQuestionMarkIfNotPresentCondition(item.question);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport { QuestionAnswerService } from \"../../services/question-answer-service/question-answer.service\";\r\nimport { LoaderService } from './../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-angular-interview-questions',\r\n  templateUrl: './angular-interview-questions.component.html',\r\n  styleUrls: ['./angular-interview-questions.component.scss']\r\n})\r\nexport class AngularInterviewQuestionsComponent implements OnInit {\r\n  questionAnswerList: any;\r\n  questionTypeFromUrl: any;\r\n  experienceFromUrl: any;\r\n  totalItems: any;\r\n  currentPage: any;\r\n  pageNumberParamsValue: any;\r\n  articleFeaturedImgPath: any;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private loaderService: LoaderService,\r\n    private highlightService: HightlightService,\r\n  ) {\r\n    this.handleRouteDataSubscription();\r\n    this.handleRouteParamChangeSubscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.handleGetQuestionAnswerListSubscription();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.getQuestionAnswerServerSideIfNoParams();\r\n  }\r\n\r\n  getQuestionAnswerServerSideIfNoParams() {\r\n    if (!this.pageNumberParamsValue && !this.experienceFromUrl && !this.questionTypeFromUrl) {\r\n      this.questionAnswerService.getQuestionAnswerListServerSide();\r\n    }\r\n  }\r\n\r\n  handleGetQuestionAnswerListSubscription() {\r\n    this.questionAnswerService.currentData.subscribe((data) => {\r\n      if (data && data['result']) {\r\n        this.questionAnswerList = data['result'];\r\n        this.totalItems = data['totalItems'];\r\n        this.loaderService.display(false);\r\n        this.highlightService.hightLightAgain();\r\n        this.questionAnswerService.scrollToTheTopOfThePage();\r\n      }\r\n    })\r\n    this.checkRouteParamsDataAndGetQuestionAnswer();\r\n  }\r\n\r\n  checkRouteParamsDataAndGetQuestionAnswer() {\r\n    if ((this.experienceFromUrl || this.experienceFromUrl == 0) && (this.questionTypeFromUrl && this.questionTypeFromUrl!=='all')) {\r\n      this.questionAnswerService.resetServerSideObj();\r\n      this.questionAnswerService.serverSideObj.experience = this.experienceFromUrl;\r\n      this.questionAnswerService.serverSideObj.questionType = this.questionTypeFromUrl;\r\n      this.questionAnswerService.questionAnswerDetailPageEvent.next({\r\n        hideQuestionTypeDropdown: true,\r\n        hideSearchInput: false\r\n      });\r\n      this.questionAnswerService.getQuestionAnswerListServerSide();\r\n    } else if (this.experienceFromUrl || this.experienceFromUrl == 0) {\r\n      this.questionAnswerService.resetServerSideObj();\r\n      this.questionAnswerService.serverSideObj.experience = this.experienceFromUrl;\r\n      this.questionAnswerService.questionAnswerDetailPageEvent.next({\r\n        hideQuestionTypeDropdown: false,\r\n        hideSearchInput: false\r\n      });\r\n      this.questionAnswerService.getQuestionAnswerListServerSide();\r\n    } else if (this.questionTypeFromUrl) {\r\n      this.questionAnswerService.resetServerSideObj();\r\n      this.questionAnswerService.serverSideObj.questionType = this.questionTypeFromUrl;\r\n      this.questionAnswerService.questionAnswerDetailPageEvent.next({\r\n        hideQuestionTypeDropdown: true,\r\n        hideSearchInput: false\r\n      });\r\n      this.questionAnswerService.getQuestionAnswerListServerSide();\r\n    }\r\n  }\r\n\r\n  handleRouteDataSubscription() {\r\n    this.route.data.subscribe(response => {\r\n      this.experienceFromUrl = response.experience;\r\n      this.questionTypeFromUrl = response.type;\r\n      this.articleFeaturedImgPath = response.imgPath;\r\n    })\r\n  }\r\n\r\n  handleRouteParamChangeSubscription() {\r\n    this.route.paramMap.subscribe(params => {\r\n       this.pageNumberParamsValue =params.get('pageNumber');\r\n       if(this.pageNumberParamsValue) {\r\n          this.questionAnswerService.serverSideObj.currentPage = this.pageNumberParamsValue? this.pageNumberParamsValue: this.currentPage;\r\n          this.currentPage = this.questionAnswerService.serverSideObj.currentPage;\r\n          this.questionAnswerService.getQuestionAnswerListServerSide(this.questionAnswerService.serverSideObj); \r\n       }\r\n    });\r\n  }\r\n\r\n  resetServerSideObj() {\r\n    this.questionAnswerService.resetServerSideObj();\r\n  }\r\n}\r\n","<app-question-answer-panel \r\n[questionAnswerList]=\"questionAnswerList\" \r\n[adminMode]=\"false\"\r\n[totalItems]=\"totalItems\"\r\n[currentPage]=\"currentPage\"\r\n[articleFeaturedImgPath]=\"articleFeaturedImgPath\"\r\n>\r\n</app-question-answer-panel>","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"offset-md-1 col-md-8 col-12 main-questions-container\">\r\n            <div class=\"panel-container question-answer-detailcontainer\"\r\n                *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n                <div class=\"panel-item\">\r\n                    <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-10 col-md-9\">\r\n                                <header>\r\n                                    <h1 class=\"question-text\" [innerHtml]=\"questionAnswerItem.question\"></h1>\r\n                                </header>\r\n                            </div>\r\n                            <div class=\"col-xl-2 col-md-3 action-btns\">\r\n                                <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor edit-icon\" [icon]=\"faEdit\"\r\n                                    (click)=\"editQuestionAnswer(questionAnswerItem)\">\r\n                                </fa-icon>\r\n                                <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor delete-icon\" [icon]=\"faTrash\"\r\n                                    (click)=\"deleteQuestionAnswer(questionAnswerItem._id)\">\r\n                                </fa-icon>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"panel-body\" [ngClass]=\"{'open': true}\">\r\n                        <div class=\"panel-body-content\" [innerHtml]=\"questionAnswerItem.answer\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"affiliate-ads-container\">\r\n                    <!-- <app-affiliate-ads></app-affiliate-ads> -->\r\n                </div>\r\n            </div>\r\n            <app-other-interview-questions *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n            </app-other-interview-questions>\r\n            <div class=\"question-error-container\" *ngIf=\"questionAnswerItem && questionAnswerItem.invalidQuestion\">\r\n                <div class=\"error-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <fa-icon class=\"hand-cursor error-triangle-icon\" [icon]=\"faExclamationTriangle\">\r\n                            </fa-icon>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <div class=\"error-header\">\r\n                                <span>Page not found</span>\r\n                            </div>\r\n                            <div class=\"error-inner-content\">\r\n                                <span>We're sorry, we couldn't find the page you requested.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-md-3 col-12 detail-relatedquestion-container\">\r\n            <div class=\"related-questionanswer-template\"\r\n                *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n                <app-related-interview-questions></app-related-interview-questions>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"offset-md-1 col-md-8 col-12 other-important-questionscontainer\">\r\n            <app-other-interview-questions></app-other-interview-questions>\r\n        </div>\r\n    </div>\r\n</div> -->","import { Component, OnInit, Renderer2 } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { faTrash,faEdit, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { QuestionAnswerService } from 'src/app/services/question-answer-service/question-answer.service';\r\nimport { Title } from \"@angular/platform-browser\";\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport { RichSnippetService } from 'src/app/services/rich-snippet-service/rich-snippet.service';\r\n\r\n@Component({\r\n  selector: 'app-question-answer-detail',\r\n  templateUrl: './question-answer-detail.component.html',\r\n  styleUrls: ['./question-answer-detail.component.scss']\r\n})\r\nexport class QuestionAnswerDetailComponent implements OnInit {\r\n\r\n  faEdit = faEdit;\r\n  faTrash = faTrash;\r\n  faExclamationTriangle = faExclamationTriangle;\r\n  searchParam: string;\r\n  questionAnswerItem: any;\r\n  adminMode = false;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private loaderService: LoaderService,\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private title: Title,\r\n    private highlightService: HightlightService,\r\n    private richSnippetService: RichSnippetService,\r\n    private renderer: Renderer2, \r\n  ) { \r\n    this.adminMode = this.questionAnswerService.isAdmin;\r\n  }\r\n\r\n  ngOnInit(): void {\r\n     this.routeParamEvent();\r\n  }\r\n\r\n  routeParamEvent() {\r\n    this.route.paramMap.subscribe(params => {\r\n      if(params) {\r\n        this.searchParam = this.formatQuestion(params);\r\n        this.questionAnswerService.questionAnswerDetailPageEvent.next({\r\n          hideQuestionTypeDropdown: true,\r\n          hideSearchInput: true\r\n        });\r\n        this.getQuestionAnswerByParams();\r\n      }\r\n    });\r\n  }\r\n\r\n  setDataForRichSnippet() {\r\n    this.richSnippetService.setRichSnippetData([this.questionAnswerItem], this.renderer);\r\n  }\r\n\r\n  setTitle(title) {\r\n    this.questionAnswerService.setTitle(title);\r\n    this.setDataForRichSnippet();\r\n  }\r\n\r\n  updateDescription(description) {\r\n    this.questionAnswerService.updateDescription(description)\r\n  }\r\n\r\n  getQuestionAnswerByParams() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionAnswerByParams(this.searchParam).subscribe(response=>{\r\n      this.loaderService.display(false);\r\n      this.questionAnswerItem = response;\r\n      this.setTitle(this.questionAnswerItem.question)\r\n      this.updateDescription(this.questionAnswerItem.answer);\r\n      this.highlightService.highlightAll();\r\n      this.questionAnswerService.scrollToTheTopOfThePage();\r\n    })\r\n  }\r\n\r\n  formatQuestion(params) {\r\n    let result = params.get('question').split('-');\r\n    if(result) {\r\n      return result.join(' ');\r\n    }\r\n    else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  editQuestionAnswer(editedItem) {\r\n    console.log('editeditem', editedItem);\r\n  }\r\n\r\n  deleteQuestionAnswer(item) {\r\n    console.log('deleteditem', item);\r\n  }\r\n}\r\n","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customAngularRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topFresherAngularInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherAngularInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherAngularInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherAngularInterviewQuestions.experience,\r\n            type: UIConstants.topFresherAngularInterviewQuestions.type,\r\n            imgPath: UIConstants.topFresherAngularInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.type,\r\n            imgPath: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.type,\r\n            imgPath: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.imgPath\r\n        }\r\n    }\r\n];","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule , Routes } from '@angular/router';\r\nimport { AngularInterviewQuestionsComponent } from './angular-interview-questions/angular-interview-questions.component';\r\nimport { QuestionAnswerDetailComponent } from './angular-interview-questions/question-answer-detail/question-answer-detail.component';\r\nimport * as UIConstants from './../utils/constants';\r\nimport { customRoutes } from '../utils/custom-routes/customRoutes';\r\n\r\nconst routes: Routes = [\r\n  ...customRoutes,\r\n  {\r\n    path:':question', component: QuestionAnswerDetailComponent\r\n  },\r\n  {\r\n    path: 'page/:pageNumber',\r\n    component: AngularInterviewQuestionsComponent,\r\n  },\r\n  {\r\n    path: 'page/:pageNumber/:searchTerm/:questionType',\r\n    component: AngularInterviewQuestionsComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    component: AngularInterviewQuestionsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class InterviewQuestionsRoutingModule { }\r\n","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customJavascriptRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topFresherJavascriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherJavascriptInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherJavascriptInterviewQuestions.experience,\r\n            type: UIConstants.topFresherJavascriptInterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.type\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customCssRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topFresherCssInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherCssInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherCssInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherCssInterviewQuestions.experience,\r\n            type: UIConstants.topFresherCssInterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceCssInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceCssInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceCssInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceCssInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceCssInterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceCssInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceCssInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceCssInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceCssInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceCssInterviewQuestions.type\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customHtmlRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topFresherHtml5InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherHtml5InterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherHtml5InterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherHtml5InterviewQuestions.experience,\r\n            type: UIConstants.topFresherHtml5InterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.type\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customGitRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topGitInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topGitInterviewQuestions.title,\r\n            headingTitle: UIConstants.topGitInterviewQuestions.headingTitle,\r\n            type: UIConstants.topGitInterviewQuestions.type,\r\n            imgPath: UIConstants.topGitInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFresherGitInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherGitInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherGitInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherGitInterviewQuestions.experience,\r\n            type: UIConstants.topFresherGitInterviewQuestions.type,\r\n            imgPath: UIConstants.topFresherGitInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceGitInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceGitInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceGitInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceGitInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceGitInterviewQuestions.type,\r\n            imgPath: UIConstants.topThreeYearsExperienceGitInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceGitInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceGitInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceGitInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceGitInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceGitInterviewQuestions.type,\r\n            imgPath: UIConstants.topFiveYearsExperienceGitInterviewQuestions.imgPath\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customTypescriptRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topTypescriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topTypescriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topTypescriptInterviewQuestions.headingTitle,\r\n            type: UIConstants.topTypescriptInterviewQuestions.type,\r\n            imgPath: UIConstants.topTypescriptInterviewQuestions.imgPath\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customCodingQuestionsRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topJavascriptCodingInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topJavascriptCodingInterviewQuestions.title,\r\n            headingTitle: UIConstants.topJavascriptCodingInterviewQuestions.headingTitle,\r\n            type: UIConstants.topJavascriptCodingInterviewQuestions.type\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../constants';\r\nimport { customAngularRoutes } from \"./custom-angular-routes/customAngularRoutes\";\r\nimport { customCodingQuestionsRoutes } from \"./custom-coding-question-routes/customCodingQuestionRoutes\";\r\nimport { customCssRoutes } from \"./custom-css-routes/customCSSRoutes\";\r\nimport { customGitRoutes } from \"./custom-git-routes/customGitRoutes\";\r\nimport { customHtmlRoutes } from \"./custom-html-routes/customHtmlRoutes\";\r\nimport { customJavascriptRoutes } from \"./custom-javascript-routes/customJavascriptRoutes\";\r\nimport { customTypescriptRoutes } from \"./custom-typescript-routes/customTypescriptRoutes\";\r\n\r\nexport const customRoutes: Routes = [\r\n    ...customAngularRoutes,\r\n    ...customJavascriptRoutes,\r\n    ...customCssRoutes,\r\n    ...customHtmlRoutes,\r\n    ...customGitRoutes,\r\n    ...customTypescriptRoutes,\r\n    ...customCodingQuestionsRoutes,\r\n    {\r\n        path: UIConstants.topFrontendInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFrontendInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFrontendInterviewQuestions.headingTitle,\r\n            type: UIConstants.topFrontendInterviewQuestions.type,\r\n            imgPath: UIConstants.topFrontendInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topHTML5InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topHTML5InterviewQuestions.title,\r\n            headingTitle: UIConstants.topHTML5InterviewQuestions.headingTitle,\r\n            type: UIConstants.topHTML5InterviewQuestions.type,\r\n            imgPath: UIConstants.topHTML5InterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topCSS3InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topCSS3InterviewQuestions.title,\r\n            headingTitle: UIConstants.topCSS3InterviewQuestions.headingTitle,\r\n            type: UIConstants.topCSS3InterviewQuestions.type,\r\n            imgPath: UIConstants.topCSS3InterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topJavascriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topJavascriptInterviewQuestions.headingTitle,\r\n            type: UIConstants.topJavascriptInterviewQuestions.type,\r\n            imgPath: UIConstants.topJavascriptInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topJavascriptInterviewQuestions.pathOld,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topJavascriptInterviewQuestions.headingTitle,\r\n            type: UIConstants.topJavascriptInterviewQuestions.type,\r\n            imgPath: UIConstants.topJavascriptInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topAngularInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topAngularInterviewQuestions.title,\r\n            headingTitle: UIConstants.topAngularInterviewQuestions.headingTitle,\r\n            type: UIConstants.topAngularInterviewQuestions.type,\r\n            imgPath: UIConstants.topAngularInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFresherFrontendInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherFrontendInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherFrontendInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherFrontendInterviewQuestions.experience,\r\n            type: UIConstants.topFresherFrontendInterviewQuestions.type,\r\n            imgPath: UIConstants.topFresherFrontendInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.type,\r\n            imgPath: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.type,\r\n            imgPath: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.imgPath\r\n        }\r\n    }\r\n];","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularInterviewQuestionsComponent } from '../interview-questions/angular-interview-questions/angular-interview-questions.component';\r\nimport { InterviewQuestionsRoutingModule } from './interview-questions-routing.module';\r\nimport { QuestionAnswerPanelComponent } from '../interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AddEditInterviewQuestionsComponent } from './angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddEditQuestionTypesComponent } from './angular-interview-questions/add-edit-question-types/add-edit-question-types.component';\r\nimport { AffiliateAdsComponent } from './angular-interview-questions/question-answer-panel/affiliate-ads/affiliate-ads.component';\r\nimport { QuestionAnswerDetailComponent } from './angular-interview-questions/question-answer-detail/question-answer-detail.component';\r\nimport { RelatedInterviewQuestionsComponent } from './angular-interview-questions/related-interview-questions/related-interview-questions.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { OtherInterviewQuestionsComponent } from './angular-interview-questions/other-interview-questions/other-interview-questions.component';\r\nimport { AngularEditorModule } from '@kolkov/angular-editor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AngularInterviewQuestionsComponent,\r\n    QuestionAnswerPanelComponent,\r\n    AddEditInterviewQuestionsComponent,\r\n    AddEditQuestionTypesComponent,\r\n    AffiliateAdsComponent,\r\n    QuestionAnswerDetailComponent,\r\n    RelatedInterviewQuestionsComponent,\r\n    OtherInterviewQuestionsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InterviewQuestionsRoutingModule,AngularEditorModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NgxPaginationModule,\r\n  ],\r\n  exports:[\r\n    AngularInterviewQuestionsComponent,\r\n    QuestionAnswerPanelComponent,\r\n    QuestionAnswerDetailComponent\r\n  ]\r\n})\r\nexport class InterviewQuestionsModule { }\r\n","import { Renderer2, OnInit, Inject, Injectable, PLATFORM_ID } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class RichSnippetService {\r\n\r\n  platformId;\r\n  richSnippetData;\r\n  jsonLdScriptTagQuery = 'script[type=\"application/ld+json\"]';\r\n  constructor(\r\n    @Inject(PLATFORM_ID) platformId: Object,\r\n    @Inject(DOCUMENT) public _doc: Document,\r\n  ) {\r\n    this.platformId = platformId;\r\n    this.setRichSnippetBaseFormat();\r\n  }\r\n\r\n  getWindow(): Window | null {\r\n    return this._doc.defaultView;\r\n  }\r\n\r\n  setRichSnippetBaseFormat() {\r\n    this.richSnippetData = {\r\n      \"@context\": \"http://schema.org\",\r\n      \"@type\": \"FAQPage\",\r\n      \"mainEntity\": [{\r\n        \"@type\": \"Question\",\r\n        \"name\": \"What is the return policy?\",\r\n        \"acceptedAnswer\": {\r\n          \"@type\": \"Answer\",\r\n          \"text\": \"<p>Most unopened items in new condition and returned within <b>90 days</b> will receive a refund or exchange. Some items have a modified return policy noted on the receipt or packing slip. Items that are opened or damaged or do not have a receipt may be denied a refund or exchange. Items purchased online or in-store may be returned to any store.</p><p>Online purchases may be returned via a major parcel carrier. <a href=https://example.com/returns> Click here </a> to initiate a return.</p>\"\r\n        }\r\n      }, {\r\n        \"@type\": \"Question\",\r\n        \"name\": \"How long does it take to process a refund?\",\r\n        \"acceptedAnswer\": {\r\n          \"@type\": \"Answer\",\r\n          \"text\": \"We will reimburse you for returned items in the same way you paid for them. For example, any amounts deducted from a gift card will be credited back to a gift card. For returns by mail, once we receive your return, we will process it within 4–5 business days. It may take up to 7 days after we process the return to reflect in your account, depending on your financial institution's processing time.\"\r\n        }\r\n      }]\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set JSON-LD Microdata on the Document Body.\r\n   *\r\n   * @param renderer2             The Angular Renderer\r\n   * @param data                  The data for the JSON-LD script\r\n   * @returns                     Void\r\n   */\r\n  public setJsonLd(renderer2: Renderer2): void {\r\n    if (this.platformId) {\r\n      this.removeExistingJsonLdIfPresent();\r\n      let script = renderer2.createElement('script');\r\n      script.type = 'application/ld+json';\r\n      script.text = `${JSON.stringify(this.richSnippetData)}`;\r\n      renderer2.appendChild(this.getWindow().document.body, script);\r\n    }\r\n  }\r\n\r\n  removeExistingJsonLdIfPresent() {\r\n    let element = this.getWindow().document.querySelector(this.jsonLdScriptTagQuery);\r\n    if (element) {\r\n      element.remove()\r\n    }\r\n  }\r\n\r\n  public setRichSnippetData(questionAnswerList, renderer2) {\r\n    this.richSnippetData.mainEntity = [];\r\n    questionAnswerList.forEach(item => {\r\n      this.richSnippetData.mainEntity.push(\r\n        {\r\n          \"@type\": \"Question\",\r\n          \"name\": item.question,\r\n          \"acceptedAnswer\": {\r\n            \"@type\": \"Answer\",\r\n            \"text\": item.answer\r\n          }\r\n        }\r\n      )\r\n    });\r\n    this.setJsonLd(renderer2)\r\n  }\r\n}\r\n"]}