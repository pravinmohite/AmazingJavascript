{"version":3,"file":"327.cf0ee7d704429851.js","mappings":"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","names":["OtherInterviewQuestionsComponent","constructor","loaderService","questionAnswerService","route","cd","this","setQuestionTitleByExperience","ngOnInit","topGitInterviewQuestions","UIConstants","topTypescriptInterviewQuestions","topJavascriptCodingInterviewQuestions","e","selectors","i0","AddEditInterviewQuestionsComponent","highlightService","ngZone","question","answer","rank","EventEmitter","editable","spellcheck","minHeight","maxHeight","placeholder","translate","sanitize","outline","defaultParagraphSeparator","customClasses","name","class","tag","toolbarHiddenButtons","Object","keys","editedItem","length","editMode","interviewQuestion","JSON","parse","stringify","getQuestionTypes","detectChanges","ngAfterViewInit","changes","enableImageResizeInDiv","ngOnDestroy","console","log","display","subscribe","response","questionTypes","closeAddEditPopup","popupEvent","emit","addQuestionMarkIfNotPresent","trimmedQuestion","trim","lastCharacter","charAt","formatQuestionAnswer","convertAnswerHtmlIntoString","tempDiv","replace","saveInterviewQuestionAnswer","updateQuestionAnswer","addQuestionAnswer","updateAnswer","onChange","event","insertCodeElementAtCursor","text","selection","window","getSelection","range","getRangeAt","deleteContents","node","document","createElement","innerHTML","insertNode","position","modify","cleanUpTempCodeEditorAdded","onBlur","editor","textArea","nativeElement","addCodeBlock","updateCode","value","AngularEditorComponent","ctx","ctx_r2","oxw","ctx_r4","AddEditQuestionTypesComponent","questionType","faTrash","faEdit","data","saveQuestionType","updateQuestionType","addQuestionType","deleteQuestionType","id","result","confirmAction","editQuestionType","item","ctx_r8","ctx_r10","ctx_r12","ctx_r18","ctx_r21","ctx_r24","ctx_r26","ctx_r28","QuestionAnswerPanelComponent","router","richSnippetService","renderer","elem","faTimes","faExternalLinkSquareAlt","itemsPerPage","maxSize","openNewTabText","handleRouteDataSubscription","setHeadingTitleIfEmpty","headingTitle","defaultTitle","articleFeaturedImgPath","defaultArticleImg","ngOnChanges","questionAnswerList","currentValue","currentPage","serverSideObj","highlightAll","setDataForRichSnippet","setRichSnippetData","setHeadingTitle","title","setTitle","toggleShowHideAnswer","questionAnswerItem","showAnswer","buttonText","openAddQuestionAnswerPopup","showQuestionAnswerModal","openAddQuestionTypePopup","showQuestionTypeModal","closeModal","deleteQuestionAnswer","editQuestionAnswer","clearSearch","showSearchTerm","navigate","renderPage","getQuestionAnswerLink","formatAndReturnFullUrl","addQuestionMarkIfNotPresentCondition","RelatedInterviewQuestionsComponent","handleRouteChangeEvent","freshersInterviewQuestionsObj","threeYearsExperienceInterviewQuestionsObj","fiveYearsExperienceInterviewQuestionsObj","topAngularInterviewQuestions","topHTML5InterviewQuestions","topCSS3InterviewQuestions","topJavascriptInterviewQuestions","paramMap","params","getRelatedQuestionAnswer","relatedQuestionAnswerList","formatQuestionUrl","index","entries","questionUrl","AngularInterviewQuestionsComponent","handleRouteParamChangeSubscription","handleGetQuestionAnswerListSubscription","getQuestionAnswerServerSideIfNoParams","pageNumberParamsValue","experienceFromUrl","questionTypeFromUrl","getQuestionAnswerListServerSide","currentData","totalItems","hightLightAgain","scrollToTheTopOfThePage","checkRouteParamsDataAndGetQuestionAnswer","resetServerSideObj","experience","questionAnswerDetailPageEvent","next","hideQuestionTypeDropdown","hideSearchInput","type","imgPath","get","o","ctx_r6","QuestionAnswerDetailComponent","faExclamationTriangle","adminMode","isAdmin","routeParamEvent","searchParam","formatQuestion","getQuestionAnswerByParams","updateDescription","description","split","join","routes","path","component","InterviewQuestionsRoutingModule","CommonModule","RouterModule","InterviewQuestionsModule","provide","AngularEditorService","useClass","imports","AngularEditorModule","FontAwesomeModule","FormsModule","NgxPaginationModule"],"sourceRoot":"webpack:///","sources":["./src/app/interview-questions/angular-interview-questions/other-interview-questions/other-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/other-interview-questions/other-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/add-edit-question-types/add-edit-question-types.component.html","./src/app/interview-questions/angular-interview-questions/add-edit-question-types/add-edit-question-types.component.ts","./src/app/interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component.html","./src/app/interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component.ts","./src/app/interview-questions/angular-interview-questions/related-interview-questions/related-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/related-interview-questions/related-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/angular-interview-questions.component.ts","./src/app/interview-questions/angular-interview-questions/angular-interview-questions.component.html","./src/app/interview-questions/angular-interview-questions/question-answer-detail/question-answer-detail.component.html","./src/app/interview-questions/angular-interview-questions/question-answer-detail/question-answer-detail.component.ts","./src/app/utils/custom-routes/custom-angular-routes/customAngularRoutes.ts","./src/app/interview-questions/interview-questions-routing.module.ts","./src/app/utils/custom-routes/custom-javascript-routes/customJavascriptRoutes.ts","./src/app/utils/custom-routes/custom-css-routes/customCSSRoutes.ts","./src/app/utils/custom-routes/custom-html-routes/customHtmlRoutes.ts","./src/app/utils/custom-routes/custom-git-routes/customGitRoutes.ts","./src/app/utils/custom-routes/custom-typescript-routes/customTypescriptRoutes.ts","./src/app/utils/custom-routes/custom-coding-question-routes/customCodingQuestionRoutes.ts","./src/app/utils/custom-routes/customRoutes.ts","./src/app/interview-questions/interview-questions.module.ts"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\nimport { QuestionAnswerService } from 'src/app/services/question-answer-service/question-answer.service';\nimport * as UIConstants from './../../../utils/constants';\n\n@Component({\n  selector: 'app-other-interview-questions',\n  templateUrl: './other-interview-questions.component.html',\n  styleUrls: ['./other-interview-questions.component.scss']\n})\nexport class OtherInterviewQuestionsComponent implements OnInit {\n  relatedQuestionAnswerList: any;\n  topGitInterviewQuestions: any;\n  topTypescriptInterviewQuestions: any;\n  topJavascriptCodingInterviewQuestions: any;\n\n  constructor(\n    private loaderService: LoaderService,\n    private questionAnswerService: QuestionAnswerService,\n    private route: ActivatedRoute,\n    private cd: ChangeDetectorRef\n  ) { \n     this.setQuestionTitleByExperience();\n  }\n\n  ngOnInit(): void {\n    //this.handleRouteChangeEvent();\n  }\n\n  setQuestionTitleByExperience() {\n    this.topGitInterviewQuestions = UIConstants.topGitInterviewQuestions;\n    this.topTypescriptInterviewQuestions = UIConstants.topTypescriptInterviewQuestions;\n    this.topJavascriptCodingInterviewQuestions = UIConstants.topJavascriptCodingInterviewQuestions;\n  }\n\n  // handleRouteChangeEvent() {\n  //   this.route.paramMap.subscribe(params => {\n  //      this.getRelatedQuestionAnswer();\n  //   });\n  // }\n\n  // getRelatedQuestionAnswer() {\n  //   this.loaderService.display(true);\n  //   this.questionAnswerService.getRelatedQuestionAnswer().subscribe(response=>{\n  //      this.loaderService.display(false);\n  //      this.relatedQuestionAnswerList= response;\n  //      this.formatQuestionUrl();\n  //      this.cd.detectChanges();\n  //   })\n  // }\n\n  // formatQuestionUrl() {\n  //   if(this.relatedQuestionAnswerList && this.relatedQuestionAnswerList.length >0) {\n  //     for(const [index, item] of this.relatedQuestionAnswerList.entries()) {\n  //       this.relatedQuestionAnswerList[index]['questionUrl'] = this.questionAnswerService.formatQuestionUrl(item.question);\n  //     }\n  //   }\n  // }\n}\n","<!-- related list {{relatedQuestionAnswerList | json}} -->\n\n<div class=\"panel-container related-questionanswer-container\">\n    <div class=\"panel-item\">\n        <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\n            Other Important Topics\n        </div>\n        <div class=\"panel-body open\">\n            <div class=\"panel-body-content\">\n                <div class=\"related-questions-container\">\n                    <article class=\"related-question-item\">\n                      <a [routerLink]= \"['/interview-questions/', topGitInterviewQuestions.path]\" class=\"question-link\">\n                        {{topGitInterviewQuestions.title}}\n                      </a>\n                    </article>\n                    <article class=\"related-question-item\">\n                        <a [routerLink]= \"['/interview-questions/', topTypescriptInterviewQuestions.path]\" class=\"question-link\">\n                            {{topTypescriptInterviewQuestions.title}}\n                        </a>\n                      </article>\n                      <article class=\"related-question-item\">\n                        <a [routerLink]= \"['/interview-questions/', topJavascriptCodingInterviewQuestions.path]\" class=\"question-link\">\n                            {{topJavascriptCodingInterviewQuestions.title}}\n                        </a>\n                      </article>\n                </div>\n            </div>\n        </div>\n    </div>\n</div>","<div class=\"modal edit-modal\">\r\n  <div class=\"modal-content\">\r\n    <div>\r\n      <fieldset>\r\n        <legend>Add question and answer:</legend>\r\n        <div class=\"form-group row\">\r\n          <label for=\"question\" class=\"col-3 col-form-label\">Question</label>\r\n          <div class=\"col-9\">\r\n            <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.question\"\r\n              placeholder=\"Enter Question\" type=\"text\" class=\"form-control\"></textarea>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"answer\" class=\"col-3 col-form-label\">Answer</label>\r\n          <div class=\"col-9\">     \r\n            <!-- angular editor -->\r\n            <div>  \r\n              <button id=\"addCodeBlockBtn\" class=\"btn btn-primary\" title=\"Add code block\" (click)=\"addCodeBlock()\">Add code block</button>           \r\n              <angular-editor #editor id=\"editor1\" [(ngModel)]=\"interviewQuestion.answer\" [config]=\"config1\" (ngModelChange)=\"onChange($event)\" (blur)=\"onBlur($event)\">\r\n              </angular-editor>\r\n            </div> \r\n            <!-- angular editor -->\r\n            <textarea id=\"answer\" [(ngModel)]=\"interviewQuestion.answer\" placeholder=\"Enter Answer\" name=\"answer\"\r\n              cols=\"40\" rows=\"5\" class=\"form-control textarea admin-text-area\"></textarea>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"form-group row\">\r\n          <label for=\"type\" class=\"col-3 col-form-label\">Type</label>\r\n          <div class=\"col-9\">\r\n            <select id=\"type\" name=\"type\" class=\"custom-select\" [(ngModel)]=\"interviewQuestion.questionType\">\r\n              <option *ngFor=\"let item of questionTypes\" [value]=\"item.questionType\">{{item.questionType}}</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <label for=\"text\" class=\"col-3 col-form-label\">Rank</label>\r\n          <div class=\"col-9\">\r\n            <input id=\"text\" [(ngModel)]=\"interviewQuestion.rank\" name=\"text\" placeholder=\"Enter Rank\" type=\"number\"\r\n              class=\"form-control\">\r\n          </div>\r\n        </div>\r\n        <div class=\"form-group row\">\r\n          <div class=\"offset-3 col-md-3 col-4\">\r\n            <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\"\r\n              (click)=\"saveInterviewQuestionAnswer()\">Submit</button>\r\n          </div>\r\n          <div class=\"col-md-3 col-4\">\r\n            <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\"\r\n              class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </fieldset>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, ChangeDetectorRef, Input, OnInit, Output, Renderer2, ViewChild, SimpleChange, OnChanges, NgZone, OnDestroy } from '@angular/core';\r\nimport { EventEmitter } from '@angular/core';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport { QuestionAnswerService } from \"../../../services/question-answer-service/question-answer.service\";\r\nimport { LoaderService } from './../../../services/loader-service/loader.service';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { AngularEditorComponent, AngularEditorConfig } from '@kolkov/angular-editor';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-interview-questions',\r\n  templateUrl: './add-edit-interview-questions.component.html',\r\n  styleUrls: ['./add-edit-interview-questions.component.scss']\r\n})\r\nexport class AddEditInterviewQuestionsComponent implements OnInit {\r\n  @ViewChild(AngularEditorComponent) editor: AngularEditorComponent; // ViewChild reference to the AngularEditorComponent\r\n  editorContent: string = ''; // Initialize with an empty string or appropriate content\r\n\r\n  questionTypes: any;\r\n  interviewQuestion: any = { question: '', answer: '', rank: '' };\r\n  @Input() editedItem;\r\n  editMode: Boolean = true;\r\n  @Output() popupEvent = new EventEmitter();\r\n  tempDiv = 'div';\r\n  angularEditorLogo =\"<button>Code button</button\";\r\n  currentCodeContent: any;\r\n  currentElement: any;\r\n\r\n  //tempSattu: any;\r\n  constructor(\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private loaderService: LoaderService,\r\n    private cd: ChangeDetectorRef,\r\n    private highlightService: HightlightService,\r\n    private ngZone: NgZone\r\n  ) {\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    if (Object.keys(this.editedItem).length === 0 && this.editedItem.constructor === Object)\r\n      this.editMode = false;\r\n    this.interviewQuestion = JSON.parse(JSON.stringify(this.editedItem));\r\n    this.getQuestionTypes();\r\n    this.cd.detectChanges(); \r\n  }\r\n\r\n  ngAfterViewInit(changes: SimpleChange) {\r\n    this.questionAnswerService.enableImageResizeInDiv('editor1')\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    console.log('destroy call');\r\n  }\r\n\r\n  getQuestionTypes() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(response => {\r\n      this.questionTypes = response;\r\n      this.loaderService.display(false);\r\n    });\r\n  }\r\n\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionAnswerPopup');\r\n  }\r\n\r\n  addQuestionMarkIfNotPresent(question: string) {\r\n    const trimmedQuestion = question.trim();\r\n    const lastCharacter = trimmedQuestion.charAt(trimmedQuestion.length - 1);\r\n\r\n    if (lastCharacter !== '?' && lastCharacter !== '.' && lastCharacter !== ':') {\r\n      return trimmedQuestion + ' ?';\r\n    }\r\n\r\n    return trimmedQuestion;\r\n  }\r\n\r\n  formatQuestionAnswer() {\r\n    // Convert answer HTML into formatted string\r\n    this.interviewQuestion.answer = this.questionAnswerService.convertAnswerHtmlIntoString(this.interviewQuestion.answer, this.tempDiv);\r\n    // Wrap center-aligned <img> elements in a <div> with the 'img-center' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"display: block; margin: 0 auto;\">/g, '<div class=\"img-center\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n\r\n    // Wrap right-aligned <img> elements in a <div> with the 'img-right' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"float: right;\">/g, '<div class=\"img-right\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n\r\n    // Wrap right-aligned <img> elements in a <div> with the 'img-left' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<img style=\"float: left;\">/g, '<div class=\"img-left\">')\r\n      .replace(/<\\/img>/g, '</div>');\r\n    // Wrap center-aligned content in a <div> with the 'text-center' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: center;\">/g, '<div class=\"text-center\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n\r\n    // Wrap right-aligned content in a <div> with the 'text-right' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: right;\">/g, '<div class=\"text-right\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n    // Wrap right-aligned content in a <div> with the 'text-left' class\r\n    this.interviewQuestion.answer = this.interviewQuestion.answer.replace(/<p style=\"text-align: left;\">/g, '<div class=\"text-left\">')\r\n      .replace(/<\\/p>/g, '</div>');\r\n    \r\n     // this.handleKeyUpAndScrollEventOnEditor();\r\n  }\r\n\r\n  saveInterviewQuestionAnswer() {\r\n    this.formatQuestionAnswer();\r\n    if (this.editMode) {\r\n      this.questionAnswerService.updateQuestionAnswer(this.interviewQuestion);\r\n    } else {\r\n      this.questionAnswerService.addQuestionAnswer(this.interviewQuestion);\r\n    }\r\n\r\n    this.closeAddEditPopup();\r\n  }\r\n\r\n\r\n  // angular editor\r\n  form: FormGroup;\r\n\r\n  updateAnswer() {\r\n    this.interviewQuestion.answer = ''; // Assigning a value to the answer property\r\n  }\r\n\r\n  config1: AngularEditorConfig = {\r\n    editable: true,\r\n    spellcheck: true,\r\n    minHeight: '5rem',\r\n    maxHeight: 'auto',\r\n    placeholder: 'Enter Answer here...',\r\n    translate: 'no',\r\n    sanitize: false,\r\n    // toolbarPosition: 'top',\r\n    outline: true,\r\n    // defaultFontName: 'Comic Sans MS',\r\n    // defaultFontSize: '5',\r\n    // showToolbar: false,\r\n    defaultParagraphSeparator: 'p',\r\n    customClasses: [\r\n      {\r\n        name: 'quote',\r\n        class: 'quote',\r\n      },\r\n      {\r\n        name: 'redText',\r\n        class: 'redText'\r\n      },\r\n      {\r\n        name: 'text-center',\r\n        class: 'text-center',\r\n      },\r\n      {\r\n        name: 'text-right',\r\n        class: 'text-right',\r\n      },\r\n      {\r\n        name: 'img-center',\r\n        class: 'img-center',\r\n      },\r\n      {\r\n        name: 'img-right',\r\n        class: 'img-right',\r\n      },\r\n      {\r\n        name: 'titleText',\r\n        class: 'titleText',\r\n        tag: 'h1',\r\n      },\r\n    ],\r\n    toolbarHiddenButtons: [\r\n      // ['bold', 'italic'],\r\n      // ['fontSize']\r\n    ]\r\n  };\r\n\r\n  onChange(event) {\r\n    this.interviewQuestion.answer = event; // Manually update the answer\r\n  }\r\n\r\n  insertCodeElementAtCursor(text) {\r\n    let selection: any = window.getSelection();\r\n    let range = selection.getRangeAt(0);\r\n    range.deleteContents();\r\n    let node = document.createElement('div');\r\n    node.innerHTML+= text;\r\n    range.insertNode(node);\r\n\r\n    for(let position = 0; position != text.length; position++)\r\n    {\r\n        selection.modify(\"move\", \"right\", \"character\");\r\n    };\r\n  }\r\n\r\n  cleanUpTempCodeEditorAdded() {\r\n    console.log('cleanup');\r\n  }\r\n\r\n  onBlur(event) {\r\n    console.log('blur ' + event);\r\n    this.interviewQuestion.answer = this.editor.textArea.nativeElement.innerHTML;\r\n  }\r\n\r\n  addCodeBlock() {\r\n    this.questionAnswerService.addCodeBlock();\r\n  }\r\n\r\n  updateCode(value) {\r\n    console.log('updateCode value:', value);\r\n  }\r\n\r\n}\r\n","<div class=\"modal\">\r\n    <div class=\"modal-content modal-question-types\"> \r\n        <div>\r\n         <fieldset>\r\n          <legend>Add/Edit Question Types:</legend>\r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-4 col-form-label\">Question Types</label> \r\n            <div class=\"col-8\">\r\n              <div *ngFor=\"let item of questionTypes\">\r\n                <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faEdit\" (click)=\"editQuestionType(item)\"></fa-icon><fa-icon class=\"hand-cursor delete-icon\" [icon]=\"faTrash\" (click)=\"deleteQuestionType(item._id)\"></fa-icon><span class=\"question-type-item\">{{item.questionType}}</span>\r\n              </div>\r\n            </div>\r\n          </div>  \r\n          <div class=\"form-group row\">\r\n            <label for=\"question\" class=\"col-4 col-form-label\">Add/Edit Question Type</label> \r\n            <div class=\"col-8\">\r\n              <textarea id=\"question\" name=\"question\" [(ngModel)]=\"interviewQuestion.questionType\" placeholder=\"Enter Question\" type=\"text\" class=\"form-control\"></textarea>\r\n            </div>\r\n          </div>     \r\n          <div class=\"form-group row\">\r\n            <div class=\"offset-4 col-md-3 col-4\">\r\n              <button name=\"submit\" type=\"submit\" class=\"btn btn-primary btn-full-width\" (click)=\"saveQuestionType()\">{{editMode==true?'Update':'Submit'}}</button>\r\n            </div>\r\n            <div class=\"col-md-3 col-4\">\r\n             <button name=\"submit\" (click)=\"closeAddEditPopup()\" type=\"submit\" class=\"btn btn-danger btn-full-width\">Cancel</button>\r\n            </div>\r\n          </div>\r\n         </fieldset> \r\n        </div>\r\n    </div>\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {QuestionAnswerService} from './../../../services/question-answer-service/question-answer.service';\r\nimport { faTrash,faEdit } from '@fortawesome/free-solid-svg-icons';\r\nimport {LoaderService} from './../../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-add-edit-question-types',\r\n  templateUrl: './add-edit-question-types.component.html',\r\n  styleUrls: ['./add-edit-question-types.component.scss']\r\n})\r\nexport class AddEditQuestionTypesComponent implements OnInit {\r\n\r\n  @Output() popupEvent=new EventEmitter();\r\n  interviewQuestion:any={questionType:\"\"};\r\n  questionTypes:any;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  editMode=false;\r\n  constructor(private questionAnswerService:QuestionAnswerService,private loaderService:LoaderService) { }\r\n\r\n  ngOnInit(): void {\r\n    this.getQuestionTypes();\r\n  }\r\n\r\n  getQuestionTypes() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getQuestionTypes().subscribe(data=>{\r\n      this.questionTypes=data;\r\n      this.loaderService.display(false);\r\n    })\r\n  }\r\n\r\n  closeAddEditPopup() {\r\n    this.popupEvent.emit('closeQuestionTypesPopup');\r\n  }\r\n\r\n  saveQuestionType() {\r\n    this.loaderService.display(true);\r\n    if(this.editMode) {\r\n      this.questionAnswerService.updateQuestionType(this.interviewQuestion).subscribe(data=>{\r\n        this.getQuestionTypes();\r\n        this.interviewQuestion={questionType:''};\r\n        this.editMode=false;\r\n        this.loaderService.display(false);\r\n      })\r\n    }\r\n    else {\r\n      this.questionAnswerService.addQuestionType(this.interviewQuestion).subscribe(data=>{\r\n        this.getQuestionTypes();\r\n        this.interviewQuestion={questionType:''};\r\n        this.loaderService.display(false);\r\n      })\r\n   }\r\n  }\r\n\r\n  deleteQuestionType(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.deleteQuestionType(id).subscribe(data=>{\r\n      this.getQuestionTypes();\r\n      this.loaderService.display(false);\r\n    })\r\n   }\r\n  }\r\n\r\n  editQuestionType(item){\r\n    this.interviewQuestion=JSON.parse(JSON.stringify(item));\r\n    this.editMode=true;\r\n  }\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"offset-md-1 col-md-8 col-12 main-questions-container\">\r\n      <article class=\"panel-container multiple-questions-container\" [ngClass]=\"{'admin-panel':adminMode}\">\r\n        <b>\r\n          <h1 class=\"page-heading\">{{headingTitle}}</h1>\r\n          <div class=\"featured-articleimg-container\" *ngIf=\"articleFeaturedImgPath\">\r\n            <img class=\"featured-article-img\" alt=\"{{headingTitle}}\" src={{articleFeaturedImgPath}}/>\r\n          </div>\r\n        </b>\r\n        <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <button class=\"col-md-3 col-5 btn add-questions-btn hand-cursor\" *ngIf=\"adminMode\"\r\n              (click)='openAddQuestionAnswerPopup()'>+ Add Q/A</button>\r\n            <button class=\"col-md-3 col-6 btn add-questions-btn hand-cursor\" *ngIf=\"adminMode\"\r\n              (click)='openAddQuestionTypePopup()'>+ Add/Edit Q/A type</button>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"showSearchTerm\" class=\"badge badge-secondary badge-pill search-term-container\">\r\n          <span class=\"search-text\">{{searchKey}}</span>\r\n          <span class=\"badge badge-light clear-search\" (click)=\"clearSearch()\">\r\n            <fa-icon [icon]=\"faTimes\"></fa-icon>\r\n          </span>\r\n        </div>\r\n        <div class=\"question-answer-container\">\r\n          <div *ngFor=\"let questionAnswerItem of questionAnswerList | paginate : {\r\n              itemsPerPage: itemsPerPage,\r\n              currentPage: currentPage,\r\n              totalItems: totalItems\r\n            };let i=index\">\r\n            <div class=\"panel-item\">\r\n              <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-xl-10 col-md-9\">\r\n                    <!-- test item -->\r\n                    <span>{{i+1 + (currentPage-1)*itemsPerPage}}. <h2 class=\"question-text\"\r\n                        [innerHtml]=\"addQuestionMarkIfNotPresent(questionAnswerItem.question)\"></h2></span>\r\n                  </div>\r\n                  <div class=\"col-xl-2 col-md-3 action-btns\">\r\n                    <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor edit-icon\" [icon]=\"faEdit\"\r\n                      (click)=\"editQuestionAnswer(questionAnswerItem)\"></fa-icon>\r\n                    <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor delete-icon\" [icon]=\"faTrash\"\r\n                      (click)=\"deleteQuestionAnswer(questionAnswerItem._id)\"></fa-icon><button\r\n                      class=\"showHideAnswer hand-cursor btn-show-hide\"\r\n                      (click)=\"toggleShowHideAnswer(questionAnswerItem)\">{{questionAnswerItem.buttonText?questionAnswerItem.buttonText:\"Show\"}}</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"panel-body\" [ngClass]=\"{'open': questionAnswerItem.showAnswer ==true}\">\r\n                <div class=\"panel-body-content\">\r\n                  <div [innerHtml]=\"questionAnswerItem.answer\">\r\n                  </div>\r\n                  <div class=\"open-linkseperate-container\">\r\n                    <a [title]=\"openNewTabText\" target=\"_blank\"\r\n                      [routerLink]=\"['/interview-questions/', getQuestionAnswerLink(questionAnswerItem.question)]\"\r\n                      class=\"question-link\">\r\n                      <fa-icon class=\"hand-cursor edit-icon\" [icon]=\"faExternalLinkSquareAlt\"></fa-icon>\r\n                    </a>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div class=\"affiliate-ads-container\">\r\n              <!-- <app-affiliate-ads [index]=\"i\" [totalItems]=\"questionAnswerList.length\"></app-affiliate-ads> -->\r\n            </div>\r\n          </div>\r\n          <div class=\"empty-result\" *ngIf=\"questionAnswerList && questionAnswerList.length==0\">\r\n            Search results not found\r\n          </div>\r\n        </div>\r\n        <div class=\"pagination-container d-flex justify-content-center\">\r\n          <pagination-controls (pageChange)=\"renderPage($event)\" [maxSize]=\"maxSize\"></pagination-controls>\r\n        </div>\r\n      </article>\r\n      <app-other-interview-questions></app-other-interview-questions>\r\n    </div>\r\n\r\n    <div class=\"col-md-3 col-12 relation-questions-container\">\r\n      <div class=\"related-questionanswer-template\">\r\n        <app-related-interview-questions></app-related-interview-questions>\r\n      </div>\r\n      <!-- <div class=\"related-questionanswer-template\">\r\n        <app-other-interview-questions></app-other-interview-questions>\r\n      </div>    -->\r\n    </div>\r\n  </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n  <div class=\"col-12\">\r\n    <div class=\"offset-md-1 col-md-8 col-12 other-important-questionscontainer\">\r\n      <app-other-interview-questions></app-other-interview-questions>\r\n    </div>\r\n  </div>\r\n</div> -->\r\n\r\n<app-add-edit-interview-questions [editedItem]=\"editedItem\" *ngIf=\"showQuestionAnswerModal\"\r\n  (popupEvent)=\"closeModal($event)\"></app-add-edit-interview-questions>\r\n<app-add-edit-question-types *ngIf=\"showQuestionTypeModal\" (popupEvent)=\"closeModal($event)\">\r\n</app-add-edit-question-types>","import { Component, OnInit, Input, ViewChildren, QueryList, ElementRef, Renderer2, SimpleChanges } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { faTrash,faEdit, faTimes, faExternalLinkSquareAlt } from '@fortawesome/free-solid-svg-icons';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport {QuestionAnswerService} from './../../../services/question-answer-service/question-answer.service';\r\nimport {IServerSide} from './../../../interfaces/IServerSide';\r\nimport { RichSnippetService } from 'src/app/services/rich-snippet-service/rich-snippet.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-question-answer-panel',\r\n  templateUrl: './question-answer-panel.component.html',\r\n  styleUrls: ['./question-answer-panel.component.scss']\r\n})\r\nexport class QuestionAnswerPanelComponent implements OnInit {\r\n  @ViewChildren('codeContent') codeContentList:QueryList<any>;\r\n  @Input() questionAnswerList;\r\n  @Input() adminMode:boolean;\r\n  @Input() totalItems = 0;\r\n  @Input() currentPage = 1;\r\n  @Input() articleFeaturedImgPath;\r\n  showQuestionAnswerModal:Boolean=false;\r\n  showQuestionTypeModal:Boolean=false;\r\n  searchKey: any;\r\n  faTrash=faTrash;\r\n  faEdit=faEdit;\r\n  faTimes=faTimes;\r\n  faExternalLinkSquareAlt = faExternalLinkSquareAlt;\r\n  editedItem:any;\r\n  showSearchTerm: boolean = false;\r\n  itemsPerPage;\r\n  maxSize;\r\n  serverSideObj: IServerSide;\r\n  headingTitle: string;\r\n  openNewTabText: string;\r\n  defaultArticleFeaturedImgPath: string;\r\n  constructor(\r\n    private questionAnswerService:QuestionAnswerService,\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private highlightService: HightlightService,\r\n    private richSnippetService: RichSnippetService,\r\n    private renderer: Renderer2, \r\n    private elem: ElementRef\r\n    ) { \r\n      this.itemsPerPage = this.questionAnswerService.itemsPerPage;\r\n      this.maxSize = this.questionAnswerService.maxSize;\r\n      this.openNewTabText = this.questionAnswerService.openNewTabText;\r\n    }\r\n  \r\n  ngOnInit(): void {\r\n    this.handleRouteDataSubscription();\r\n  }\r\n\r\n  setHeadingTitleIfEmpty() {\r\n    if(!this.headingTitle) {\r\n      this.headingTitle = this.questionAnswerService.defaultTitle;\r\n      this.articleFeaturedImgPath = this.questionAnswerService.defaultArticleImg;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if(changes.questionAnswerList.currentValue && changes.questionAnswerList.currentValue.length > 0) {\r\n        this.currentPage = this.questionAnswerService.serverSideObj.currentPage;\r\n        this.highlightService.highlightAll();\r\n        this.setDataForRichSnippet(changes.questionAnswerList.currentValue);\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.setHeadingTitleIfEmpty();\r\n  }\r\n\r\n  setDataForRichSnippet(questionAnswerList) {\r\n    this.richSnippetService.setRichSnippetData(questionAnswerList, this.renderer);\r\n  }\r\n\r\n  setHeadingTitle(title) {\r\n    this.headingTitle = title;\r\n    this.questionAnswerService.defaultTitle = title;\r\n  }\r\n\r\n  handleRouteDataSubscription() {\r\n    this.route.data.subscribe(response=>{\r\n       if(response && response.title) {\r\n         this.questionAnswerService.setTitle(response.title);\r\n         this.setHeadingTitle(response.headingTitle)\r\n       }\r\n    })\r\n  }\r\n\r\n  toggleShowHideAnswer(questionAnswerItem) {\r\n    if(!questionAnswerItem.showAnswer) {\r\n      questionAnswerItem.showAnswer=true;\r\n      questionAnswerItem.buttonText=\"Hide\"\r\n      this.highlightService.highlightAll();\r\n    }\r\n    else {\r\n     questionAnswerItem.showAnswer=false;\r\n     questionAnswerItem.buttonText=\"Show\"\r\n    }\r\n  }\r\n\r\n  openAddQuestionAnswerPopup() {\r\n    this.showQuestionAnswerModal=true;\r\n    this.editedItem={};\r\n  }\r\n\r\n  openAddQuestionTypePopup(){\r\n    this.showQuestionTypeModal=true;\r\n  }\r\n\r\n  closeModal(event) {\r\n    if(event==\"closeQuestionAnswerPopup\") {\r\n      this.showQuestionAnswerModal=false;\r\n    }\r\n    else {\r\n      this.showQuestionTypeModal=false;\r\n    } \r\n  }\r\n\r\n  deleteQuestionAnswer(id) {\r\n    let result=this.questionAnswerService.confirmAction();\r\n    if(result) {\r\n     this.questionAnswerService.deleteQuestionAnswer(id);\r\n    }\r\n  }\r\n\r\n  editQuestionAnswer(data) {\r\n    this.editedItem=data;\r\n    this.showQuestionAnswerModal=true;\r\n  }\r\n\r\n  clearSearch(){\r\n    this.showSearchTerm = false;\r\n    this.router.navigate(['']);\r\n  }\r\n\r\n  renderPage(event: number) {\r\n    this.currentPage = event;\r\n    this.questionAnswerService.serverSideObj.currentPage = this.currentPage;\r\n    this.router.navigate([\"interview-questions/page\", this.currentPage]);\r\n  }\r\n\r\n  getQuestionAnswerLink(question) {\r\n    let result = this.questionAnswerService.formatAndReturnFullUrl(question);\r\n    return result;\r\n  }\r\n\r\n //add \"?\" at the end of question, if not present\r\n  addQuestionMarkIfNotPresent(question: string): string {\r\n    return this.questionAnswerService.addQuestionMarkIfNotPresentCondition(question);\r\n  }\r\n}\r\n","<!-- related list {{relatedQuestionAnswerList | json}} -->\n\n<div class=\"panel-container related-questionanswer-container\">\n    <div class=\"panel-item\">\n        <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\n            Related questions\n        </div>\n        <div class=\"panel-body open\">\n            <div class=\"panel-body-content\">\n                <div class=\"related-questions-container\">\n                    <article *ngFor=\"let item of relatedQuestionAnswerList;let i = index\"\n                        class=\"related-question-item\"> \n                        <a [routerLink] = \"['/interview-questions/', item.questionUrl]\" class=\"question-link\">\n                            {{item.question}}\n                        </a>\n                    </article>\n                    <article class=\"related-question-item\">\n                      <a [routerLink]= \"['/interview-questions/', freshersInterviewQuestionsObj.path]\" class=\"question-link\">\n                        {{freshersInterviewQuestionsObj.title}}\n                      </a>\n                    </article>\n                    <article class=\"related-question-item\">\n                        <a [routerLink]= \"['/interview-questions/', threeYearsExperienceInterviewQuestionsObj.path]\" class=\"question-link\">\n                            {{threeYearsExperienceInterviewQuestionsObj.title}}\n                        </a>\n                      </article>\n                      <article class=\"related-question-item\">\n                        <a [routerLink]= \"['/interview-questions/', fiveYearsExperienceInterviewQuestionsObj.path]\" class=\"question-link\">\n                            {{fiveYearsExperienceInterviewQuestionsObj.title}}\n                        </a>\n                      </article>\n                      <article class=\"related-question-item\">\n                        <a [routerLink]= \"['/interview-questions/', topAngularInterviewQuestions.path, {data:topAngularInterviewQuestions}]\" class=\"question-link\">\n                            {{topAngularInterviewQuestions.title}}\n                        </a>\n                      </article>\n                      <article class=\"related-question-item\">\n                        <a [routerLink]= \"['/interview-questions/', topHTML5InterviewQuestions.path, {data:topHTML5InterviewQuestions}]\" class=\"question-link\">\n                            {{topHTML5InterviewQuestions.title}}\n                        </a>\n                      </article>\n                      <article class=\"related-question-item\">\n                        <a [routerLink]= \"['/interview-questions/', topCSS3InterviewQuestions.path, {data:topCSS3InterviewQuestions}]\" class=\"question-link\">\n                            {{topCSS3InterviewQuestions.title}}\n                        </a>\n                      </article>\n                      <article class=\"related-question-item\">\n                        <a [routerLink]= \"['/interview-questions/', topJavascriptInterviewQuestions.path, {data:topJavascriptInterviewQuestions}]\" class=\"question-link\">\n                            {{topJavascriptInterviewQuestions.title}}\n                        </a>\n                      </article>\n                </div>\n            </div>\n        </div>\n    </div>\n\n</div>","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\r\nimport { QuestionAnswerService } from 'src/app/services/question-answer-service/question-answer.service';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport * as UIConstants from './../../../utils/constants';\r\n\r\n@Component({\r\n  selector: 'app-related-interview-questions',\r\n  templateUrl: './related-interview-questions.component.html',\r\n  styleUrls: ['./related-interview-questions.component.scss']\r\n})\r\nexport class RelatedInterviewQuestionsComponent implements OnInit {\r\n  relatedQuestionAnswerList: any;\r\n  freshersInterviewQuestionsObj: any;\r\n  threeYearsExperienceInterviewQuestionsObj: any;\r\n  fiveYearsExperienceInterviewQuestionsObj: any;\r\n  topAngularInterviewQuestions: any;\r\n  topHTML5InterviewQuestions: any;\r\n  topCSS3InterviewQuestions: any;\r\n  topJavascriptInterviewQuestions: any;\r\n\r\n  constructor(\r\n    private loaderService: LoaderService,\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private route: ActivatedRoute,\r\n    private cd: ChangeDetectorRef,\r\n    private highlightService: HightlightService\r\n  ) { \r\n     this.setQuestionTitleByExperience();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.handleRouteChangeEvent();\r\n  }\r\n\r\n  setQuestionTitleByExperience() {\r\n    this.freshersInterviewQuestionsObj = UIConstants.topFresherFrontendInterviewQuestions;\r\n    this.threeYearsExperienceInterviewQuestionsObj = UIConstants.topThreeYearsExperienceFrontendInterviewQuestions;\r\n    this.fiveYearsExperienceInterviewQuestionsObj = UIConstants.topFiveYearsExperienceFrontendInterviewQuestions;\r\n    this.topAngularInterviewQuestions = UIConstants.topAngularInterviewQuestions;\r\n    this.topHTML5InterviewQuestions = UIConstants.topHTML5InterviewQuestions;\r\n    this.topCSS3InterviewQuestions = UIConstants.topCSS3InterviewQuestions;\r\n    this.topJavascriptInterviewQuestions = UIConstants.topJavascriptInterviewQuestions;\r\n  }\r\n\r\n  handleRouteChangeEvent() {\r\n    this.route.paramMap.subscribe(params => {\r\n       this.getRelatedQuestionAnswer();\r\n    });\r\n  }\r\n\r\n  getRelatedQuestionAnswer() {\r\n    this.loaderService.display(true);\r\n    this.questionAnswerService.getRelatedQuestionAnswer().subscribe(response=>{\r\n       this.loaderService.display(false);\r\n       this.relatedQuestionAnswerList= response;\r\n       this.formatQuestionUrl();\r\n       this.cd.detectChanges();\r\n    })\r\n  }\r\n\r\n  formatQuestionUrl() {\r\n    if (this.relatedQuestionAnswerList && this.relatedQuestionAnswerList.length > 0) {\r\n      for (const [index, item] of this.relatedQuestionAnswerList.entries()) {\r\n        this.relatedQuestionAnswerList[index]['questionUrl'] = this.questionAnswerService.formatQuestionUrl(item.question);\r\n        // Call addQuestionMarkIfNotPresentCondition to add a question mark if needed\r\n        this.relatedQuestionAnswerList[index]['question'] = this.questionAnswerService.addQuestionMarkIfNotPresentCondition(item.question);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\r\nimport { QuestionAnswerService } from \"../../services/question-answer-service/question-answer.service\";\r\nimport { LoaderService } from './../../services/loader-service/loader.service';\r\n\r\n@Component({\r\n  selector: 'app-angular-interview-questions',\r\n  templateUrl: './angular-interview-questions.component.html',\r\n  styleUrls: ['./angular-interview-questions.component.scss']\r\n})\r\nexport class AngularInterviewQuestionsComponent implements OnInit {\r\n  questionAnswerList: any;\r\n  questionTypeFromUrl: any;\r\n  experienceFromUrl: any;\r\n  totalItems: any;\r\n  currentPage: any;\r\n  pageNumberParamsValue: any;\r\n  articleFeaturedImgPath: any;\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private questionAnswerService: QuestionAnswerService,\r\n    private loaderService: LoaderService,\r\n    private highlightService: HightlightService,\r\n  ) {\r\n    this.handleRouteDataSubscription();\r\n    this.handleRouteParamChangeSubscription();\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.handleGetQuestionAnswerListSubscription();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.getQuestionAnswerServerSideIfNoParams();\r\n  }\r\n\r\n  getQuestionAnswerServerSideIfNoParams() {\r\n    if (!this.pageNumberParamsValue && !this.experienceFromUrl && !this.questionTypeFromUrl) {\r\n      this.questionAnswerService.getQuestionAnswerListServerSide();\r\n    }\r\n  }\r\n\r\n  handleGetQuestionAnswerListSubscription() {\r\n    this.questionAnswerService.currentData.subscribe((data) => {\r\n      if (data && data['result']) {\r\n        this.questionAnswerList = data['result'];\r\n        this.totalItems = data['totalItems'];\r\n        this.loaderService.display(false);\r\n        this.highlightService.hightLightAgain();\r\n        this.questionAnswerService.scrollToTheTopOfThePage();\r\n      }\r\n    })\r\n    this.checkRouteParamsDataAndGetQuestionAnswer();\r\n  }\r\n\r\n  checkRouteParamsDataAndGetQuestionAnswer() {\r\n    if ((this.experienceFromUrl || this.experienceFromUrl == 0) && (this.questionTypeFromUrl && this.questionTypeFromUrl!=='all')) {\r\n      this.questionAnswerService.resetServerSideObj();\r\n      this.questionAnswerService.serverSideObj.experience = this.experienceFromUrl;\r\n      this.questionAnswerService.serverSideObj.questionType = this.questionTypeFromUrl;\r\n      this.questionAnswerService.questionAnswerDetailPageEvent.next({\r\n        hideQuestionTypeDropdown: true,\r\n        hideSearchInput: false\r\n      });\r\n      this.questionAnswerService.getQuestionAnswerListServerSide();\r\n    } else if (this.experienceFromUrl || this.experienceFromUrl == 0) {\r\n      this.questionAnswerService.resetServerSideObj();\r\n      this.questionAnswerService.serverSideObj.experience = this.experienceFromUrl;\r\n      this.questionAnswerService.questionAnswerDetailPageEvent.next({\r\n        hideQuestionTypeDropdown: false,\r\n        hideSearchInput: false\r\n      });\r\n      this.questionAnswerService.getQuestionAnswerListServerSide();\r\n    } else if (this.questionTypeFromUrl) {\r\n      this.questionAnswerService.resetServerSideObj();\r\n      this.questionAnswerService.serverSideObj.questionType = this.questionTypeFromUrl;\r\n      this.questionAnswerService.questionAnswerDetailPageEvent.next({\r\n        hideQuestionTypeDropdown: true,\r\n        hideSearchInput: false\r\n      });\r\n      this.questionAnswerService.getQuestionAnswerListServerSide();\r\n    }\r\n  }\r\n\r\n  handleRouteDataSubscription() {\r\n    this.route.data.subscribe(response => {\r\n      this.experienceFromUrl = response.experience;\r\n      this.questionTypeFromUrl = response.type;\r\n      this.articleFeaturedImgPath = response.imgPath;\r\n    })\r\n  }\r\n\r\n  handleRouteParamChangeSubscription() {\r\n    this.route.paramMap.subscribe(params => {\r\n       this.pageNumberParamsValue =params.get('pageNumber');\r\n       if(this.pageNumberParamsValue) {\r\n          this.questionAnswerService.serverSideObj.currentPage = this.pageNumberParamsValue? this.pageNumberParamsValue: this.currentPage;\r\n          this.currentPage = this.questionAnswerService.serverSideObj.currentPage;\r\n          this.questionAnswerService.getQuestionAnswerListServerSide(this.questionAnswerService.serverSideObj); \r\n       }\r\n    });\r\n  }\r\n\r\n  resetServerSideObj() {\r\n    this.questionAnswerService.resetServerSideObj();\r\n  }\r\n}\r\n","<app-question-answer-panel \r\n[questionAnswerList]=\"questionAnswerList\" \r\n[adminMode]=\"false\"\r\n[totalItems]=\"totalItems\"\r\n[currentPage]=\"currentPage\"\r\n[articleFeaturedImgPath]=\"articleFeaturedImgPath\"\r\n>\r\n</app-question-answer-panel>","<div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"offset-md-1 col-md-8 col-12 main-questions-container\">\r\n            <div class=\"panel-container question-answer-detailcontainer\"\r\n                *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n                <div class=\"panel-item\">\r\n                    <div class=\"panel-header\" role=\"img\" aria-label=\"frontend interview questions\">\r\n                        <div class=\"row\">\r\n                            <div class=\"col-xl-10 col-md-9\">\r\n                                <header>\r\n                                    <h1 class=\"question-text\" [innerHtml]=\"questionAnswerItem.question\"></h1>\r\n                                </header>\r\n                            </div>\r\n                            <div class=\"col-xl-2 col-md-3 action-btns\">\r\n                                <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor edit-icon\" [icon]=\"faEdit\"\r\n                                    (click)=\"editQuestionAnswer(questionAnswerItem)\">\r\n                                </fa-icon>\r\n                                <fa-icon *ngIf=\"adminMode\" class=\"hand-cursor delete-icon\" [icon]=\"faTrash\"\r\n                                    (click)=\"deleteQuestionAnswer(questionAnswerItem._id)\">\r\n                                </fa-icon>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"panel-body\" [ngClass]=\"{'open': true}\">\r\n                        <div class=\"panel-body-content\" [innerHtml]=\"questionAnswerItem.answer\"></div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"affiliate-ads-container\">\r\n                    <!-- <app-affiliate-ads></app-affiliate-ads> -->\r\n                </div>\r\n            </div>\r\n            <app-other-interview-questions *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n            </app-other-interview-questions>\r\n            <div class=\"question-error-container\" *ngIf=\"questionAnswerItem && questionAnswerItem.invalidQuestion\">\r\n                <div class=\"error-content\">\r\n                    <div class=\"row\">\r\n                        <div class=\"col-2\">\r\n                            <fa-icon class=\"hand-cursor error-triangle-icon\" [icon]=\"faExclamationTriangle\">\r\n                            </fa-icon>\r\n                        </div>\r\n                        <div class=\"col-10\">\r\n                            <div class=\"error-header\">\r\n                                <span>Page not found</span>\r\n                            </div>\r\n                            <div class=\"error-inner-content\">\r\n                                <span>We're sorry, we couldn't find the page you requested.</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n        <div class=\"col-md-3 col-12 detail-relatedquestion-container\">\r\n            <div class=\"related-questionanswer-template\"\r\n                *ngIf=\"questionAnswerItem && questionAnswerItem.question && !questionAnswerItem.invalidQuestion\">\r\n                <app-related-interview-questions></app-related-interview-questions>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<!-- <div class=\"row\">\r\n    <div class=\"col-12\">\r\n        <div class=\"offset-md-1 col-md-8 col-12 other-important-questionscontainer\">\r\n            <app-other-interview-questions></app-other-interview-questions>\r\n        </div>\r\n    </div>\r\n</div> -->","import { Component, OnInit, Renderer2 } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { faTrash,faEdit, faExclamationTriangle } from '@fortawesome/free-solid-svg-icons';\nimport { LoaderService } from 'src/app/services/loader-service/loader.service';\nimport { QuestionAnswerService } from 'src/app/services/question-answer-service/question-answer.service';\nimport { Title } from \"@angular/platform-browser\";\nimport { HightlightService } from 'src/app/services/highlight-service/hightlight.service';\nimport { RichSnippetService } from 'src/app/services/rich-snippet-service/rich-snippet.service';\n\n@Component({\n  selector: 'app-question-answer-detail',\n  templateUrl: './question-answer-detail.component.html',\n  styleUrls: ['./question-answer-detail.component.scss']\n})\nexport class QuestionAnswerDetailComponent implements OnInit {\n\n  faEdit = faEdit;\n  faTrash = faTrash;\n  faExclamationTriangle = faExclamationTriangle;\n  searchParam: string;\n  questionAnswerItem: any;\n  adminMode = false;\n  constructor(\n    private route: ActivatedRoute,\n    private loaderService: LoaderService,\n    private questionAnswerService: QuestionAnswerService,\n    private title: Title,\n    private highlightService: HightlightService,\n    private richSnippetService: RichSnippetService,\n    private renderer: Renderer2, \n  ) { \n    this.adminMode = this.questionAnswerService.isAdmin;\n  }\n\n  ngOnInit(): void {\n     this.routeParamEvent();\n  }\n\n  routeParamEvent() {\n    this.route.paramMap.subscribe(params => {\n      if(params) {\n        this.searchParam = this.formatQuestion(params);\n        this.questionAnswerService.questionAnswerDetailPageEvent.next({\n          hideQuestionTypeDropdown: true,\n          hideSearchInput: true\n        });\n        this.getQuestionAnswerByParams();\n      }\n    });\n  }\n\n  setDataForRichSnippet() {\n    this.richSnippetService.setRichSnippetData([this.questionAnswerItem], this.renderer);\n  }\n\n  setTitle(title) {\n    this.questionAnswerService.setTitle(title);\n    this.setDataForRichSnippet();\n  }\n\n  updateDescription(description) {\n    this.questionAnswerService.updateDescription(description)\n  }\n\n  getQuestionAnswerByParams() {\n    this.loaderService.display(true);\n    this.questionAnswerService.getQuestionAnswerByParams(this.searchParam).subscribe(response=>{\n      this.loaderService.display(false);\n      this.questionAnswerItem = response;\n      this.setTitle(this.questionAnswerItem.question)\n      this.updateDescription(this.questionAnswerItem.answer);\n      this.highlightService.highlightAll();\n      this.questionAnswerService.scrollToTheTopOfThePage();\n    })\n  }\n\n  formatQuestion(params) {\n    let result = params.get('question').split('-');\n    if(result) {\n      return result.join(' ');\n    }\n    else {\n      return null;\n    }\n  }\n\n  editQuestionAnswer(editedItem) {\n    console.log('editeditem', editedItem);\n  }\n\n  deleteQuestionAnswer(item) {\n    console.log('deleteditem', item);\n  }\n}\n","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customAngularRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topFresherAngularInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherAngularInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherAngularInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherAngularInterviewQuestions.experience,\r\n            type: UIConstants.topFresherAngularInterviewQuestions.type,\r\n            imgPath: UIConstants.topFresherAngularInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.type,\r\n            imgPath: UIConstants.topThreeYearsExperienceAngularInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.type,\r\n            imgPath: UIConstants.topFiveYearsExperienceAngularInterviewQuestions.imgPath\r\n        }\r\n    }\r\n];","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule , Routes } from '@angular/router';\r\nimport { AngularInterviewQuestionsComponent } from './angular-interview-questions/angular-interview-questions.component';\r\nimport { QuestionAnswerDetailComponent } from './angular-interview-questions/question-answer-detail/question-answer-detail.component';\r\nimport * as UIConstants from './../utils/constants';\r\nimport { customRoutes } from '../utils/custom-routes/customRoutes';\r\n\r\nconst routes: Routes = [\r\n  ...customRoutes,\r\n  {\r\n    path:':question', component: QuestionAnswerDetailComponent\r\n  },\r\n  {\r\n    path: 'page/:pageNumber',\r\n    component: AngularInterviewQuestionsComponent,\r\n  },\r\n  {\r\n    path: 'page/:pageNumber/:searchTerm/:questionType',\r\n    component: AngularInterviewQuestionsComponent,\r\n  },\r\n  {\r\n    path: '',\r\n    component: AngularInterviewQuestionsComponent,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class InterviewQuestionsRoutingModule { }\r\n","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customJavascriptRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topFresherJavascriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherJavascriptInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherJavascriptInterviewQuestions.experience,\r\n            type: UIConstants.topFresherJavascriptInterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceJavascriptInterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceJavascriptInterviewQuestions.type\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customCssRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topFresherCssInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherCssInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherCssInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherCssInterviewQuestions.experience,\r\n            type: UIConstants.topFresherCssInterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceCssInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceCssInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceCssInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceCssInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceCssInterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceCssInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceCssInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceCssInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceCssInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceCssInterviewQuestions.type\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customHtmlRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topFresherHtml5InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherHtml5InterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherHtml5InterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherHtml5InterviewQuestions.experience,\r\n            type: UIConstants.topFresherHtml5InterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceHtml5InterviewQuestions.type\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceHtml5InterviewQuestions.type\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customGitRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topGitInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topGitInterviewQuestions.title,\r\n            headingTitle: UIConstants.topGitInterviewQuestions.headingTitle,\r\n            type: UIConstants.topGitInterviewQuestions.type,\r\n            imgPath: UIConstants.topGitInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFresherGitInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherGitInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherGitInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherGitInterviewQuestions.experience,\r\n            type: UIConstants.topFresherGitInterviewQuestions.type,\r\n            imgPath: UIConstants.topFresherGitInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceGitInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceGitInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceGitInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceGitInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceGitInterviewQuestions.type,\r\n            imgPath: UIConstants.topThreeYearsExperienceGitInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceGitInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceGitInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceGitInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceGitInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceGitInterviewQuestions.type,\r\n            imgPath: UIConstants.topFiveYearsExperienceGitInterviewQuestions.imgPath\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customTypescriptRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topTypescriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topTypescriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topTypescriptInterviewQuestions.headingTitle,\r\n            type: UIConstants.topTypescriptInterviewQuestions.type,\r\n            imgPath: UIConstants.topTypescriptInterviewQuestions.imgPath\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../../constants';\r\n\r\nexport const customCodingQuestionsRoutes: Routes = [\r\n    {\r\n        path: UIConstants.topJavascriptCodingInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topJavascriptCodingInterviewQuestions.title,\r\n            headingTitle: UIConstants.topJavascriptCodingInterviewQuestions.headingTitle,\r\n            type: UIConstants.topJavascriptCodingInterviewQuestions.type\r\n        }\r\n    }\r\n];","import { Routes } from \"@angular/router\";\r\nimport { AngularInterviewQuestionsComponent } from \"../../interview-questions/angular-interview-questions/angular-interview-questions.component\";\r\nimport * as UIConstants from '../constants';\r\nimport { customAngularRoutes } from \"./custom-angular-routes/customAngularRoutes\";\r\nimport { customCodingQuestionsRoutes } from \"./custom-coding-question-routes/customCodingQuestionRoutes\";\r\nimport { customCssRoutes } from \"./custom-css-routes/customCSSRoutes\";\r\nimport { customGitRoutes } from \"./custom-git-routes/customGitRoutes\";\r\nimport { customHtmlRoutes } from \"./custom-html-routes/customHtmlRoutes\";\r\nimport { customJavascriptRoutes } from \"./custom-javascript-routes/customJavascriptRoutes\";\r\nimport { customTypescriptRoutes } from \"./custom-typescript-routes/customTypescriptRoutes\";\r\n\r\nexport const customRoutes: Routes = [\r\n    ...customAngularRoutes,\r\n    ...customJavascriptRoutes,\r\n    ...customCssRoutes,\r\n    ...customHtmlRoutes,\r\n    ...customGitRoutes,\r\n    ...customTypescriptRoutes,\r\n    ...customCodingQuestionsRoutes,\r\n    {\r\n        path: UIConstants.topFrontendInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFrontendInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFrontendInterviewQuestions.headingTitle,\r\n            type: UIConstants.topFrontendInterviewQuestions.type,\r\n            imgPath: UIConstants.topFrontendInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topHTML5InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topHTML5InterviewQuestions.title,\r\n            headingTitle: UIConstants.topHTML5InterviewQuestions.headingTitle,\r\n            type: UIConstants.topHTML5InterviewQuestions.type,\r\n            imgPath: UIConstants.topHTML5InterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topCSS3InterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topCSS3InterviewQuestions.title,\r\n            headingTitle: UIConstants.topCSS3InterviewQuestions.headingTitle,\r\n            type: UIConstants.topCSS3InterviewQuestions.type,\r\n            imgPath: UIConstants.topCSS3InterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topJavascriptInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topJavascriptInterviewQuestions.headingTitle,\r\n            type: UIConstants.topJavascriptInterviewQuestions.type,\r\n            imgPath: UIConstants.topJavascriptInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topJavascriptInterviewQuestions.pathOld,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topJavascriptInterviewQuestions.title,\r\n            headingTitle: UIConstants.topJavascriptInterviewQuestions.headingTitle,\r\n            type: UIConstants.topJavascriptInterviewQuestions.type,\r\n            imgPath: UIConstants.topJavascriptInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topAngularInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topAngularInterviewQuestions.title,\r\n            headingTitle: UIConstants.topAngularInterviewQuestions.headingTitle,\r\n            type: UIConstants.topAngularInterviewQuestions.type,\r\n            imgPath: UIConstants.topAngularInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFresherFrontendInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFresherFrontendInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFresherFrontendInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFresherFrontendInterviewQuestions.experience,\r\n            type: UIConstants.topFresherFrontendInterviewQuestions.type,\r\n            imgPath: UIConstants.topFresherFrontendInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.title,\r\n            headingTitle: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.experience,\r\n            type: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.type,\r\n            imgPath: UIConstants.topThreeYearsExperienceFrontendInterviewQuestions.imgPath\r\n        }\r\n    },\r\n    {\r\n        path: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.path,\r\n        component: AngularInterviewQuestionsComponent,\r\n        data: {\r\n            title: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.title,\r\n            headingTitle: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.headingTitle,\r\n            experience: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.experience,\r\n            type: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.type,\r\n            imgPath: UIConstants.topFiveYearsExperienceFrontendInterviewQuestions.imgPath\r\n        }\r\n    }\r\n];","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AngularInterviewQuestionsComponent } from '../interview-questions/angular-interview-questions/angular-interview-questions.component';\r\nimport { InterviewQuestionsRoutingModule } from './interview-questions-routing.module';\r\nimport { QuestionAnswerPanelComponent } from '../interview-questions/angular-interview-questions/question-answer-panel/question-answer-panel.component';\r\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\r\nimport { AddEditInterviewQuestionsComponent } from './angular-interview-questions/add-edit-interview-questions/add-edit-interview-questions.component';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AddEditQuestionTypesComponent } from './angular-interview-questions/add-edit-question-types/add-edit-question-types.component';\r\nimport { AffiliateAdsComponent } from './angular-interview-questions/question-answer-panel/affiliate-ads/affiliate-ads.component';\r\nimport { QuestionAnswerDetailComponent } from './angular-interview-questions/question-answer-detail/question-answer-detail.component';\r\nimport { RelatedInterviewQuestionsComponent } from './angular-interview-questions/related-interview-questions/related-interview-questions.component';\r\nimport { RouterModule } from '@angular/router';\r\nimport { NgxPaginationModule } from 'ngx-pagination';\r\nimport { OtherInterviewQuestionsComponent } from './angular-interview-questions/other-interview-questions/other-interview-questions.component';\r\nimport { AngularEditorModule, AngularEditorService } from '@kolkov/angular-editor';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AngularInterviewQuestionsComponent,\r\n    QuestionAnswerPanelComponent,\r\n    AddEditInterviewQuestionsComponent,\r\n    AddEditQuestionTypesComponent,\r\n    AffiliateAdsComponent,\r\n    QuestionAnswerDetailComponent,\r\n    RelatedInterviewQuestionsComponent,\r\n    OtherInterviewQuestionsComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    InterviewQuestionsRoutingModule,AngularEditorModule,\r\n    FontAwesomeModule,\r\n    FormsModule,\r\n    RouterModule,\r\n    NgxPaginationModule,\r\n  ],\r\n  providers: [\r\n    { provide: AngularEditorService, useClass: AngularEditorService },\r\n  ],\r\n  exports:[\r\n    AngularInterviewQuestionsComponent,\r\n    QuestionAnswerPanelComponent,\r\n    QuestionAnswerDetailComponent\r\n  ]\r\n})\r\nexport class InterviewQuestionsModule { }\r\n"]}